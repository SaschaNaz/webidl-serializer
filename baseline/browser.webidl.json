{
  "callbackFunctions": [
    {
      "name": "BlobCallback", "type": "void",
      "arguments": [{ "name": "blob", "type": "Blob", "nullable": true }]
    }, {
      "name": "DecodeErrorCallback", "type": "void",
      "arguments": [{ "name": "error", "type": "DOMException" }]
    }, {
      "name": "DecodeSuccessCallback", "type": "void",
      "arguments": [{ "name": "decodedData", "type": "AudioBuffer" }]
    }, {
      "name": "EventHandlerNonNull", "type": "any",
      "arguments": [{ "name": "event", "type": "Event" }]
    }, {
      "name": "FrameRequestCallback", "type": "void",
      "arguments": [{ "name": "time", "type": "DOMHighResTimeStamp" }]
    }, {
      "name": "Function", "type": "any",
      "arguments": [{ "name": "arguments", "type": "any", "variadic": true }]
    }, {
      "name": "FunctionStringCallback", "type": "void",
      "arguments": [{ "name": "data", "type": "DOMString" }]
    }, {
      "name": "GenerateAssertionCallback", "type": "Promise<RTCIdentityAssertionResult>",
      "arguments": [
        { "name": "contents", "type": "DOMString" },
        { "name": "origin", "type": "DOMString" },
        { "name": "options", "type": "RTCIdentityProviderOptions" }
      ]
    }, {
      "name": "IntersectionObserverCallback", "type": "void",
      "arguments": [
        { "name": "entries", "type": "sequence<IntersectionObserverEntry>" },
        { "name": "observer", "type": "IntersectionObserver" }
      ]
    }, {
      "name": "MutationCallback", "type": "void",
      "arguments": [
        { "name": "mutations", "type": "sequence<MutationRecord>" },
        { "name": "observer", "type": "MutationObserver" }
      ]
    }, {
      "name": "NavigatorUserMediaErrorCallback", "type": "void",
      "arguments": [{ "name": "error", "type": "MediaStreamError" }]
    }, {
      "name": "NavigatorUserMediaSuccessCallback", "type": "void",
      "arguments": [{ "name": "stream", "type": "MediaStream" }]
    }, {
      "name": "NotificationPermissionCallback", "type": "void",
      "arguments": [{ "name": "permission", "type": "NotificationPermission" }]
    }, {
      "name": "OnBeforeUnloadEventHandlerNonNull", "type": "DOMString", "nullable": true,
      "arguments": [{ "name": "event", "type": "Event" }]
    }, {
      "name": "OnErrorEventHandlerNonNull", "type": "any",
      "arguments": [
        { "name": "event", "type": "(Event or DOMString)" },
        { "name": "source", "type": "DOMString", "optional": true },
        { "name": "lineno", "type": "unsigned long", "optional": true },
        { "name": "colno", "type": "unsigned long", "optional": true },
        { "name": "error", "type": "any", "optional": true }
      ]
    }, {
      "name": "PerformanceObserverCallback", "type": "void",
      "arguments": [
        { "name": "entries", "type": "PerformanceObserverEntryList" },
        { "name": "observer", "type": "PerformanceObserver" }
      ]
    }, {
      "name": "PositionCallback", "type": "void",
      "arguments": [{ "name": "position", "type": "Position" }]
    }, {
      "name": "PositionErrorCallback", "type": "void",
      "arguments": [{ "name": "positionError", "type": "PositionError" }]
    }, {
      "name": "RTCPeerConnectionErrorCallback", "type": "void",
      "arguments": [{ "name": "error", "type": "DOMException" }]
    }, {
      "name": "RTCSessionDescriptionCallback", "type": "void",
      "arguments": [{ "name": "description", "type": "RTCSessionDescriptionInit" }]
    }, {
      "name": "ValidateAssertionCallback", "type": "Promise<RTCIdentityValidationResult>",
      "arguments": [
        { "name": "assertion", "type": "DOMString" },
        { "name": "origin", "type": "DOMString" }
      ]
    },
    { "name": "VoidFunction", "type": "void", "arguments": [] }
  ],
  "callbackInterfaces": [{
    "name": "EventListener",
    "operations": [{
      "name": "handleEvent", "type": "void",
      "arguments": [{ "name": "event", "type": "Event" }]
    }]
  }, {
    "name": "NodeFilter",
    "exposed": ["Window"],
    "constants": [
      { "name": "FILTER_ACCEPT", "type": "unsigned short", "value": "1" },
      { "name": "FILTER_REJECT", "type": "unsigned short", "value": "2" },
      { "name": "FILTER_SKIP", "type": "unsigned short", "value": "3" },
      { "name": "SHOW_ALL", "type": "unsigned long", "value": "4294967295" },
      { "name": "SHOW_ELEMENT", "type": "unsigned long", "value": "1" },
      { "name": "SHOW_ATTRIBUTE", "type": "unsigned long", "value": "2" },
      { "name": "SHOW_TEXT", "type": "unsigned long", "value": "4" },
      { "name": "SHOW_CDATA_SECTION", "type": "unsigned long", "value": "8" },
      { "name": "SHOW_ENTITY_REFERENCE", "type": "unsigned long", "value": "16" },
      { "name": "SHOW_ENTITY", "type": "unsigned long", "value": "32" },
      { "name": "SHOW_PROCESSING_INSTRUCTION", "type": "unsigned long", "value": "64" },
      { "name": "SHOW_COMMENT", "type": "unsigned long", "value": "128" },
      { "name": "SHOW_DOCUMENT", "type": "unsigned long", "value": "256" },
      { "name": "SHOW_DOCUMENT_TYPE", "type": "unsigned long", "value": "512" },
      { "name": "SHOW_DOCUMENT_FRAGMENT", "type": "unsigned long", "value": "1024" },
      { "name": "SHOW_NOTATION", "type": "unsigned long", "value": "2048" }
    ],
    "operations": [{
      "name": "acceptNode", "type": "unsigned short",
      "arguments": [{ "name": "node", "type": "Node" }]
    }]
  }],
  "dictionaries": [
    {
      "name": "AddEventListenerOptions", "extends": "EventListenerOptions",
      "members": [
        { "name": "once", "type": "boolean", "default": "false" },
        { "name": "passive", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "AesCbcParams", "extends": "Algorithm",
      "members": [{ "name": "iv", "type": "BufferSource", "required": true }]
    }, {
      "name": "AesCtrParams", "extends": "Algorithm",
      "members": [
        { "name": "counter", "type": "BufferSource", "required": true },
        { "name": "length", "type": "octet", "required": true }
      ]
    }, {
      "name": "AesDerivedKeyParams", "extends": "Algorithm",
      "members": [{ "name": "length", "type": "unsigned short", "required": true }]
    }, {
      "name": "AesGcmParams", "extends": "Algorithm",
      "members": [
        { "name": "additionalData", "type": "BufferSource" },
        { "name": "iv", "type": "BufferSource", "required": true },
        { "name": "tagLength", "type": "octet" }
      ]
    }, {
      "name": "AesKeyAlgorithm", "extends": "KeyAlgorithm",
      "members": [{ "name": "length", "type": "unsigned short", "required": true }]
    }, {
      "name": "AesKeyGenParams", "extends": "Algorithm",
      "members": [{ "name": "length", "type": "unsigned short", "required": true }]
    }, {
      "name": "Algorithm",
      "members": [{ "name": "name", "type": "DOMString", "required": true }]
    }, {
      "name": "AnalyserOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "fftSize", "type": "unsigned long", "default": "2048" },
        { "name": "maxDecibels", "type": "double", "default": "-30" },
        { "name": "minDecibels", "type": "double", "default": "-100" },
        { "name": "smoothingTimeConstant", "type": "double", "default": "0.8" }
      ]
    }, {
      "name": "AnimationEventInit", "extends": "EventInit",
      "members": [
        { "name": "animationName", "type": "CSSOMString", "default": "\"\"" },
        { "name": "elapsedTime", "type": "float", "default": "0" },
        { "name": "pseudoElement", "type": "CSSOMString", "default": "\"\"" }
      ]
    }, {
      "name": "AssignedNodesOptions",
      "members": [{ "name": "flatten", "type": "boolean", "default": "false" }]
    }, {
      "name": "AudioBufferOptions",
      "members": [
        { "name": "length", "type": "unsigned long", "required": true },
        { "name": "numberOfChannels", "type": "unsigned long", "default": "1" },
        { "name": "sampleRate", "type": "float", "required": true }
      ]
    }, {
      "name": "AudioBufferSourceOptions",
      "members": [
        { "name": "buffer", "type": "AudioBuffer", "nullable": true },
        { "name": "detune", "type": "float", "default": "0" },
        { "name": "loop", "type": "boolean", "default": "false" },
        { "name": "loopEnd", "type": "double", "default": "0" },
        { "name": "loopStart", "type": "double", "default": "0" },
        { "name": "playbackRate", "type": "float", "default": "1" }
      ]
    }, {
      "name": "AudioContextOptions",
      "members": [
        { "name": "latencyHint", "type": "(AudioContextLatencyCategory or double)", "default": "\"interactive\"" },
        { "name": "sampleRate", "type": "float" }
      ]
    }, {
      "name": "AudioNodeOptions",
      "members": [
        { "name": "channelCount", "type": "unsigned long" },
        { "name": "channelCountMode", "type": "ChannelCountMode" },
        { "name": "channelInterpretation", "type": "ChannelInterpretation" }
      ]
    }, {
      "name": "AudioParamDescriptor",
      "members": [
        { "name": "defaultValue", "type": "float", "default": "0" },
        { "name": "maxValue", "type": "float", "default": "3.4028235e+38" },
        { "name": "minValue", "type": "float", "default": "-3.4028235e+38" },
        { "name": "name", "type": "DOMString", "required": true }
      ]
    }, {
      "name": "AudioProcessingEventInit", "extends": "EventInit",
      "members": [
        { "name": "inputBuffer", "type": "AudioBuffer", "required": true },
        { "name": "outputBuffer", "type": "AudioBuffer", "required": true },
        { "name": "playbackTime", "type": "double", "required": true }
      ]
    }, {
      "name": "AudioTimestamp",
      "members": [
        { "name": "contextTime", "type": "double" },
        { "name": "performanceTime", "type": "DOMHighResTimeStamp" }
      ]
    }, {
      "name": "AudioWorkletNodeOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "numberOfInputs", "type": "unsigned long", "default": "1" },
        { "name": "numberOfOutputs", "type": "unsigned long", "default": "1" },
        { "name": "outputChannelCount", "type": "sequence<unsigned long>" },
        { "name": "parameterData", "type": "record<DOMString, double>" }
      ]
    }, {
      "name": "BiquadFilterOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "detune", "type": "float", "default": "0" },
        { "name": "frequency", "type": "float", "default": "350" },
        { "name": "gain", "type": "float", "default": "0" },
        { "name": "Q", "type": "float", "default": "1" },
        { "name": "type", "type": "BiquadFilterType", "default": "\"lowpass\"" }
      ]
    }, {
      "name": "BlobPropertyBag",
      "members": [
        { "name": "endings", "type": "EndingTypes", "default": "\"transparent\"" },
        { "name": "type", "type": "DOMString", "default": "\"\"" }
      ]
    }, {
      "name": "BoxQuadOptions",
      "members": [
        { "name": "box", "type": "CSSBoxType", "default": "\"border\"" },
        { "name": "relativeTo", "type": "GeometryNode" }
      ]
    }, {
      "name": "CacheQueryOptions",
      "members": [
        { "name": "cacheName", "type": "DOMString" },
        { "name": "ignoreMethod", "type": "boolean", "default": "false" },
        { "name": "ignoreSearch", "type": "boolean", "default": "false" },
        { "name": "ignoreVary", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "CanvasRenderingContext2DSettings",
      "members": [{ "name": "alpha", "type": "boolean", "default": "true" }]
    },
    { "name": "Capabilities", "members": [] },
    {
      "name": "ChannelMergerOptions", "extends": "AudioNodeOptions",
      "members": [{ "name": "numberOfInputs", "type": "unsigned long", "default": "6" }]
    }, {
      "name": "ChannelSplitterOptions", "extends": "AudioNodeOptions",
      "members": [{ "name": "numberOfOutputs", "type": "unsigned long", "default": "6" }]
    }, {
      "name": "ClientQueryOptions",
      "members": [
        { "name": "includeReserved", "type": "boolean", "default": "false" },
        { "name": "includeUncontrolled", "type": "boolean", "default": "false" },
        { "name": "type", "type": "ClientType", "default": "\"window\"" }
      ]
    }, {
      "name": "ClipboardEventInit", "extends": "EventInit",
      "members": [{ "name": "clipboardData", "type": "DataTransfer", "nullable": true, "default": "null" }]
    }, {
      "name": "ClipboardEventInit", "extends": "EventInit",
      "members": [{ "name": "clipboardData", "type": "DataTransfer", "nullable": true, "default": "null" }]
    }, {
      "name": "CloseEventInit", "extends": "EventInit",
      "members": [
        { "name": "code", "type": "unsigned short", "default": "0" },
        { "name": "reason", "type": "USVString", "default": "\"\"" },
        { "name": "wasClean", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "CompositionEventInit", "extends": "UIEventInit",
      "members": [{ "name": "data", "type": "DOMString", "default": "\"\"" }]
    }, {
      "name": "ConstantSourceOptions",
      "members": [{ "name": "offset", "type": "float", "default": "1" }]
    }, {
      "name": "ConstrainBooleanParameters",
      "members": [
        { "name": "exact", "type": "boolean" },
        { "name": "ideal", "type": "boolean" }
      ]
    }, {
      "name": "ConstrainDOMStringParameters",
      "members": [
        { "name": "exact", "type": "(DOMString or sequence<DOMString>)" },
        { "name": "ideal", "type": "(DOMString or sequence<DOMString>)" }
      ]
    }, {
      "name": "ConstrainDoubleRange", "extends": "DoubleRange",
      "members": [
        { "name": "exact", "type": "double" },
        { "name": "ideal", "type": "double" }
      ]
    }, {
      "name": "ConstrainLongRange", "extends": "LongRange",
      "members": [
        { "name": "exact", "type": "long" },
        { "name": "ideal", "type": "long" }
      ]
    }, {
      "name": "Constraints", "extends": "ConstraintSet",
      "members": [{ "name": "advanced", "type": "sequence<ConstraintSet>" }]
    },
    { "name": "ConstraintSet", "members": [] },
    {
      "name": "ConvertCoordinateOptions",
      "members": [
        { "name": "fromBox", "type": "CSSBoxType", "default": "\"border\"" },
        { "name": "toBox", "type": "CSSBoxType", "default": "\"border\"" }
      ]
    }, {
      "name": "ConvolverOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "buffer", "type": "AudioBuffer", "nullable": true },
        { "name": "disableNormalization", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "CryptoKeyPair",
      "members": [
        { "name": "privateKey", "type": "CryptoKey" },
        { "name": "publicKey", "type": "CryptoKey" }
      ]
    }, {
      "name": "CustomEventInit", "extends": "EventInit",
      "members": [{ "name": "detail", "type": "any", "default": "null" }]
    }, {
      "name": "DelayOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "delayTime", "type": "double", "default": "0" },
        { "name": "maxDelayTime", "type": "double", "default": "1" }
      ]
    }, {
      "name": "DeviceAccelerationInit",
      "members": [
        { "name": "x", "type": "double", "nullable": true, "default": "null" },
        { "name": "y", "type": "double", "nullable": true, "default": "null" },
        { "name": "z", "type": "double", "nullable": true, "default": "null" }
      ]
    }, {
      "name": "DeviceMotionEventInit", "extends": "EventInit",
      "members": [
        { "name": "acceleration", "type": "DeviceAccelerationInit", "nullable": true },
        { "name": "accelerationIncludingGravity", "type": "DeviceAccelerationInit", "nullable": true },
        { "name": "interval", "type": "double", "nullable": true, "default": "null" },
        { "name": "rotationRate", "type": "DeviceRotationRateInit", "nullable": true }
      ]
    }, {
      "name": "DeviceOrientationEventInit", "extends": "EventInit",
      "members": [
        { "name": "absolute", "type": "boolean", "default": "false" },
        { "name": "alpha", "type": "double", "nullable": true, "default": "null" },
        { "name": "beta", "type": "double", "nullable": true, "default": "null" },
        { "name": "gamma", "type": "double", "nullable": true, "default": "null" }
      ]
    }, {
      "name": "DeviceRotationRateInit",
      "members": [
        { "name": "alpha", "type": "double", "nullable": true, "default": "null" },
        { "name": "beta", "type": "double", "nullable": true, "default": "null" },
        { "name": "gamma", "type": "double", "nullable": true, "default": "null" }
      ]
    }, {
      "name": "DOMMatrix2DInit",
      "members": [
        { "name": "a", "type": "unrestricted double" },
        { "name": "b", "type": "unrestricted double" },
        { "name": "c", "type": "unrestricted double" },
        { "name": "d", "type": "unrestricted double" },
        { "name": "e", "type": "unrestricted double" },
        { "name": "f", "type": "unrestricted double" },
        { "name": "m11", "type": "unrestricted double" },
        { "name": "m12", "type": "unrestricted double" },
        { "name": "m21", "type": "unrestricted double" },
        { "name": "m22", "type": "unrestricted double" },
        { "name": "m41", "type": "unrestricted double" },
        { "name": "m42", "type": "unrestricted double" }
      ]
    }, {
      "name": "DOMMatrixInit", "extends": "DOMMatrix2DInit",
      "members": [
        { "name": "is2D", "type": "boolean" },
        { "name": "m13", "type": "unrestricted double", "default": "0" },
        { "name": "m14", "type": "unrestricted double", "default": "0" },
        { "name": "m23", "type": "unrestricted double", "default": "0" },
        { "name": "m24", "type": "unrestricted double", "default": "0" },
        { "name": "m31", "type": "unrestricted double", "default": "0" },
        { "name": "m32", "type": "unrestricted double", "default": "0" },
        { "name": "m33", "type": "unrestricted double", "default": "1" },
        { "name": "m34", "type": "unrestricted double", "default": "0" },
        { "name": "m43", "type": "unrestricted double", "default": "0" },
        { "name": "m44", "type": "unrestricted double", "default": "1" }
      ]
    }, {
      "name": "DOMPointInit",
      "members": [
        { "name": "w", "type": "unrestricted double", "default": "1" },
        { "name": "x", "type": "unrestricted double", "default": "0" },
        { "name": "y", "type": "unrestricted double", "default": "0" },
        { "name": "z", "type": "unrestricted double", "default": "0" }
      ]
    }, {
      "name": "DOMQuadInit",
      "members": [
        { "name": "p1", "type": "DOMPointInit" },
        { "name": "p2", "type": "DOMPointInit" },
        { "name": "p3", "type": "DOMPointInit" },
        { "name": "p4", "type": "DOMPointInit" }
      ]
    }, {
      "name": "DOMRectInit",
      "members": [
        { "name": "height", "type": "unrestricted double", "default": "0" },
        { "name": "width", "type": "unrestricted double", "default": "0" },
        { "name": "x", "type": "unrestricted double", "default": "0" },
        { "name": "y", "type": "unrestricted double", "default": "0" }
      ]
    }, {
      "name": "DoubleRange",
      "members": [
        { "name": "max", "type": "double" },
        { "name": "min", "type": "double" }
      ]
    }, {
      "name": "DragEventInit", "extends": "MouseEventInit",
      "members": [{ "name": "dataTransfer", "type": "DataTransfer", "nullable": true, "default": "null" }]
    }, {
      "name": "DynamicsCompressorOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "attack", "type": "float", "default": "0.003" },
        { "name": "knee", "type": "float", "default": "30" },
        { "name": "ratio", "type": "float", "default": "12" },
        { "name": "release", "type": "float", "default": "0.25" },
        { "name": "threshold", "type": "float", "default": "-24" }
      ]
    }, {
      "name": "EcdhKeyDeriveParams", "extends": "Algorithm",
      "members": [{ "name": "public", "type": "CryptoKey", "required": true }]
    }, {
      "name": "EcdsaParams", "extends": "Algorithm",
      "members": [{ "name": "hash", "type": "HashAlgorithmIdentifier", "required": true }]
    }, {
      "name": "EcKeyAlgorithm", "extends": "KeyAlgorithm",
      "members": [{ "name": "namedCurve", "type": "NamedCurve", "required": true }]
    }, {
      "name": "EcKeyGenParams", "extends": "Algorithm",
      "members": [{ "name": "namedCurve", "type": "NamedCurve", "required": true }]
    }, {
      "name": "EcKeyImportParams", "extends": "Algorithm",
      "members": [{ "name": "namedCurve", "type": "NamedCurve", "required": true }]
    }, {
      "name": "ElementCreationOptions",
      "members": [{ "name": "is", "type": "DOMString" }]
    }, {
      "name": "ElementDefinitionOptions",
      "members": [{ "name": "extends", "type": "DOMString" }]
    }, {
      "name": "ErrorEventInit", "extends": "EventInit",
      "members": [
        { "name": "colno", "type": "unsigned long", "default": "0" },
        { "name": "error", "type": "any", "default": "null" },
        { "name": "filename", "type": "USVString", "default": "\"\"" },
        { "name": "lineno", "type": "unsigned long", "default": "0" },
        { "name": "message", "type": "DOMString", "default": "\"\"" }
      ]
    }, {
      "name": "EventInit",
      "members": [
        { "name": "bubbles", "type": "boolean", "default": "false" },
        { "name": "cancelable", "type": "boolean", "default": "false" },
        { "name": "composed", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "EventListenerOptions",
      "members": [{ "name": "capture", "type": "boolean", "default": "false" }]
    }, {
      "name": "EventModifierInit", "extends": "UIEventInit",
      "members": [
        { "name": "altKey", "type": "boolean", "default": "false" },
        { "name": "ctrlKey", "type": "boolean", "default": "false" },
        { "name": "metaKey", "type": "boolean", "default": "false" },
        { "name": "modifierAltGraph", "type": "boolean", "default": "false" },
        { "name": "modifierCapsLock", "type": "boolean", "default": "false" },
        { "name": "modifierFn", "type": "boolean", "default": "false" },
        { "name": "modifierFnLock", "type": "boolean", "default": "false" },
        { "name": "modifierHyper", "type": "boolean", "default": "false" },
        { "name": "modifierNumLock", "type": "boolean", "default": "false" },
        { "name": "modifierScrollLock", "type": "boolean", "default": "false" },
        { "name": "modifierSuper", "type": "boolean", "default": "false" },
        { "name": "modifierSymbol", "type": "boolean", "default": "false" },
        { "name": "modifierSymbolLock", "type": "boolean", "default": "false" },
        { "name": "shiftKey", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "EventSourceInit",
      "members": [{ "name": "withCredentials", "type": "boolean", "default": "false" }]
    },
    { "name": "ExtendableEventInit", "members": [], "extends": "EventInit" },
    {
      "name": "ExtendableMessageEventInit", "extends": "ExtendableEventInit",
      "members": [
        { "name": "data", "type": "any", "default": "null" },
        { "name": "lastEventId", "type": "DOMString", "default": "\"\"" },
        { "name": "origin", "type": "USVString", "default": "\"\"" },
        { "name": "ports", "type": "sequence<MessagePort>", "default": "[]" },
        { "name": "source", "type": "(Client or ServiceWorker or MessagePort)", "nullable": true, "default": "null" }
      ]
    }, {
      "name": "FetchEventInit", "extends": "ExtendableEventInit",
      "members": [
        { "name": "clientId", "type": "DOMString", "default": "\"\"" },
        { "name": "preloadResponse", "type": "Promise<any>", "required": true },
        { "name": "request", "type": "Request", "required": true },
        { "name": "reservedClientId", "type": "DOMString", "default": "\"\"" },
        { "name": "targetClientId", "type": "DOMString", "default": "\"\"" }
      ]
    }, {
      "name": "FilePropertyBag", "extends": "BlobPropertyBag",
      "members": [{ "name": "lastModified", "type": "long long" }]
    }, {
      "name": "FocusEventInit", "extends": "UIEventInit",
      "members": [{ "name": "relatedTarget", "type": "EventTarget", "nullable": true, "default": "null" }]
    }, {
      "name": "FocusOptions",
      "members": [{ "name": "preventScroll", "type": "boolean", "default": "false" }]
    }, {
      "name": "GainOptions", "extends": "AudioNodeOptions",
      "members": [{ "name": "gain", "type": "float", "default": "1" }]
    }, {
      "name": "GamepadEventInit", "extends": "EventInit",
      "members": [{ "name": "gamepad", "type": "Gamepad", "required": true }]
    }, {
      "name": "GetNotificationOptions",
      "members": [{ "name": "tag", "type": "DOMString", "default": "\"\"" }]
    }, {
      "name": "GetRootNodeOptions",
      "members": [{ "name": "composed", "type": "boolean", "default": "false" }]
    }, {
      "name": "HashChangeEventInit", "extends": "EventInit",
      "members": [
        { "name": "newURL", "type": "USVString", "default": "\"\"" },
        { "name": "oldURL", "type": "USVString", "default": "\"\"" }
      ]
    }, {
      "name": "HkdfParams", "extends": "Algorithm",
      "members": [
        { "name": "hash", "type": "HashAlgorithmIdentifier", "required": true },
        { "name": "info", "type": "BufferSource", "required": true },
        { "name": "salt", "type": "BufferSource", "required": true }
      ]
    }, {
      "name": "HmacImportParams", "extends": "Algorithm",
      "members": [
        { "name": "hash", "type": "HashAlgorithmIdentifier", "required": true },
        { "name": "length", "type": "unsigned long" }
      ]
    }, {
      "name": "HmacKeyAlgorithm", "extends": "KeyAlgorithm",
      "members": [
        { "name": "hash", "type": "KeyAlgorithm", "required": true },
        { "name": "length", "type": "unsigned long", "required": true }
      ]
    }, {
      "name": "HmacKeyGenParams", "extends": "Algorithm",
      "members": [
        { "name": "hash", "type": "HashAlgorithmIdentifier", "required": true },
        { "name": "length", "type": "unsigned long" }
      ]
    }, {
      "name": "IDBIndexParameters",
      "members": [
        { "name": "multiEntry", "type": "boolean", "default": "false" },
        { "name": "unique", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "IDBObjectStoreParameters",
      "members": [
        { "name": "autoIncrement", "type": "boolean", "default": "false" },
        { "name": "keyPath", "type": "(DOMString or sequence<DOMString>)", "nullable": true, "default": "null" }
      ]
    }, {
      "name": "IDBVersionChangeEventInit", "extends": "EventInit",
      "members": [
        { "name": "newVersion", "type": "unsigned long long", "nullable": true, "default": "null" },
        { "name": "oldVersion", "type": "unsigned long long", "default": "0" }
      ]
    }, {
      "name": "IIRFilterOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "feedback", "type": "sequence<double>", "required": true },
        { "name": "feedforward", "type": "sequence<double>", "required": true }
      ]
    }, {
      "name": "ImageBitmapOptions",
      "members": [
        { "name": "colorSpaceConversion", "type": "ColorSpaceConversion", "default": "\"default\"" },
        { "name": "imageOrientation", "type": "ImageOrientation", "default": "\"none\"" },
        { "name": "premultiplyAlpha", "type": "PremultiplyAlpha", "default": "\"default\"" },
        { "name": "resizeHeight", "type": "unsigned long" },
        { "name": "resizeQuality", "type": "ResizeQuality", "default": "\"low\"" },
        { "name": "resizeWidth", "type": "unsigned long" }
      ]
    }, {
      "name": "ImageBitmapRenderingContextSettings",
      "members": [{ "name": "alpha", "type": "boolean", "default": "true" }]
    }, {
      "name": "ImageEncodeOptions",
      "members": [
        { "name": "quality", "type": "unrestricted double", "default": "1" },
        { "name": "type", "type": "DOMString", "default": "\"image/png\"" }
      ]
    }, {
      "name": "InputEventInit", "extends": "UIEventInit",
      "members": [
        { "name": "data", "type": "DOMString", "nullable": true, "default": "\"\"" },
        { "name": "isComposing", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "IntersectionObserverEntryInit",
      "members": [
        { "name": "boundingClientRect", "type": "DOMRectInit", "required": true },
        { "name": "intersectionRatio", "type": "double", "required": true },
        { "name": "intersectionRect", "type": "DOMRectInit", "required": true },
        { "name": "isIntersecting", "type": "boolean", "required": true },
        { "name": "rootBounds", "type": "DOMRectInit", "required": true },
        { "name": "target", "type": "Element", "required": true },
        { "name": "time", "type": "DOMHighResTimeStamp", "required": true }
      ]
    }, {
      "name": "IntersectionObserverInit",
      "members": [
        { "name": "root", "type": "Element", "nullable": true, "default": "null" },
        { "name": "rootMargin", "type": "DOMString", "default": "\"0px\"" },
        { "name": "threshold", "type": "(double or sequence<double>)", "default": "0" }
      ]
    }, {
      "name": "JsonWebKey",
      "members": [
        { "name": "alg", "type": "DOMString" },
        { "name": "crv", "type": "DOMString" },
        { "name": "d", "type": "DOMString" },
        { "name": "dp", "type": "DOMString" },
        { "name": "dq", "type": "DOMString" },
        { "name": "e", "type": "DOMString" },
        { "name": "ext", "type": "boolean" },
        { "name": "k", "type": "DOMString" },
        { "name": "key_ops", "type": "sequence<DOMString>" },
        { "name": "kty", "type": "DOMString" },
        { "name": "n", "type": "DOMString" },
        { "name": "oth", "type": "sequence<RsaOtherPrimesInfo>" },
        { "name": "p", "type": "DOMString" },
        { "name": "q", "type": "DOMString" },
        { "name": "qi", "type": "DOMString" },
        { "name": "use", "type": "DOMString" },
        { "name": "x", "type": "DOMString" },
        { "name": "y", "type": "DOMString" }
      ]
    }, {
      "name": "KeyAlgorithm",
      "members": [{ "name": "name", "type": "DOMString", "required": true }]
    }, {
      "name": "KeyboardEventInit", "extends": "EventModifierInit",
      "members": [
        { "name": "code", "type": "DOMString", "default": "\"\"" },
        { "name": "isComposing", "type": "boolean", "default": "false" },
        { "name": "key", "type": "DOMString", "default": "\"\"" },
        { "name": "location", "type": "unsigned long", "default": "0" },
        { "name": "repeat", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "LongRange",
      "members": [
        { "name": "max", "type": "long" },
        { "name": "min", "type": "long" }
      ]
    }, {
      "name": "MediaElementAudioSourceOptions",
      "members": [{ "name": "mediaElement", "type": "HTMLMediaElement", "required": true }]
    }, {
      "name": "MediaEncryptedEventInit", "extends": "EventInit",
      "members": [
        { "name": "initData", "type": "ArrayBuffer", "nullable": true, "default": "null" },
        { "name": "initDataType", "type": "DOMString", "default": "\"\"" }
      ]
    }, {
      "name": "MediaKeyMessageEventInit", "extends": "EventInit",
      "members": [
        { "name": "message", "type": "ArrayBuffer", "required": true },
        { "name": "messageType", "type": "MediaKeyMessageType", "required": true }
      ]
    }, {
      "name": "MediaKeySystemConfiguration",
      "members": [
        { "name": "audioCapabilities", "type": "sequence<MediaKeySystemMediaCapability>", "default": "[]" },
        { "name": "distinctiveIdentifier", "type": "MediaKeysRequirement", "default": "\"optional\"" },
        { "name": "initDataTypes", "type": "sequence<DOMString>", "default": "[]" },
        { "name": "label", "type": "DOMString", "default": "\"\"" },
        { "name": "persistentState", "type": "MediaKeysRequirement", "default": "\"optional\"" },
        { "name": "sessionTypes", "type": "sequence<DOMString>" },
        { "name": "videoCapabilities", "type": "sequence<MediaKeySystemMediaCapability>", "default": "[]" }
      ]
    }, {
      "name": "MediaKeySystemMediaCapability",
      "members": [
        { "name": "contentType", "type": "DOMString", "default": "\"\"" },
        { "name": "robustness", "type": "DOMString", "default": "\"\"" }
      ]
    }, {
      "name": "MediaQueryListEventInit", "extends": "EventInit",
      "members": [
        { "name": "matches", "type": "boolean", "default": "false" },
        { "name": "media", "type": "DOMString", "default": "\"\"" }
      ]
    }, {
      "name": "MediaStreamAudioSourceOptions",
      "members": [{ "name": "mediaStream", "type": "MediaStream", "required": true }]
    }, {
      "name": "MediaStreamConstraints",
      "members": [
        { "name": "audio", "type": "(boolean or MediaTrackConstraints)", "default": "false" },
        { "name": "peerIdentity", "type": "DOMString" },
        { "name": "video", "type": "(boolean or MediaTrackConstraints)", "default": "false" }
      ]
    }, {
      "name": "MediaStreamTrackAudioSourceOptions",
      "members": [{ "name": "mediaStreamTrack", "type": "MediaStreamTrack", "required": true }]
    }, {
      "name": "MediaStreamTrackEventInit", "extends": "EventInit",
      "members": [{ "name": "track", "type": "MediaStreamTrack", "required": true }]
    }, {
      "name": "MediaTrackCapabilities",
      "members": [
        { "name": "aspectRatio", "type": "DoubleRange" },
        { "name": "autoGainControl", "type": "sequence<boolean>" },
        { "name": "channelCount", "type": "LongRange" },
        { "name": "deviceId", "type": "DOMString" },
        { "name": "echoCancellation", "type": "sequence<boolean>" },
        { "name": "facingMode", "type": "sequence<DOMString>" },
        { "name": "frameRate", "type": "DoubleRange" },
        { "name": "groupId", "type": "DOMString" },
        { "name": "height", "type": "LongRange" },
        { "name": "latency", "type": "DoubleRange" },
        { "name": "noiseSuppression", "type": "sequence<boolean>" },
        { "name": "sampleRate", "type": "LongRange" },
        { "name": "sampleSize", "type": "LongRange" },
        { "name": "volume", "type": "DoubleRange" },
        { "name": "width", "type": "LongRange" }
      ]
    }, {
      "name": "MediaTrackConstraints", "extends": "MediaTrackConstraintSet",
      "members": [{ "name": "advanced", "type": "sequence<MediaTrackConstraintSet>" }]
    }, {
      "name": "MediaTrackConstraintSet",
      "members": [
        { "name": "aspectRatio", "type": "ConstrainDouble" },
        { "name": "autoGainControl", "type": "ConstrainBoolean" },
        { "name": "channelCount", "type": "ConstrainLong" },
        { "name": "deviceId", "type": "ConstrainDOMString" },
        { "name": "echoCancellation", "type": "ConstrainBoolean" },
        { "name": "facingMode", "type": "ConstrainDOMString" },
        { "name": "frameRate", "type": "ConstrainDouble" },
        { "name": "groupId", "type": "ConstrainDOMString" },
        { "name": "height", "type": "ConstrainLong" },
        { "name": "latency", "type": "ConstrainDouble" },
        { "name": "noiseSuppression", "type": "ConstrainBoolean" },
        { "name": "sampleRate", "type": "ConstrainLong" },
        { "name": "sampleSize", "type": "ConstrainLong" },
        { "name": "volume", "type": "ConstrainDouble" },
        { "name": "width", "type": "ConstrainLong" }
      ]
    }, {
      "name": "MediaTrackSettings",
      "members": [
        { "name": "aspectRatio", "type": "double" },
        { "name": "autoGainControl", "type": "boolean" },
        { "name": "channelCount", "type": "long" },
        { "name": "deviceId", "type": "DOMString" },
        { "name": "echoCancellation", "type": "boolean" },
        { "name": "facingMode", "type": "DOMString" },
        { "name": "frameRate", "type": "double" },
        { "name": "groupId", "type": "DOMString" },
        { "name": "height", "type": "long" },
        { "name": "latency", "type": "double" },
        { "name": "noiseSuppression", "type": "boolean" },
        { "name": "sampleRate", "type": "long" },
        { "name": "sampleSize", "type": "long" },
        { "name": "volume", "type": "double" },
        { "name": "width", "type": "long" }
      ]
    }, {
      "name": "MediaTrackSupportedConstraints",
      "members": [
        { "name": "aspectRatio", "type": "boolean", "default": "true" },
        { "name": "autoGainControl", "type": "boolean", "default": "true" },
        { "name": "channelCount", "type": "boolean", "default": "true" },
        { "name": "deviceId", "type": "boolean", "default": "true" },
        { "name": "echoCancellation", "type": "boolean", "default": "true" },
        { "name": "facingMode", "type": "boolean", "default": "true" },
        { "name": "frameRate", "type": "boolean", "default": "true" },
        { "name": "groupId", "type": "boolean", "default": "true" },
        { "name": "height", "type": "boolean", "default": "true" },
        { "name": "latency", "type": "boolean", "default": "true" },
        { "name": "noiseSuppression", "type": "boolean", "default": "true" },
        { "name": "sampleRate", "type": "boolean", "default": "true" },
        { "name": "sampleSize", "type": "boolean", "default": "true" },
        { "name": "volume", "type": "boolean", "default": "true" },
        { "name": "width", "type": "boolean", "default": "true" }
      ]
    }, {
      "name": "MessageEventInit", "extends": "EventInit",
      "members": [
        { "name": "data", "type": "any", "default": "null" },
        { "name": "lastEventId", "type": "DOMString", "default": "\"\"" },
        { "name": "origin", "type": "USVString", "default": "\"\"" },
        { "name": "ports", "type": "sequence<MessagePort>", "default": "[]" },
        { "name": "source", "type": "MessageEventSource", "nullable": true, "default": "null" }
      ]
    }, {
      "name": "MouseEventInit", "extends": "EventModifierInit",
      "members": [
        { "name": "button", "type": "short", "default": "0" },
        { "name": "buttons", "type": "unsigned short", "default": "0" },
        { "name": "clientX", "type": "long", "default": "0" },
        { "name": "clientY", "type": "long", "default": "0" },
        { "name": "relatedTarget", "type": "EventTarget", "nullable": true, "default": "null" },
        { "name": "screenX", "type": "long", "default": "0" },
        { "name": "screenY", "type": "long", "default": "0" }
      ]
    }, {
      "name": "MutationObserverInit",
      "members": [
        { "name": "attributeFilter", "type": "sequence<DOMString>" },
        { "name": "attributeOldValue", "type": "boolean" },
        { "name": "attributes", "type": "boolean" },
        { "name": "characterData", "type": "boolean" },
        { "name": "characterDataOldValue", "type": "boolean" },
        { "name": "childList", "type": "boolean", "default": "false" },
        { "name": "subtree", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "NavigationPreloadState",
      "members": [
        { "name": "enabled", "type": "boolean", "default": "false" },
        { "name": "headerValue", "type": "ByteString" }
      ]
    }, {
      "name": "NotificationAction",
      "members": [
        { "name": "action", "type": "DOMString", "required": true },
        { "name": "icon", "type": "USVString" },
        { "name": "title", "type": "DOMString", "required": true }
      ]
    }, {
      "name": "NotificationEventInit", "extends": "ExtendableEventInit",
      "members": [
        { "name": "action", "type": "DOMString", "default": "\"\"" },
        { "name": "notification", "type": "Notification", "required": true }
      ]
    }, {
      "name": "NotificationOptions",
      "members": [
        { "name": "actions", "type": "sequence<NotificationAction>", "default": "[]" },
        { "name": "badge", "type": "USVString" },
        { "name": "body", "type": "DOMString", "default": "\"\"" },
        { "name": "data", "type": "any", "default": "null" },
        { "name": "dir", "type": "NotificationDirection", "default": "\"auto\"" },
        { "name": "icon", "type": "USVString" },
        { "name": "image", "type": "USVString" },
        { "name": "lang", "type": "DOMString", "default": "\"\"" },
        { "name": "renotify", "type": "boolean", "default": "false" },
        { "name": "requireInteraction", "type": "boolean", "default": "false" },
        { "name": "silent", "type": "boolean", "default": "false" },
        { "name": "sound", "type": "USVString" },
        { "name": "tag", "type": "DOMString", "default": "\"\"" },
        { "name": "timestamp", "type": "DOMTimeStamp" },
        { "name": "vibrate", "type": "VibratePattern" }
      ]
    }, {
      "name": "OfflineAudioCompletionEventInit", "extends": "EventInit",
      "members": [{ "name": "renderedBuffer", "type": "AudioBuffer", "required": true }]
    }, {
      "name": "OfflineAudioContextOptions",
      "members": [
        { "name": "length", "type": "unsigned long", "required": true },
        { "name": "numberOfChannels", "type": "unsigned long", "default": "1" },
        { "name": "sampleRate", "type": "float", "required": true }
      ]
    }, {
      "name": "OscillatorOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "detune", "type": "float", "default": "0" },
        { "name": "frequency", "type": "float", "default": "440" },
        { "name": "periodicWave", "type": "PeriodicWave" },
        { "name": "type", "type": "OscillatorType", "default": "\"sine\"" }
      ]
    }, {
      "name": "OverconstrainedErrorEventInit", "extends": "EventInit",
      "members": [{ "name": "error", "type": "OverconstrainedError", "nullable": true, "default": "null" }]
    }, {
      "name": "PageTransitionEventInit", "extends": "EventInit",
      "members": [{ "name": "persisted", "type": "boolean", "default": "false" }]
    }, {
      "name": "PannerOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "coneInnerAngle", "type": "double", "default": "360" },
        { "name": "coneOuterAngle", "type": "double", "default": "360" },
        { "name": "coneOuterGain", "type": "double", "default": "0" },
        { "name": "distanceModel", "type": "DistanceModelType", "default": "\"inverse\"" },
        { "name": "maxDistance", "type": "double", "default": "10000" },
        { "name": "orientationX", "type": "float", "default": "1" },
        { "name": "orientationY", "type": "float", "default": "0" },
        { "name": "orientationZ", "type": "float", "default": "0" },
        { "name": "panningModel", "type": "PanningModelType", "default": "\"equalpower\"" },
        { "name": "positionX", "type": "float", "default": "0" },
        { "name": "positionY", "type": "float", "default": "0" },
        { "name": "positionZ", "type": "float", "default": "0" },
        { "name": "refDistance", "type": "double", "default": "1" },
        { "name": "rolloffFactor", "type": "double", "default": "1" }
      ]
    }, {
      "name": "PaymentCurrencyAmount",
      "members": [
        { "name": "currency", "type": "DOMString", "required": true },
        { "name": "currencySystem", "type": "DOMString", "default": "\"urn:iso:std:iso:4217\"" },
        { "name": "value", "type": "DOMString", "required": true }
      ]
    }, {
      "name": "PaymentDetailsBase",
      "members": [
        { "name": "displayItems", "type": "sequence<PaymentItem>" },
        { "name": "modifiers", "type": "sequence<PaymentDetailsModifier>" },
        { "name": "shippingOptions", "type": "sequence<PaymentShippingOption>" }
      ]
    }, {
      "name": "PaymentDetailsInit", "extends": "PaymentDetailsBase",
      "members": [
        { "name": "id", "type": "DOMString" },
        { "name": "total", "type": "PaymentItem", "required": true }
      ]
    }, {
      "name": "PaymentDetailsModifier",
      "members": [
        { "name": "additionalDisplayItems", "type": "sequence<PaymentItem>" },
        { "name": "data", "type": "object" },
        { "name": "supportedMethods", "type": "DOMString", "required": true },
        { "name": "total", "type": "PaymentItem" }
      ]
    }, {
      "name": "PaymentDetailsUpdate", "extends": "PaymentDetailsBase",
      "members": [
        { "name": "error", "type": "DOMString" },
        { "name": "total", "type": "PaymentItem" }
      ]
    }, {
      "name": "PaymentItem",
      "members": [
        { "name": "amount", "type": "PaymentCurrencyAmount", "required": true },
        { "name": "label", "type": "DOMString", "required": true },
        { "name": "pending", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "PaymentMethodData",
      "members": [
        { "name": "data", "type": "object" },
        { "name": "supportedMethods", "type": "DOMString", "required": true }
      ]
    }, {
      "name": "PaymentOptions",
      "members": [
        { "name": "requestPayerEmail", "type": "boolean", "default": "false" },
        { "name": "requestPayerName", "type": "boolean", "default": "false" },
        { "name": "requestPayerPhone", "type": "boolean", "default": "false" },
        { "name": "requestShipping", "type": "boolean", "default": "false" },
        { "name": "shippingType", "type": "PaymentShippingType", "default": "\"shipping\"" }
      ]
    },
    { "name": "PaymentRequestUpdateEventInit", "members": [], "extends": "EventInit" },
    {
      "name": "PaymentShippingOption",
      "members": [
        { "name": "amount", "type": "PaymentCurrencyAmount", "required": true },
        { "name": "id", "type": "DOMString", "required": true },
        { "name": "label", "type": "DOMString", "required": true },
        { "name": "selected", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "Pbkdf2Params", "extends": "Algorithm",
      "members": [
        { "name": "hash", "type": "HashAlgorithmIdentifier", "required": true },
        { "name": "iterations", "type": "unsigned long", "required": true },
        { "name": "salt", "type": "BufferSource", "required": true }
      ]
    }, {
      "name": "PerformanceObserverInit",
      "members": [{ "name": "entryTypes", "type": "sequence<DOMString>", "required": true }]
    }, {
      "name": "PeriodicWaveConstraints",
      "members": [{ "name": "disableNormalization", "type": "boolean", "default": "false" }]
    }, {
      "name": "PeriodicWaveOptions", "extends": "PeriodicWaveConstraints",
      "members": [
        { "name": "imag", "type": "sequence<float>" },
        { "name": "real", "type": "sequence<float>" }
      ]
    }, {
      "name": "PointerEventInit", "extends": "MouseEventInit",
      "members": [
        { "name": "height", "type": "double", "default": "0" },
        { "name": "isPrimary", "type": "boolean", "default": "false" },
        { "name": "pointerId", "type": "long", "default": "0" },
        { "name": "pointerType", "type": "DOMString", "default": "\"\"" },
        { "name": "pressure", "type": "float", "default": "0" },
        { "name": "tiltX", "type": "long", "default": "0" },
        { "name": "tiltY", "type": "long", "default": "0" },
        { "name": "width", "type": "double", "default": "0" }
      ]
    }, {
      "name": "PopStateEventInit", "extends": "EventInit",
      "members": [{ "name": "state", "type": "any", "default": "null" }]
    }, {
      "name": "PositionOptions",
      "members": [
        { "name": "enableHighAccuracy", "type": "boolean", "default": "false" },
        { "name": "maximumAge", "type": "unsigned long", "default": "0" },
        { "name": "timeout", "type": "unsigned long", "default": "4294967295" }
      ]
    }, {
      "name": "ProgressEventInit", "extends": "EventInit",
      "members": [
        { "name": "lengthComputable", "type": "boolean", "default": "false" },
        { "name": "loaded", "type": "unsigned long long", "default": "0" },
        { "name": "total", "type": "unsigned long long", "default": "0" }
      ]
    }, {
      "name": "PromiseRejectionEventInit", "extends": "EventInit",
      "members": [
        { "name": "promise", "type": "Promise<any>", "required": true },
        { "name": "reason", "type": "any" }
      ]
    }, {
      "name": "PushEventInit", "extends": "ExtendableEventInit",
      "members": [{ "name": "data", "type": "PushMessageDataInit" }]
    }, {
      "name": "PushSubscriptionChangeInit", "extends": "ExtendableEventInit",
      "members": [
        { "name": "newSubscription", "type": "PushSubscription", "default": "null" },
        { "name": "oldSubscription", "type": "PushSubscription", "default": "null" }
      ]
    }, {
      "name": "PushSubscriptionJSON",
      "members": [
        { "name": "endpoint", "type": "USVString" },
        { "name": "expirationTime", "type": "DOMTimeStamp", "nullable": true },
        { "name": "keys", "type": "record<DOMString, USVString>" }
      ]
    }, {
      "name": "PushSubscriptionOptionsInit",
      "members": [
        { "name": "applicationServerKey", "type": "(BufferSource or DOMString)", "nullable": true, "default": "null" },
        { "name": "userVisibleOnly", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "RegistrationOptions",
      "members": [
        { "name": "scope", "type": "USVString" },
        { "name": "type", "type": "WorkerType", "default": "\"classic\"" },
        { "name": "updateViaCache", "type": "ServiceWorkerUpdateViaCache", "default": "\"imports\"" }
      ]
    }, {
      "name": "RequestInit",
      "members": [
        { "name": "body", "type": "BodyInit", "nullable": true },
        { "name": "cache", "type": "RequestCache" },
        { "name": "credentials", "type": "RequestCredentials" },
        { "name": "headers", "type": "HeadersInit" },
        { "name": "integrity", "type": "DOMString" },
        { "name": "keepalive", "type": "boolean" },
        { "name": "method", "type": "ByteString" },
        { "name": "mode", "type": "RequestMode" },
        { "name": "redirect", "type": "RequestRedirect" },
        { "name": "referrer", "type": "USVString" },
        { "name": "referrerPolicy", "type": "ReferrerPolicy" },
        { "name": "signal", "type": "AbortSignal", "nullable": true },
        { "name": "window", "type": "any" }
      ]
    }, {
      "name": "ResponseInit",
      "members": [
        { "name": "headers", "type": "HeadersInit" },
        { "name": "status", "type": "unsigned short", "default": "200" },
        { "name": "statusText", "type": "ByteString", "default": "\"OK\"" }
      ]
    }, {
      "name": "RsaHashedImportParams", "extends": "Algorithm",
      "members": [{ "name": "hash", "type": "HashAlgorithmIdentifier", "required": true }]
    }, {
      "name": "RsaHashedKeyAlgorithm", "extends": "RsaKeyAlgorithm",
      "members": [{ "name": "hash", "type": "KeyAlgorithm", "required": true }]
    }, {
      "name": "RsaHashedKeyGenParams", "extends": "RsaKeyGenParams",
      "members": [{ "name": "hash", "type": "HashAlgorithmIdentifier", "required": true }]
    }, {
      "name": "RsaKeyAlgorithm", "extends": "KeyAlgorithm",
      "members": [
        { "name": "modulusLength", "type": "unsigned long", "required": true },
        { "name": "publicExponent", "type": "BigInteger", "required": true }
      ]
    }, {
      "name": "RsaKeyGenParams", "extends": "Algorithm",
      "members": [
        { "name": "modulusLength", "type": "unsigned long", "required": true },
        { "name": "publicExponent", "type": "BigInteger", "required": true }
      ]
    }, {
      "name": "RsaOaepParams", "extends": "Algorithm",
      "members": [{ "name": "label", "type": "BufferSource" }]
    }, {
      "name": "RsaOtherPrimesInfo",
      "members": [
        { "name": "d", "type": "DOMString" },
        { "name": "r", "type": "DOMString" },
        { "name": "t", "type": "DOMString" }
      ]
    }, {
      "name": "RsaPssParams", "extends": "Algorithm",
      "members": [{ "name": "saltLength", "type": "unsigned long", "required": true }]
    },
    { "name": "RTCAnswerOptions", "members": [], "extends": "RTCOfferAnswerOptions" },
    {
      "name": "RTCCertificateExpiration",
      "members": [{ "name": "expires", "type": "DOMTimeStamp" }]
    }, {
      "name": "RTCCertificateStats", "extends": "RTCStats",
      "members": [
        { "name": "base64Certificate", "type": "DOMString" },
        { "name": "fingerprint", "type": "DOMString" },
        { "name": "fingerprintAlgorithm", "type": "DOMString" },
        { "name": "issuerCertificateId", "type": "DOMString" }
      ]
    }, {
      "name": "RTCCodecStats", "extends": "RTCStats",
      "members": [
        { "name": "channels", "type": "unsigned long" },
        { "name": "clockRate", "type": "unsigned long" },
        { "name": "codec", "type": "DOMString" },
        { "name": "implementation", "type": "DOMString" },
        { "name": "parameters", "type": "DOMString" },
        { "name": "payloadType", "type": "unsigned long" }
      ]
    }, {
      "name": "RTCConfiguration",
      "members": [
        { "name": "bundlePolicy", "type": "RTCBundlePolicy", "default": "\"balanced\"" },
        { "name": "certificates", "type": "sequence<RTCCertificate>" },
        { "name": "iceCandidatePoolSize", "type": "octet", "default": "0" },
        { "name": "iceServers", "type": "sequence<RTCIceServer>" },
        { "name": "iceTransportPolicy", "type": "RTCIceTransportPolicy", "default": "\"all\"" },
        { "name": "peerIdentity", "type": "DOMString" },
        { "name": "rtcpMuxPolicy", "type": "RTCRtcpMuxPolicy", "default": "\"require\"" }
      ]
    }, {
      "name": "RTCDataChannelEventInit", "extends": "EventInit",
      "members": [{ "name": "channel", "type": "RTCDataChannel", "required": true }]
    }, {
      "name": "RTCDataChannelInit",
      "members": [
        { "name": "id", "type": "unsigned short" },
        { "name": "maxPacketLifeTime", "type": "unsigned short" },
        { "name": "maxRetransmits", "type": "unsigned short" },
        { "name": "negotiated", "type": "boolean", "default": "false" },
        { "name": "ordered", "type": "boolean", "default": "true" },
        { "name": "priority", "type": "RTCPriorityType", "default": "\"low\"" },
        { "name": "protocol", "type": "USVString", "default": "\"\"" }
      ]
    }, {
      "name": "RTCDataChannelStats", "extends": "RTCStats",
      "members": [
        { "name": "bytesReceived", "type": "unsigned long long" },
        { "name": "bytesSent", "type": "unsigned long long" },
        { "name": "datachannelid", "type": "long" },
        { "name": "label", "type": "DOMString" },
        { "name": "messagesReceived", "type": "unsigned long" },
        { "name": "messagesSent", "type": "unsigned long" },
        { "name": "protocol", "type": "DOMString" },
        { "name": "state", "type": "RTCDataChannelState" }
      ]
    }, {
      "name": "RTCDtlsFingerprint",
      "members": [
        { "name": "algorithm", "type": "DOMString" },
        { "name": "value", "type": "DOMString" }
      ]
    }, {
      "name": "RTCDTMFToneChangeEventInit", "extends": "EventInit",
      "members": [{ "name": "tone", "type": "DOMString", "required": true }]
    }, {
      "name": "RTCErrorEventInit", "extends": "EventInit",
      "members": [{ "name": "error", "type": "RTCError", "nullable": true, "default": "null" }]
    }, {
      "name": "RTCIceCandidateInit",
      "members": [
        { "name": "candidate", "type": "DOMString", "default": "\"\"" },
        { "name": "sdpMid", "type": "DOMString", "nullable": true, "default": "null" },
        { "name": "sdpMLineIndex", "type": "unsigned short", "nullable": true, "default": "null" },
        { "name": "usernameFragment", "type": "DOMString" }
      ]
    }, {
      "name": "RTCIceCandidatePair",
      "members": [
        { "name": "local", "type": "RTCIceCandidate" },
        { "name": "remote", "type": "RTCIceCandidate" }
      ]
    }, {
      "name": "RTCIceCandidatePairStats", "extends": "RTCStats",
      "members": [
        { "name": "availableIncomingBitrate", "type": "double" },
        { "name": "availableOutgoingBitrate", "type": "double" },
        { "name": "bytesReceived", "type": "unsigned long long" },
        { "name": "bytesSent", "type": "unsigned long long" },
        { "name": "consentRequestsReceived", "type": "unsigned long long" },
        { "name": "consentRequestsSent", "type": "unsigned long long" },
        { "name": "consentResponsesReceived", "type": "unsigned long long" },
        { "name": "consentResponsesSent", "type": "unsigned long long" },
        { "name": "currentRoundTripTime", "type": "double" },
        { "name": "localCandidateId", "type": "DOMString" },
        { "name": "nominated", "type": "boolean" },
        { "name": "priority", "type": "unsigned long long" },
        { "name": "readable", "type": "boolean" },
        { "name": "remoteCandidateId", "type": "DOMString" },
        { "name": "requestsReceived", "type": "unsigned long long" },
        { "name": "requestsSent", "type": "unsigned long long" },
        { "name": "responsesReceived", "type": "unsigned long long" },
        { "name": "responsesSent", "type": "unsigned long long" },
        { "name": "retransmissionsReceived", "type": "unsigned long long" },
        { "name": "retransmissionsSent", "type": "unsigned long long" },
        { "name": "state", "type": "RTCStatsIceCandidatePairState" },
        { "name": "totalRoundTripTime", "type": "double" },
        { "name": "transportId", "type": "DOMString" },
        { "name": "writable", "type": "boolean" }
      ]
    }, {
      "name": "RTCIceCandidateStats", "extends": "RTCStats",
      "members": [
        { "name": "candidateType", "type": "RTCIceCandidateType" },
        { "name": "deleted", "type": "boolean", "default": "false" },
        { "name": "ip", "type": "DOMString" },
        { "name": "isRemote", "type": "boolean" },
        { "name": "port", "type": "long" },
        { "name": "priority", "type": "long" },
        { "name": "protocol", "type": "DOMString" },
        { "name": "transportId", "type": "DOMString" },
        { "name": "url", "type": "DOMString" }
      ]
    }, {
      "name": "RTCIceParameters",
      "members": [
        { "name": "password", "type": "DOMString" },
        { "name": "usernameFragment", "type": "DOMString" }
      ]
    }, {
      "name": "RTCIceServer",
      "members": [
        { "name": "credential", "type": "(DOMString or RTCOAuthCredential)" },
        { "name": "credentialType", "type": "RTCIceCredentialType", "default": "\"password\"" },
        { "name": "urls", "type": "(DOMString or sequence<DOMString>)", "required": true },
        { "name": "username", "type": "DOMString" }
      ]
    }, {
      "name": "RTCIdentityAssertionResult",
      "members": [
        { "name": "assertion", "type": "DOMString", "required": true },
        { "name": "idp", "type": "RTCIdentityProviderDetails", "required": true }
      ]
    }, {
      "name": "RTCIdentityProvider",
      "members": [
        { "name": "generateAssertion", "type": "GenerateAssertionCallback", "required": true },
        { "name": "validateAssertion", "type": "ValidateAssertionCallback", "required": true }
      ]
    }, {
      "name": "RTCIdentityProviderDetails",
      "members": [
        { "name": "domain", "type": "DOMString", "required": true },
        { "name": "protocol", "type": "DOMString", "default": "\"default\"" }
      ]
    }, {
      "name": "RTCIdentityProviderOptions",
      "members": [
        { "name": "peerIdentity", "type": "DOMString" },
        { "name": "protocol", "type": "DOMString", "default": "\"default\"" },
        { "name": "usernameHint", "type": "DOMString" }
      ]
    }, {
      "name": "RTCIdentityValidationResult",
      "members": [
        { "name": "contents", "type": "DOMString", "required": true },
        { "name": "identity", "type": "DOMString", "required": true }
      ]
    }, {
      "name": "RTCInboundRTPStreamStats", "extends": "RTCRTPStreamStats",
      "members": [
        { "name": "burstDiscardCount", "type": "unsigned long" },
        { "name": "burstDiscardRate", "type": "double" },
        { "name": "burstLossCount", "type": "unsigned long" },
        { "name": "burstLossRate", "type": "double" },
        { "name": "burstPacketsDiscarded", "type": "unsigned long" },
        { "name": "burstPacketsLost", "type": "unsigned long" },
        { "name": "bytesReceived", "type": "unsigned long long" },
        { "name": "fractionLost", "type": "double" },
        { "name": "framesDecoded", "type": "unsigned long" },
        { "name": "gapDiscardRate", "type": "double" },
        { "name": "gapLossRate", "type": "double" },
        { "name": "jitter", "type": "double" },
        { "name": "packetsDiscarded", "type": "unsigned long" },
        { "name": "packetsLost", "type": "unsigned long" },
        { "name": "packetsReceived", "type": "unsigned long" },
        { "name": "packetsRepaired", "type": "unsigned long" }
      ]
    }, {
      "name": "RTCMediaStreamStats", "extends": "RTCStats",
      "members": [
        { "name": "streamIdentifier", "type": "DOMString" },
        { "name": "trackIds", "type": "sequence<DOMString>" }
      ]
    }, {
      "name": "RTCMediaStreamTrackStats", "extends": "RTCStats",
      "members": [
        { "name": "audioLevel", "type": "double" },
        { "name": "detached", "type": "boolean" },
        { "name": "echoReturnLoss", "type": "double" },
        { "name": "echoReturnLossEnhancement", "type": "double" },
        { "name": "ended", "type": "boolean" },
        { "name": "frameHeight", "type": "unsigned long" },
        { "name": "framesCorrupted", "type": "unsigned long" },
        { "name": "framesDecoded", "type": "unsigned long" },
        { "name": "framesDropped", "type": "unsigned long" },
        { "name": "framesPerSecond", "type": "double" },
        { "name": "framesReceived", "type": "unsigned long" },
        { "name": "framesSent", "type": "unsigned long" },
        { "name": "frameWidth", "type": "unsigned long" },
        { "name": "fullFramesLost", "type": "unsigned long" },
        { "name": "partialFramesLost", "type": "unsigned long" },
        { "name": "remoteSource", "type": "boolean" },
        { "name": "ssrcIds", "type": "sequence<DOMString>" },
        { "name": "trackIdentifier", "type": "DOMString" }
      ]
    }, {
      "name": "RTCOAuthCredential",
      "members": [
        { "name": "accessToken", "type": "DOMString", "required": true },
        { "name": "macKey", "type": "DOMString", "required": true }
      ]
    }, {
      "name": "RTCOfferAnswerOptions",
      "members": [{ "name": "voiceActivityDetection", "type": "boolean", "default": "true" }]
    }, {
      "name": "RTCOfferOptions", "extends": "RTCOfferAnswerOptions",
      "members": [
        { "name": "iceRestart", "type": "boolean", "default": "false" },
        { "name": "offerToReceiveAudio", "type": "boolean" },
        { "name": "offerToReceiveVideo", "type": "boolean" }
      ]
    }, {
      "name": "RTCOutboundRTPStreamStats", "extends": "RTCRTPStreamStats",
      "members": [
        { "name": "bytesSent", "type": "unsigned long long" },
        { "name": "framesEncoded", "type": "unsigned long" },
        { "name": "packetsSent", "type": "unsigned long" },
        { "name": "roundTripTime", "type": "double" },
        { "name": "targetBitrate", "type": "double" }
      ]
    }, {
      "name": "RTCPeerConnectionIceErrorEventInit", "extends": "EventInit",
      "members": [
        { "name": "errorCode", "type": "unsigned short", "required": true },
        { "name": "hostCandidate", "type": "DOMString" },
        { "name": "statusText", "type": "USVString" },
        { "name": "url", "type": "DOMString" }
      ]
    }, {
      "name": "RTCPeerConnectionIceEventInit", "extends": "EventInit",
      "members": [
        { "name": "candidate", "type": "RTCIceCandidate", "nullable": true },
        { "name": "url", "type": "DOMString", "nullable": true }
      ]
    }, {
      "name": "RTCPeerConnectionStats", "extends": "RTCStats",
      "members": [
        { "name": "dataChannelsClosed", "type": "unsigned long" },
        { "name": "dataChannelsOpened", "type": "unsigned long" }
      ]
    }, {
      "name": "RTCRtcpParameters",
      "members": [
        { "name": "cname", "type": "DOMString" },
        { "name": "reducedSize", "type": "boolean" }
      ]
    }, {
      "name": "RTCRtpCapabilities",
      "members": [
        { "name": "codecs", "type": "sequence<RTCRtpCodecCapability>" },
        { "name": "headerExtensions", "type": "sequence<RTCRtpHeaderExtensionCapability>" }
      ]
    }, {
      "name": "RTCRtpCodecCapability",
      "members": [
        { "name": "channels", "type": "unsigned short" },
        { "name": "clockRate", "type": "unsigned long" },
        { "name": "mimeType", "type": "DOMString" },
        { "name": "sdpFmtpLine", "type": "DOMString" }
      ]
    }, {
      "name": "RTCRtpCodecParameters",
      "members": [
        { "name": "channels", "type": "unsigned short" },
        { "name": "clockRate", "type": "unsigned long" },
        { "name": "mimeType", "type": "DOMString" },
        { "name": "payloadType", "type": "octet" },
        { "name": "sdpFmtpLine", "type": "DOMString" }
      ]
    }, {
      "name": "RTCRtpEncodingParameters",
      "members": [
        { "name": "active", "type": "boolean", "default": "true" },
        { "name": "codecPayloadType", "type": "octet" },
        { "name": "dtx", "type": "RTCDtxStatus" },
        { "name": "maxBitrate", "type": "unsigned long" },
        { "name": "maxFramerate", "type": "double" },
        { "name": "priority", "type": "RTCPriorityType", "default": "\"low\"" },
        { "name": "ptime", "type": "unsigned long" },
        { "name": "rid", "type": "DOMString" },
        { "name": "scaleResolutionDownBy", "type": "double" }
      ]
    }, {
      "name": "RTCRtpHeaderExtensionCapability",
      "members": [{ "name": "uri", "type": "DOMString" }]
    }, {
      "name": "RTCRtpHeaderExtensionParameters",
      "members": [
        { "name": "encrypted", "type": "boolean" },
        { "name": "id", "type": "unsigned short" },
        { "name": "uri", "type": "DOMString" }
      ]
    }, {
      "name": "RTCRtpParameters",
      "members": [
        { "name": "codecs", "type": "sequence<RTCRtpCodecParameters>" },
        { "name": "degradationPreference", "type": "RTCDegradationPreference" },
        { "name": "encodings", "type": "sequence<RTCRtpEncodingParameters>" },
        { "name": "headerExtensions", "type": "sequence<RTCRtpHeaderExtensionParameters>" },
        { "name": "rtcp", "type": "RTCRtcpParameters" },
        { "name": "transactionId", "type": "DOMString" }
      ]
    }, {
      "name": "RTCRTPStreamStats", "extends": "RTCStats",
      "members": [
        { "name": "associateStatsId", "type": "DOMString" },
        { "name": "codecId", "type": "DOMString" },
        { "name": "firCount", "type": "unsigned long" },
        { "name": "isRemote", "type": "boolean", "default": "false" },
        { "name": "mediaTrackId", "type": "DOMString" },
        { "name": "mediaType", "type": "DOMString" },
        { "name": "nackCount", "type": "unsigned long" },
        { "name": "pliCount", "type": "unsigned long" },
        { "name": "qpSum", "type": "unsigned long long" },
        { "name": "sliCount", "type": "unsigned long" },
        { "name": "ssrc", "type": "DOMString" },
        { "name": "transportId", "type": "DOMString" }
      ]
    }, {
      "name": "RTCRtpTransceiverInit",
      "members": [
        { "name": "direction", "type": "RTCRtpTransceiverDirection", "default": "\"sendrecv\"" },
        { "name": "sendEncodings", "type": "sequence<RTCRtpEncodingParameters>", "default": "[]" },
        { "name": "streams", "type": "sequence<MediaStream>", "default": "[]" }
      ]
    }, {
      "name": "RTCSessionDescriptionInit",
      "members": [
        { "name": "sdp", "type": "DOMString", "default": "\"\"" },
        { "name": "type", "type": "RTCSdpType", "required": true }
      ]
    }, {
      "name": "RTCStats",
      "members": [
        { "name": "id", "type": "DOMString", "required": true },
        { "name": "timestamp", "type": "DOMHighResTimeStamp", "required": true },
        { "name": "type", "type": "RTCStatsType", "required": true }
      ]
    }, {
      "name": "RTCStats",
      "members": [
        { "name": "id", "type": "DOMString" },
        { "name": "timestamp", "type": "DOMHighResTimeStamp" },
        { "name": "type", "type": "RTCStatsType" }
      ]
    }, {
      "name": "RTCTrackEventInit", "extends": "EventInit",
      "members": [
        { "name": "receiver", "type": "RTCRtpReceiver", "required": true },
        { "name": "streams", "type": "sequence<MediaStream>", "default": "[]" },
        { "name": "track", "type": "MediaStreamTrack", "required": true },
        { "name": "transceiver", "type": "RTCRtpTransceiver", "required": true }
      ]
    }, {
      "name": "RTCTransportStats", "extends": "RTCStats",
      "members": [
        { "name": "activeConnection", "type": "boolean" },
        { "name": "bytesReceived", "type": "unsigned long long" },
        { "name": "bytesSent", "type": "unsigned long long" },
        { "name": "localCertificateId", "type": "DOMString" },
        { "name": "remoteCertificateId", "type": "DOMString" },
        { "name": "rtcpTransportStatsId", "type": "DOMString" },
        { "name": "selectedCandidatePairId", "type": "DOMString" }
      ]
    }, {
      "name": "ScrollIntoViewOptions", "extends": "ScrollOptions",
      "members": [
        { "name": "block", "type": "ScrollLogicalPosition", "default": "\"center\"" },
        { "name": "inline", "type": "ScrollLogicalPosition", "default": "\"center\"" }
      ]
    }, {
      "name": "ScrollOptions",
      "members": [{ "name": "behavior", "type": "ScrollBehavior", "default": "\"auto\"" }]
    }, {
      "name": "ScrollToOptions", "extends": "ScrollOptions",
      "members": [
        { "name": "left", "type": "unrestricted double" },
        { "name": "top", "type": "unrestricted double" }
      ]
    },
    { "name": "Settings", "members": [] },
    {
      "name": "ShadowRootInit",
      "members": [{ "name": "mode", "type": "ShadowRootMode", "required": true }]
    }, {
      "name": "StereoPannerOptions", "extends": "AudioNodeOptions",
      "members": [{ "name": "pan", "type": "float", "default": "0" }]
    }, {
      "name": "StorageEventInit", "extends": "EventInit",
      "members": [
        { "name": "key", "type": "DOMString", "nullable": true, "default": "null" },
        { "name": "newValue", "type": "DOMString", "nullable": true, "default": "null" },
        { "name": "oldValue", "type": "DOMString", "nullable": true, "default": "null" },
        { "name": "storageArea", "type": "Storage", "nullable": true, "default": "null" },
        { "name": "url", "type": "USVString", "default": "\"\"" }
      ]
    }, {
      "name": "SVGBoundingBoxOptions",
      "members": [
        { "name": "clipped", "type": "boolean", "default": "false" },
        { "name": "fill", "type": "boolean", "default": "true" },
        { "name": "markers", "type": "boolean", "default": "false" },
        { "name": "stroke", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "SyncEventInit", "extends": "ExtendableEventInit",
      "members": [
        { "name": "lastChance", "type": "boolean", "default": "false" },
        { "name": "tag", "type": "DOMString", "required": true }
      ]
    }, {
      "name": "TextDecodeOptions",
      "members": [{ "name": "stream", "type": "boolean", "default": "false" }]
    }, {
      "name": "TextDecoderOptions",
      "members": [
        { "name": "fatal", "type": "boolean", "default": "false" },
        { "name": "ignoreBOM", "type": "boolean", "default": "false" }
      ]
    }, {
      "name": "TouchEventInit", "extends": "EventModifierInit",
      "members": [
        { "name": "changedTouches", "type": "sequence<Touch>", "default": "[]" },
        { "name": "targetTouches", "type": "sequence<Touch>", "default": "[]" },
        { "name": "touches", "type": "sequence<Touch>", "default": "[]" }
      ]
    }, {
      "name": "TouchInit",
      "members": [
        { "name": "altitudeAngle", "type": "double", "default": "0" },
        { "name": "azimuthAngle", "type": "double", "default": "0" },
        { "name": "clientX", "type": "double", "default": "0" },
        { "name": "clientY", "type": "double", "default": "0" },
        { "name": "force", "type": "float", "default": "0" },
        { "name": "identifier", "type": "long", "required": true },
        { "name": "pageX", "type": "double", "default": "0" },
        { "name": "pageY", "type": "double", "default": "0" },
        { "name": "radiusX", "type": "float", "default": "0" },
        { "name": "radiusY", "type": "float", "default": "0" },
        { "name": "rotationAngle", "type": "float", "default": "0" },
        { "name": "screenX", "type": "double", "default": "0" },
        { "name": "screenY", "type": "double", "default": "0" },
        { "name": "target", "type": "EventTarget", "required": true },
        { "name": "touchType", "type": "TouchType", "default": "\"direct\"" }
      ]
    }, {
      "name": "TrackEventInit", "extends": "EventInit",
      "members": [{ "name": "track", "type": "(VideoTrack or AudioTrack or TextTrack)", "nullable": true, "default": "null" }]
    }, {
      "name": "TransitionEventInit", "extends": "EventInit",
      "members": [
        { "name": "elapsedTime", "type": "float", "default": "0" },
        { "name": "propertyName", "type": "CSSOMString", "default": "\"\"" },
        { "name": "pseudoElement", "type": "CSSOMString", "default": "\"\"" }
      ]
    }, {
      "name": "UIEventInit", "extends": "EventInit",
      "members": [
        { "name": "detail", "type": "long", "default": "0" },
        { "name": "view", "type": "Window", "nullable": true, "default": "null" }
      ]
    }, {
      "name": "WaveShaperOptions", "extends": "AudioNodeOptions",
      "members": [
        { "name": "curve", "type": "sequence<float>" },
        { "name": "oversample", "type": "OverSampleType", "default": "\"none\"" }
      ]
    }, {
      "name": "WebGLContextAttributes",
      "members": [
        { "name": "alpha", "type": "GLboolean", "default": "true" },
        { "name": "antialias", "type": "GLboolean", "default": "true" },
        { "name": "depth", "type": "GLboolean", "default": "true" },
        { "name": "failIfMajorPerformanceCaveat", "type": "GLboolean", "default": "false" },
        { "name": "powerPreference", "type": "WebGLPowerPreference", "default": "\"default\"" },
        { "name": "premultipliedAlpha", "type": "GLboolean", "default": "true" },
        { "name": "preserveDrawingBuffer", "type": "GLboolean", "default": "false" },
        { "name": "stencil", "type": "GLboolean", "default": "false" }
      ]
    }, {
      "name": "WebGLContextEventInit", "extends": "EventInit",
      "members": [{ "name": "statusMessage", "type": "DOMString", "default": "\"\"" }]
    }, {
      "name": "WheelEventInit", "extends": "MouseEventInit",
      "members": [
        { "name": "deltaMode", "type": "unsigned long", "default": "0" },
        { "name": "deltaX", "type": "double", "default": "0" },
        { "name": "deltaY", "type": "double", "default": "0" },
        { "name": "deltaZ", "type": "double", "default": "0" }
      ]
    }, {
      "name": "WorkerOptions",
      "members": [
        { "name": "credentials", "type": "RequestCredentials", "default": "\"omit\"" },
        { "name": "name", "type": "DOMString", "default": "\"\"" },
        { "name": "type", "type": "WorkerType", "default": "\"classic\"" }
      ]
    }, {
      "name": "WorkletOptions",
      "members": [{ "name": "credentials", "type": "RequestCredentials", "default": "\"omit\"" }]
    }
  ],
  "enums": [{
    "name": "AppendMode",
    "values": ["segments", "sequence"]
  }, {
    "name": "AudioContextLatencyCategory",
    "values": ["balanced", "interactive", "playback"]
  }, {
    "name": "AudioContextState",
    "values": ["suspended", "running", "closed"]
  }, {
    "name": "AudioWorkletProcessorState",
    "values": ["pending", "running", "stopped", "error"]
  }, {
    "name": "BinaryType",
    "values": ["blob", "arraybuffer"]
  }, {
    "name": "BiquadFilterType",
    "values": ["lowpass", "highpass", "bandpass", "lowshelf", "highshelf", "peaking", "notch", "allpass"]
  }, {
    "name": "CanPlayTypeResult",
    "values": ["", "maybe", "probably"]
  }, {
    "name": "CanvasDirection",
    "values": ["ltr", "rtl", "inherit"]
  }, {
    "name": "CanvasFillRule",
    "values": ["nonzero", "evenodd"]
  }, {
    "name": "CanvasLineCap",
    "values": ["butt", "round", "square"]
  }, {
    "name": "CanvasLineJoin",
    "values": ["round", "bevel", "miter"]
  }, {
    "name": "CanvasTextAlign",
    "values": ["start", "end", "left", "right", "center"]
  }, {
    "name": "CanvasTextBaseline",
    "values": ["top", "hanging", "middle", "alphabetic", "ideographic", "bottom"]
  }, {
    "name": "ChannelCountMode",
    "values": ["max", "clamped-max", "explicit"]
  }, {
    "name": "ChannelInterpretation",
    "values": ["speakers", "discrete"]
  }, {
    "name": "ClientType",
    "values": ["window", "worker", "sharedworker", "all"]
  }, {
    "name": "ColorSpaceConversion",
    "values": ["none", "default"]
  }, {
    "name": "CSSBoxType",
    "values": ["margin", "border", "padding", "content"]
  }, {
    "name": "DistanceModelType",
    "values": ["linear", "inverse", "exponential"]
  }, {
    "name": "DocumentReadyState",
    "values": ["loading", "interactive", "complete"]
  }, {
    "name": "EndingTypes",
    "values": ["transparent", "native"]
  }, {
    "name": "EndOfStreamError",
    "values": ["network", "decode"]
  }, {
    "name": "GamepadMappingType",
    "values": ["", "standard"]
  }, {
    "name": "IDBCursorDirection",
    "values": ["next", "nextunique", "prev", "prevunique"]
  }, {
    "name": "IDBRequestReadyState",
    "values": ["pending", "done"]
  }, {
    "name": "IDBTransactionMode",
    "values": ["readonly", "readwrite", "versionchange"]
  }, {
    "name": "ImageOrientation",
    "values": ["none", "flipY"]
  }, {
    "name": "ImageSmoothingQuality",
    "values": ["low", "medium", "high"]
  }, {
    "name": "KeyFormat",
    "values": ["raw", "spki", "pkcs8", "jwk"]
  }, {
    "name": "KeyType",
    "values": ["public", "private", "secret"]
  }, {
    "name": "KeyUsage",
    "values": ["encrypt", "decrypt", "sign", "verify", "deriveKey", "deriveBits", "wrapKey", "unwrapKey"]
  }, {
    "name": "MediaDeviceKind",
    "values": ["audioinput", "audiooutput", "videoinput"]
  }, {
    "name": "MediaKeyMessageType",
    "values": ["license-request", "license-renewal", "license-release", "individualization-request"]
  }, {
    "name": "MediaKeySessionType",
    "values": ["temporary", "persistent-license"]
  }, {
    "name": "MediaKeysRequirement",
    "values": ["required", "optional", "not-allowed"]
  }, {
    "name": "MediaKeyStatus",
    "values": ["usable", "expired", "released", "output-restricted", "output-downscaled", "status-pending", "internal-error"]
  }, {
    "name": "MediaStreamTrackState",
    "values": ["live", "ended"]
  }, {
    "name": "NavigationType",
    "values": ["navigate", "reload", "back_forward", "prerender"]
  }, {
    "name": "NotificationDirection",
    "values": ["auto", "ltr", "rtl"]
  }, {
    "name": "NotificationPermission",
    "values": ["default", "denied", "granted"]
  }, {
    "name": "OffscreenRenderingContextType",
    "values": ["2d", "webgl"]
  }, {
    "name": "OscillatorType",
    "values": ["sine", "square", "sawtooth", "triangle", "custom"]
  }, {
    "name": "OverSampleType",
    "values": ["none", "2x", "4x"]
  }, {
    "name": "PanningModelType",
    "values": ["equalpower", "HRTF"]
  }, {
    "name": "PaymentComplete",
    "values": ["fail", "success", "unknown"]
  }, {
    "name": "PaymentShippingType",
    "values": ["shipping", "delivery", "pickup"]
  }, {
    "name": "PremultiplyAlpha",
    "values": ["none", "premultiply", "default"]
  }, {
    "name": "PushEncryptionKeyName",
    "values": ["p256dh", "auth"]
  }, {
    "name": "PushPermissionState",
    "values": ["denied", "granted", "prompt"]
  }, {
    "name": "ReadyState",
    "values": ["closed", "open", "ended"]
  }, {
    "name": "ReferrerPolicy",
    "values": ["", "no-referrer", "no-referrer-when-downgrade", "same-origin", "origin", "strict-origin", "origin-when-cross-origin", "strict-origin-when-cross-origin", "unsafe-url"]
  }, {
    "name": "RequestCache",
    "values": ["default", "no-store", "reload", "no-cache", "force-cache", "only-if-cached"]
  }, {
    "name": "RequestCredentials",
    "values": ["omit", "same-origin", "include"]
  }, {
    "name": "RequestDestination",
    "values": ["", "audio", "audioworklet", "document", "embed", "font", "image", "manifest", "object", "paintworklet", "report", "script", "sharedworker", "style", "track", "video", "worker", "xslt"]
  }, {
    "name": "RequestMode",
    "values": ["navigate", "same-origin", "no-cors", "cors"]
  }, {
    "name": "RequestRedirect",
    "values": ["follow", "error", "manual"]
  }, {
    "name": "ResizeQuality",
    "values": ["pixelated", "low", "medium", "high"]
  }, {
    "name": "ResponseType",
    "values": ["basic", "cors", "default", "error", "opaque", "opaqueredirect"]
  }, {
    "name": "RTCBundlePolicy",
    "values": ["balanced", "max-compat", "max-bundle"]
  }, {
    "name": "RTCDataChannelState",
    "values": ["connecting", "open", "closing", "closed"]
  }, {
    "name": "RTCDegradationPreference",
    "values": ["maintain-framerate", "maintain-resolution", "balanced"]
  }, {
    "name": "RTCDtlsTransportState",
    "values": ["new", "connecting", "connected", "closed", "failed"]
  }, {
    "name": "RTCDtxStatus",
    "values": ["disabled", "enabled"]
  }, {
    "name": "RTCErrorDetailType",
    "values": ["data-channel-failure", "dtls-failure", "fingerprint-failure", "idp-bad-script-failure", "idp-execution-failure", "idp-load-failure", "idp-need-login", "idp-timeout", "idp-tls-failure", "idp-token-expired", "idp-token-invalid", "sctp-failure", "sdp-syntax-error", "hardware-encoder-not-available", "hardware-encoder-error"]
  }, {
    "name": "RTCIceCandidateType",
    "values": ["host", "srflx", "prflx", "relay"]
  }, {
    "name": "RTCIceComponent",
    "values": ["rtp", "rtcp"]
  }, {
    "name": "RTCIceConnectionState",
    "values": ["new", "checking", "connected", "completed", "failed", "disconnected", "closed"]
  }, {
    "name": "RTCIceCredentialType",
    "values": ["password", "oauth"]
  }, {
    "name": "RTCIceGathererState",
    "values": ["new", "gathering", "complete"]
  }, {
    "name": "RTCIceGatheringState",
    "values": ["new", "gathering", "complete"]
  }, {
    "name": "RTCIceProtocol",
    "values": ["udp", "tcp"]
  }, {
    "name": "RTCIceRole",
    "values": ["controlling", "controlled"]
  }, {
    "name": "RTCIceTcpCandidateType",
    "values": ["active", "passive", "so"]
  }, {
    "name": "RTCIceTransportPolicy",
    "values": ["relay", "all"]
  }, {
    "name": "RTCIceTransportState",
    "values": ["new", "checking", "connected", "completed", "failed", "disconnected", "closed"]
  }, {
    "name": "RTCPeerConnectionState",
    "values": ["new", "connecting", "connected", "disconnected", "failed", "closed"]
  }, {
    "name": "RTCPriorityType",
    "values": ["very-low", "low", "medium", "high"]
  }, {
    "name": "RTCRtcpMuxPolicy",
    "values": ["negotiate", "require"]
  }, {
    "name": "RTCRtpTransceiverDirection",
    "values": ["sendrecv", "sendonly", "recvonly", "inactive"]
  }, {
    "name": "RTCSctpTransportState",
    "values": ["new", "connecting", "connected", "closed"]
  }, {
    "name": "RTCSdpType",
    "values": ["offer", "pranswer", "answer", "rollback"]
  }, {
    "name": "RTCSignalingState",
    "values": ["stable", "have-local-offer", "have-remote-offer", "have-local-pranswer", "have-remote-pranswer", "closed"]
  }, {
    "name": "RTCStatsIceCandidatePairState",
    "values": ["frozen", "waiting", "inprogress", "failed", "succeeded", "cancelled"]
  }, {
    "name": "RTCStatsType",
    "values": ["codec", "inbound-rtp", "outbound-rtp", "peer-connection", "data-channel", "track", "transport", "candidate-pair", "local-candidate", "remote-candidate", "certificate"]
  }, {
    "name": "ScrollBehavior",
    "values": ["auto", "instant", "smooth"]
  }, {
    "name": "ScrollLogicalPosition",
    "values": ["start", "center", "end", "nearest"]
  }, {
    "name": "ScrollRestoration",
    "values": ["auto", "manual"]
  }, {
    "name": "SelectionMode",
    "values": ["select", "start", "end", "preserve"]
  }, {
    "name": "ServiceWorkerState",
    "values": ["installing", "installed", "activating", "activated", "redundant"]
  }, {
    "name": "ServiceWorkerUpdateViaCache",
    "values": ["imports", "all", "none"]
  }, {
    "name": "ShadowRootMode",
    "values": ["open", "closed"]
  }, {
    "name": "SpeechRecognitionErrorCode",
    "values": ["no-speech", "aborted", "audio-capture", "network", "not-allowed", "service-not-allowed", "bad-grammar", "language-not-supported"]
  }, {
    "name": "SpeechSynthesisErrorCode",
    "values": ["canceled", "interrupted", "audio-busy", "audio-hardware", "network", "synthesis-unavailable", "synthesis-failed", "language-unavailable", "voice-unavailable", "text-too-long", "invalid-argument"]
  }, {
    "name": "TextTrackKind",
    "values": ["subtitles", "captions", "descriptions", "chapters", "metadata"]
  }, {
    "name": "TextTrackMode",
    "values": ["disabled", "hidden", "showing"]
  }, {
    "name": "TouchType",
    "values": ["direct", "stylus"]
  }, {
    "name": "VideoFacingModeEnum",
    "values": ["user", "environment", "left", "right"]
  }, {
    "name": "VisibilityState",
    "values": ["hidden", "visible"]
  }, {
    "name": "WebGLPowerPreference",
    "values": ["default", "low-power", "high-performance"]
  }, {
    "name": "WorkerType",
    "values": ["classic", "module"]
  }, {
    "name": "XMLHttpRequestResponseType",
    "values": ["", "arraybuffer", "blob", "document", "json", "text"]
  }],
  "interfaces": [
    {
      "name": "AbortController",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window", "Worker"],
      "operations": [{ "name": "abort", "type": "void", "arguments": [] }],
      "attributes": [{ "name": "signal", "type": "AbortSignal", "readonly": true }]
    }, {
      "name": "AbortSignal", "extends": "EventTarget",
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "aborted", "type": "boolean", "readonly": true },
        { "name": "onabort", "type": "EventHandler" }
      ]
    }, {
      "name": "AbstractWorker", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [{ "name": "onerror", "type": "EventHandler" }]
    }, {
      "name": "AnalyserNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "AnalyserOptions", "optional": true }
        ]
      }],
      "operations": [{
        "name": "getByteFrequencyData", "type": "void",
        "arguments": [{ "name": "array", "type": "Uint8Array" }]
      }, {
        "name": "getByteTimeDomainData", "type": "void",
        "arguments": [{ "name": "array", "type": "Uint8Array" }]
      }, {
        "name": "getFloatFrequencyData", "type": "void",
        "arguments": [{ "name": "array", "type": "Float32Array" }]
      }, {
        "name": "getFloatTimeDomainData", "type": "void",
        "arguments": [{ "name": "array", "type": "Float32Array" }]
      }],
      "attributes": [
        { "name": "fftSize", "type": "unsigned long" },
        { "name": "frequencyBinCount", "type": "unsigned long", "readonly": true },
        { "name": "maxDecibels", "type": "double" },
        { "name": "minDecibels", "type": "double" },
        { "name": "smoothingTimeConstant", "type": "double" }
      ]
    }, {
      "name": "ANGLE_instanced_arrays", "noInterfaceObject": true,
      "constants": [{ "name": "VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE", "type": "GLenum", "value": "35070" }],
      "operations": [{
        "name": "drawArraysInstancedANGLE", "type": "void",
        "arguments": [
          { "name": "mode", "type": "GLenum" },
          { "name": "first", "type": "GLint" },
          { "name": "count", "type": "GLsizei" },
          { "name": "primcount", "type": "GLsizei" }
        ]
      }, {
        "name": "drawElementsInstancedANGLE", "type": "void",
        "arguments": [
          { "name": "mode", "type": "GLenum" },
          { "name": "count", "type": "GLsizei" },
          { "name": "type", "type": "GLenum" },
          { "name": "offset", "type": "GLintptr" },
          { "name": "primcount", "type": "GLsizei" }
        ]
      }, {
        "name": "vertexAttribDivisorANGLE", "type": "void",
        "arguments": [
          { "name": "index", "type": "GLuint" },
          { "name": "divisor", "type": "GLuint" }
        ]
      }]
    }, {
      "name": "AnimationEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "CSSOMString" },
          { "name": "animationEventInitDict", "type": "AnimationEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "animationName", "type": "CSSOMString", "readonly": true },
        { "name": "elapsedTime", "type": "float", "readonly": true },
        { "name": "pseudoElement", "type": "CSSOMString", "readonly": true }
      ]
    }, {
      "name": "ApplicationCache", "extends": "EventTarget",
      "exposed": ["Window"],
      "constants": [
        { "name": "CHECKING", "type": "unsigned short", "value": "2" },
        { "name": "DOWNLOADING", "type": "unsigned short", "value": "3" },
        { "name": "IDLE", "type": "unsigned short", "value": "1" },
        { "name": "OBSOLETE", "type": "unsigned short", "value": "5" },
        { "name": "UNCACHED", "type": "unsigned short", "value": "0" },
        { "name": "UPDATEREADY", "type": "unsigned short", "value": "4" }
      ],
      "operations": [
        { "name": "abort", "type": "void", "arguments": [] },
        { "name": "swapCache", "type": "void", "arguments": [] },
        { "name": "update", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "oncached", "type": "EventHandler" },
        { "name": "onchecking", "type": "EventHandler" },
        { "name": "ondownloading", "type": "EventHandler" },
        { "name": "onerror", "type": "EventHandler" },
        { "name": "onnoupdate", "type": "EventHandler" },
        { "name": "onobsolete", "type": "EventHandler" },
        { "name": "onprogress", "type": "EventHandler" },
        { "name": "onupdateready", "type": "EventHandler" },
        { "name": "status", "type": "unsigned short", "readonly": true }
      ]
    }, {
      "name": "Attr", "extends": "Node",
      "exposed": ["Window"],
      "attributes": [
        { "name": "localName", "type": "DOMString", "readonly": true },
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "namespaceURI", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "ownerElement", "type": "Element", "nullable": true, "readonly": true },
        { "name": "prefix", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "specified", "type": "boolean", "readonly": true },
        { "name": "value", "type": "DOMString" }
      ]
    }, {
      "name": "AudioBuffer",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [{ "name": "options", "type": "AudioBufferOptions" }]
      }],
      "operations": [{
        "name": "copyFromChannel", "type": "void",
        "arguments": [
          { "name": "destination", "type": "Float32Array" },
          { "name": "channelNumber", "type": "unsigned long" },
          { "name": "startInChannel", "type": "unsigned long", "optional": true, "default": "0" }
        ]
      }, {
        "name": "copyToChannel", "type": "void",
        "arguments": [
          { "name": "source", "type": "Float32Array" },
          { "name": "channelNumber", "type": "unsigned long" },
          { "name": "startInChannel", "type": "unsigned long", "optional": true, "default": "0" }
        ]
      }, {
        "name": "getChannelData", "type": "Float32Array",
        "arguments": [{ "name": "channel", "type": "unsigned long" }]
      }],
      "attributes": [
        { "name": "duration", "type": "double", "readonly": true },
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "numberOfChannels", "type": "unsigned long", "readonly": true },
        { "name": "sampleRate", "type": "float", "readonly": true }
      ]
    }, {
      "name": "AudioBufferSourceNode", "extends": "AudioScheduledSourceNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "AudioBufferSourceOptions", "optional": true }
        ]
      }],
      "operations": [{
        "name": "start", "type": "void",
        "arguments": [
          { "name": "when", "type": "double", "optional": true, "default": "0" },
          { "name": "offset", "type": "double", "optional": true },
          { "name": "duration", "type": "double", "optional": true }
        ]
      }, {
        "name": "stop", "type": "void",
        "arguments": [{ "name": "when", "type": "double", "optional": true, "default": "0" }]
      }],
      "attributes": [
        { "name": "buffer", "type": "AudioBuffer", "nullable": true },
        { "name": "detune", "type": "AudioParam", "readonly": true },
        { "name": "loop", "type": "boolean" },
        { "name": "loopEnd", "type": "double" },
        { "name": "loopStart", "type": "double" },
        { "name": "playbackRate", "type": "AudioParam", "readonly": true }
      ]
    }, {
      "name": "AudioContext", "extends": "BaseAudioContext",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [{ "name": "contextOptions", "type": "AudioContextOptions", "optional": true }]
      }],
      "operations": [
        { "name": "close", "type": "Promise<void>", "arguments": [] },
        {
          "name": "createMediaElementSource", "type": "MediaElementAudioSourceNode",
          "arguments": [{ "name": "mediaElement", "type": "HTMLMediaElement" }]
        },
        { "name": "createMediaStreamDestination", "type": "MediaStreamAudioDestinationNode", "arguments": [] },
        {
          "name": "createMediaStreamSource", "type": "MediaStreamAudioSourceNode",
          "arguments": [{ "name": "mediaStream", "type": "MediaStream" }]
        }, {
          "name": "createMediaStreamTrackSource", "type": "MediaStreamTrackAudioSourceNode",
          "arguments": [{ "name": "mediaStreamTrack", "type": "MediaStreamTrack" }]
        },
        { "name": "getOutputTimestamp", "type": "AudioTimestamp", "arguments": [] },
        { "name": "suspend", "type": "Promise<void>", "arguments": [] }
      ],
      "attributes": [
        { "name": "baseLatency", "type": "double", "readonly": true },
        { "name": "outputLatency", "type": "double", "readonly": true }
      ]
    }, {
      "name": "AudioDestinationNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "attributes": [{ "name": "maxChannelCount", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "AudioListener",
      "exposed": ["Window"],
      "operations": [{
        "name": "setOrientation", "type": "void",
        "arguments": [
          { "name": "x", "type": "float" },
          { "name": "y", "type": "float" },
          { "name": "z", "type": "float" },
          { "name": "xUp", "type": "float" },
          { "name": "yUp", "type": "float" },
          { "name": "zUp", "type": "float" }
        ]
      }, {
        "name": "setPosition", "type": "void",
        "arguments": [
          { "name": "x", "type": "float" },
          { "name": "y", "type": "float" },
          { "name": "z", "type": "float" }
        ]
      }],
      "attributes": [
        { "name": "forwardX", "type": "AudioParam", "readonly": true },
        { "name": "forwardY", "type": "AudioParam", "readonly": true },
        { "name": "forwardZ", "type": "AudioParam", "readonly": true },
        { "name": "positionX", "type": "AudioParam", "readonly": true },
        { "name": "positionY", "type": "AudioParam", "readonly": true },
        { "name": "positionZ", "type": "AudioParam", "readonly": true },
        { "name": "upX", "type": "AudioParam", "readonly": true },
        { "name": "upY", "type": "AudioParam", "readonly": true },
        { "name": "upZ", "type": "AudioParam", "readonly": true }
      ]
    }, {
      "name": "AudioNode", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "connect", "type": "AudioNode",
          "arguments": [
            { "name": "destination", "type": "AudioNode" },
            { "name": "output", "type": "unsigned long", "optional": true, "default": "0" },
            { "name": "input", "type": "unsigned long", "optional": true, "default": "0" }
          ]
        }, {
          "name": "connect", "type": "void",
          "arguments": [
            { "name": "destination", "type": "AudioParam" },
            { "name": "output", "type": "unsigned long", "optional": true, "default": "0" }
          ]
        },
        { "name": "disconnect", "type": "void", "arguments": [] },
        {
          "name": "disconnect", "type": "void",
          "arguments": [{ "name": "output", "type": "unsigned long" }]
        }, {
          "name": "disconnect", "type": "void",
          "arguments": [{ "name": "destination", "type": "AudioNode" }]
        }, {
          "name": "disconnect", "type": "void",
          "arguments": [
            { "name": "destination", "type": "AudioNode" },
            { "name": "output", "type": "unsigned long" }
          ]
        }, {
          "name": "disconnect", "type": "void",
          "arguments": [
            { "name": "destination", "type": "AudioNode" },
            { "name": "output", "type": "unsigned long" },
            { "name": "input", "type": "unsigned long" }
          ]
        }, {
          "name": "disconnect", "type": "void",
          "arguments": [{ "name": "destination", "type": "AudioParam" }]
        }, {
          "name": "disconnect", "type": "void",
          "arguments": [
            { "name": "destination", "type": "AudioParam" },
            { "name": "output", "type": "unsigned long" }
          ]
        }
      ],
      "attributes": [
        { "name": "channelCount", "type": "unsigned long" },
        { "name": "channelCountMode", "type": "ChannelCountMode" },
        { "name": "channelInterpretation", "type": "ChannelInterpretation" },
        { "name": "context", "type": "BaseAudioContext", "readonly": true },
        { "name": "numberOfInputs", "type": "unsigned long", "readonly": true },
        { "name": "numberOfOutputs", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "AudioParam",
      "exposed": ["Window"],
      "operations": [{
        "name": "cancelAndHoldAtTime", "type": "AudioParam",
        "arguments": [{ "name": "cancelTime", "type": "double" }]
      }, {
        "name": "cancelScheduledValues", "type": "AudioParam",
        "arguments": [{ "name": "cancelTime", "type": "double" }]
      }, {
        "name": "exponentialRampToValueAtTime", "type": "AudioParam",
        "arguments": [
          { "name": "value", "type": "float" },
          { "name": "endTime", "type": "double" }
        ]
      }, {
        "name": "linearRampToValueAtTime", "type": "AudioParam",
        "arguments": [
          { "name": "value", "type": "float" },
          { "name": "endTime", "type": "double" }
        ]
      }, {
        "name": "setTargetAtTime", "type": "AudioParam",
        "arguments": [
          { "name": "target", "type": "float" },
          { "name": "startTime", "type": "double" },
          { "name": "timeConstant", "type": "float" }
        ]
      }, {
        "name": "setValueAtTime", "type": "AudioParam",
        "arguments": [
          { "name": "value", "type": "float" },
          { "name": "startTime", "type": "double" }
        ]
      }, {
        "name": "setValueCurveAtTime", "type": "AudioParam",
        "arguments": [
          { "name": "values", "type": "sequence<float>" },
          { "name": "startTime", "type": "double" },
          { "name": "duration", "type": "double" }
        ]
      }],
      "attributes": [
        { "name": "defaultValue", "type": "float", "readonly": true },
        { "name": "maxValue", "type": "float", "readonly": true },
        { "name": "minValue", "type": "float", "readonly": true },
        { "name": "value", "type": "float" }
      ]
    }, {
      "name": "AudioParamMap",
      "exposed": ["Window"]
    }, {
      "name": "AudioProcessingEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "AudioProcessingEventInit" }
        ]
      }],
      "attributes": [
        { "name": "inputBuffer", "type": "AudioBuffer", "readonly": true },
        { "name": "outputBuffer", "type": "AudioBuffer", "readonly": true },
        { "name": "playbackTime", "type": "double", "readonly": true }
      ]
    }, {
      "name": "AudioScheduledSourceNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "operations": [{
        "name": "start", "type": "void",
        "arguments": [{ "name": "when", "type": "double", "optional": true, "default": "0" }]
      }, {
        "name": "stop", "type": "void",
        "arguments": [{ "name": "when", "type": "double", "optional": true, "default": "0" }]
      }],
      "attributes": [{ "name": "onended", "type": "EventHandler", "eventHandler": "ended" }],
      "events": [{ "name": "ended", "type": "Event" }]
    }, {
      "name": "AudioTrack",
      "exposed": ["Window"],
      "attributes": [
        { "name": "enabled", "type": "boolean" },
        { "name": "id", "type": "DOMString", "readonly": true },
        { "name": "kind", "type": "DOMString", "readonly": true },
        { "name": "label", "type": "DOMString", "readonly": true },
        { "name": "language", "type": "DOMString", "readonly": true },
        { "name": "sourceBuffer", "type": "SourceBuffer", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "AudioTrackList", "extends": "EventTarget",
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "AudioTrack", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "operations": [{
        "name": "getTrackById", "type": "AudioTrack", "nullable": true,
        "arguments": [{ "name": "id", "type": "DOMString" }]
      }],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "onaddtrack", "type": "EventHandler" },
        { "name": "onchange", "type": "EventHandler" },
        { "name": "onremovetrack", "type": "EventHandler" }
      ]
    }, {
      "name": "AudioWorklet", "extends": "Worklet",
      "exposed": ["Window"]
    }, {
      "name": "AudioWorkletGlobalScope", "extends": "WorkletGlobalScope", "global": "Worklet AudioWorklet",
      "exposed": ["AudioWorklet"],
      "operations": [{
        "name": "registerProcessor", "type": "void",
        "arguments": [
          { "name": "name", "type": "DOMString" },
          { "name": "processorCtor", "type": "VoidFunction" }
        ]
      }],
      "attributes": [
        { "name": "currentTime", "type": "double", "readonly": true },
        { "name": "sampleRate", "type": "float", "readonly": true }
      ]
    }, {
      "name": "AudioWorkletNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "AudioWorkletOptions", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "onprocessorstatechange", "type": "EventHandler" },
        { "name": "parameters", "type": "AudioParamMap", "readonly": true },
        { "name": "port", "type": "MessagePort", "readonly": true },
        { "name": "processorState", "type": "AudioWorkletProcessorState", "readonly": true }
      ]
    }, {
      "name": "AudioWorkletProcessor",
      "exposed": ["AudioWorklet"],
      "constructors": [{
        "arguments": [{ "name": "options", "type": "AudioWorkletOptions", "optional": true }]
      }],
      "attributes": [{ "name": "port", "type": "MessagePort", "readonly": true }]
    }, {
      "name": "BarProp",
      "exposed": ["Window"],
      "attributes": [{ "name": "visible", "type": "boolean", "readonly": true }]
    }, {
      "name": "BaseAudioContext", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [
        { "name": "createAnalyser", "type": "AnalyserNode", "arguments": [] },
        { "name": "createBiquadFilter", "type": "BiquadFilterNode", "arguments": [] },
        {
          "name": "createBuffer", "type": "AudioBuffer",
          "arguments": [
            { "name": "numberOfChannels", "type": "unsigned long" },
            { "name": "length", "type": "unsigned long" },
            { "name": "sampleRate", "type": "float" }
          ]
        },
        { "name": "createBufferSource", "type": "AudioBufferSourceNode", "arguments": [] },
        {
          "name": "createChannelMerger", "type": "ChannelMergerNode",
          "arguments": [{ "name": "numberOfInputs", "type": "unsigned long", "optional": true, "default": "6" }]
        }, {
          "name": "createChannelSplitter", "type": "ChannelSplitterNode",
          "arguments": [{ "name": "numberOfOutputs", "type": "unsigned long", "optional": true, "default": "6" }]
        },
        { "name": "createConstantSource", "type": "ConstantSourceNode", "arguments": [] },
        { "name": "createConvolver", "type": "ConvolverNode", "arguments": [] },
        {
          "name": "createDelay", "type": "DelayNode",
          "arguments": [{ "name": "maxDelayTime", "type": "double", "optional": true, "default": "1" }]
        },
        { "name": "createDynamicsCompressor", "type": "DynamicsCompressorNode", "arguments": [] },
        { "name": "createGain", "type": "GainNode", "arguments": [] },
        {
          "name": "createIIRFilter", "type": "IIRFilterNode",
          "arguments": [
            { "name": "feedforward", "type": "sequence<double>" },
            { "name": "feedback", "type": "sequence<double>" }
          ]
        },
        { "name": "createOscillator", "type": "OscillatorNode", "arguments": [] },
        { "name": "createPanner", "type": "PannerNode", "arguments": [] },
        {
          "name": "createPeriodicWave", "type": "PeriodicWave",
          "arguments": [
            { "name": "real", "type": "sequence<float>" },
            { "name": "imag", "type": "sequence<float>" },
            { "name": "constraints", "type": "PeriodicWaveConstraints", "optional": true }
          ]
        }, {
          "name": "createScriptProcessor", "type": "ScriptProcessorNode",
          "arguments": [
            { "name": "bufferSize", "type": "unsigned long", "optional": true, "default": "0" },
            { "name": "numberOfInputChannels", "type": "unsigned long", "optional": true, "default": "2" },
            { "name": "numberOfOutputChannels", "type": "unsigned long", "optional": true, "default": "2" }
          ]
        },
        { "name": "createStereoPanner", "type": "StereoPannerNode", "arguments": [] },
        { "name": "createWaveShaper", "type": "WaveShaperNode", "arguments": [] },
        {
          "name": "decodeAudioData", "type": "Promise<AudioBuffer>",
          "arguments": [
            { "name": "audioData", "type": "ArrayBuffer" },
            { "name": "successCallback", "type": "DecodeSuccessCallback", "optional": true },
            { "name": "errorCallback", "type": "DecodeErrorCallback", "optional": true }
          ]
        },
        { "name": "resume", "type": "Promise<void>", "arguments": [] }
      ],
      "attributes": [
        { "name": "audioWorklet", "type": "AudioWorklet", "readonly": true },
        { "name": "currentTime", "type": "double", "readonly": true },
        { "name": "destination", "type": "AudioDestinationNode", "readonly": true },
        { "name": "listener", "type": "AudioListener", "readonly": true },
        { "name": "onstatechange", "type": "EventHandler", "eventHandler": "statechange" },
        { "name": "sampleRate", "type": "float", "readonly": true },
        { "name": "state", "type": "AudioContextState", "readonly": true }
      ],
      "events": [{ "name": "statechange", "type": "Event" }]
    }, {
      "name": "BeforeUnloadEvent", "extends": "Event",
      "exposed": ["Window"],
      "attributes": [{ "name": "returnValue", "type": "DOMString" }]
    }, {
      "name": "BiquadFilterNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "BiquadFilterOptions", "optional": true }
        ]
      }],
      "operations": [{
        "name": "getFrequencyResponse", "type": "void",
        "arguments": [
          { "name": "frequencyHz", "type": "Float32Array" },
          { "name": "magResponse", "type": "Float32Array" },
          { "name": "phaseResponse", "type": "Float32Array" }
        ]
      }],
      "attributes": [
        { "name": "detune", "type": "AudioParam", "readonly": true },
        { "name": "frequency", "type": "AudioParam", "readonly": true },
        { "name": "gain", "type": "AudioParam", "readonly": true },
        { "name": "Q", "type": "AudioParam", "readonly": true },
        { "name": "type", "type": "BiquadFilterType" }
      ]
    }, {
      "name": "Blob",
      "constructors": [{
        "arguments": [
          { "name": "blobParts", "type": "sequence<BlobPart>", "optional": true },
          { "name": "options", "type": "BlobPropertyBag", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "slice", "type": "Blob",
        "arguments": [
          { "name": "start", "type": "long long", "optional": true },
          { "name": "end", "type": "long long", "optional": true },
          { "name": "contentType", "type": "DOMString", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "size", "type": "unsigned long long", "readonly": true },
        { "name": "type", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "Body", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "arrayBuffer", "type": "Promise<ArrayBuffer>", "arguments": [] },
        { "name": "blob", "type": "Promise<Blob>", "arguments": [] },
        { "name": "formData", "type": "Promise<FormData>", "arguments": [] },
        { "name": "json", "type": "Promise<any>", "arguments": [] },
        { "name": "text", "type": "Promise<USVString>", "arguments": [] }
      ],
      "attributes": [
        { "name": "body", "type": "ReadableStream", "nullable": true, "readonly": true },
        { "name": "bodyUsed", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "BroadcastChannel", "extends": "EventTarget",
      "constructors": [{
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "postMessage", "type": "void",
          "arguments": [{ "name": "message", "type": "any" }]
        }
      ],
      "attributes": [
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "onmessage", "type": "EventHandler", "eventHandler": "message" },
        { "name": "onmessageerror", "type": "EventHandler", "eventHandler": "messageerror" }
      ],
      "events": [
        { "name": "message", "type": "MessageEvent" },
        { "name": "messageerror", "type": "MessageEvent" }
      ]
    }, {
      "name": "Cache",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "add", "type": "Promise<void>",
        "arguments": [{ "name": "request", "type": "RequestInfo" }]
      }, {
        "name": "addAll", "type": "Promise<void>",
        "arguments": [{ "name": "requests", "type": "sequence<RequestInfo>" }]
      }, {
        "name": "delete", "type": "Promise<boolean>",
        "arguments": [
          { "name": "request", "type": "RequestInfo" },
          { "name": "options", "type": "CacheQueryOptions", "optional": true }
        ]
      }, {
        "name": "keys", "type": "Promise<FrozenArray<Request>>",
        "arguments": [
          { "name": "request", "type": "RequestInfo", "optional": true },
          { "name": "options", "type": "CacheQueryOptions", "optional": true }
        ]
      }, {
        "name": "match", "type": "Promise<any>",
        "arguments": [
          { "name": "request", "type": "RequestInfo" },
          { "name": "options", "type": "CacheQueryOptions", "optional": true }
        ]
      }, {
        "name": "matchAll", "type": "Promise<FrozenArray<Response>>",
        "arguments": [
          { "name": "request", "type": "RequestInfo", "optional": true },
          { "name": "options", "type": "CacheQueryOptions", "optional": true }
        ]
      }, {
        "name": "put", "type": "Promise<void>",
        "arguments": [
          { "name": "request", "type": "RequestInfo" },
          { "name": "response", "type": "Response" }
        ]
      }]
    }, {
      "name": "CacheStorage",
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "delete", "type": "Promise<boolean>",
          "arguments": [{ "name": "cacheName", "type": "DOMString" }]
        }, {
          "name": "has", "type": "Promise<boolean>",
          "arguments": [{ "name": "cacheName", "type": "DOMString" }]
        },
        { "name": "keys", "type": "Promise<sequence<DOMString>>", "arguments": [] },
        {
          "name": "match", "type": "Promise<any>",
          "arguments": [
            { "name": "request", "type": "RequestInfo" },
            { "name": "options", "type": "CacheQueryOptions", "optional": true }
          ]
        }, {
          "name": "open", "type": "Promise<Cache>",
          "arguments": [{ "name": "cacheName", "type": "DOMString" }]
        }
      ]
    }, {
      "name": "CanvasCompositing", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "globalAlpha", "type": "unrestricted double" },
        { "name": "globalCompositeOperation", "type": "DOMString" }
      ]
    }, {
      "name": "CanvasDrawImage", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "drawImage", "type": "void",
        "arguments": [
          { "name": "image", "type": "CanvasImageSource" },
          { "name": "dx", "type": "unrestricted double" },
          { "name": "dy", "type": "unrestricted double" }
        ]
      }, {
        "name": "drawImage", "type": "void",
        "arguments": [
          { "name": "image", "type": "CanvasImageSource" },
          { "name": "dx", "type": "unrestricted double" },
          { "name": "dy", "type": "unrestricted double" },
          { "name": "dw", "type": "unrestricted double" },
          { "name": "dh", "type": "unrestricted double" }
        ]
      }, {
        "name": "drawImage", "type": "void",
        "arguments": [
          { "name": "image", "type": "CanvasImageSource" },
          { "name": "sx", "type": "unrestricted double" },
          { "name": "sy", "type": "unrestricted double" },
          { "name": "sw", "type": "unrestricted double" },
          { "name": "sh", "type": "unrestricted double" },
          { "name": "dx", "type": "unrestricted double" },
          { "name": "dy", "type": "unrestricted double" },
          { "name": "dw", "type": "unrestricted double" },
          { "name": "dh", "type": "unrestricted double" }
        ]
      }]
    }, {
      "name": "CanvasDrawPath", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "beginPath", "type": "void", "arguments": [] },
        {
          "name": "clip", "type": "void",
          "arguments": [
            { "name": "path", "type": "Path2D" },
            { "name": "fillRule", "type": "CanvasFillRule", "optional": true, "default": "\"nonzero\"" }
          ]
        }, {
          "name": "clip", "type": "void",
          "arguments": [{ "name": "fillRule", "type": "CanvasFillRule", "optional": true, "default": "\"nonzero\"" }]
        }, {
          "name": "fill", "type": "void",
          "arguments": [
            { "name": "path", "type": "Path2D" },
            { "name": "fillRule", "type": "CanvasFillRule", "optional": true, "default": "\"nonzero\"" }
          ]
        }, {
          "name": "fill", "type": "void",
          "arguments": [{ "name": "fillRule", "type": "CanvasFillRule", "optional": true, "default": "\"nonzero\"" }]
        }, {
          "name": "isPointInPath", "type": "boolean",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" },
            { "name": "fillRule", "type": "CanvasFillRule", "optional": true, "default": "\"nonzero\"" }
          ]
        }, {
          "name": "isPointInPath", "type": "boolean",
          "arguments": [
            { "name": "path", "type": "Path2D" },
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" },
            { "name": "fillRule", "type": "CanvasFillRule", "optional": true, "default": "\"nonzero\"" }
          ]
        }, {
          "name": "isPointInStroke", "type": "boolean",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "isPointInStroke", "type": "boolean",
          "arguments": [
            { "name": "path", "type": "Path2D" },
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        },
        { "name": "resetClip", "type": "void", "arguments": [] },
        { "name": "stroke", "type": "void", "arguments": [] },
        {
          "name": "stroke", "type": "void",
          "arguments": [{ "name": "path", "type": "Path2D" }]
        }
      ]
    }, {
      "name": "CanvasFillStrokeStyles", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "createLinearGradient", "type": "CanvasGradient",
        "arguments": [
          { "name": "x0", "type": "double" },
          { "name": "y0", "type": "double" },
          { "name": "x1", "type": "double" },
          { "name": "y1", "type": "double" }
        ]
      }, {
        "name": "createPattern", "type": "CanvasPattern", "nullable": true,
        "arguments": [
          { "name": "image", "type": "CanvasImageSource" },
          { "name": "repetition", "type": "DOMString" }
        ]
      }, {
        "name": "createRadialGradient", "type": "CanvasGradient",
        "arguments": [
          { "name": "x0", "type": "double" },
          { "name": "y0", "type": "double" },
          { "name": "r0", "type": "double" },
          { "name": "x1", "type": "double" },
          { "name": "y1", "type": "double" },
          { "name": "r1", "type": "double" }
        ]
      }],
      "attributes": [
        { "name": "fillStyle", "type": "(DOMString or CanvasGradient or CanvasPattern)" },
        { "name": "strokeStyle", "type": "(DOMString or CanvasGradient or CanvasPattern)" }
      ]
    }, {
      "name": "CanvasFilters", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [{ "name": "filter", "type": "DOMString" }]
    }, {
      "name": "CanvasGradient",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "addColorStop", "type": "void",
        "arguments": [
          { "name": "offset", "type": "double" },
          { "name": "color", "type": "DOMString" }
        ]
      }]
    }, {
      "name": "CanvasImageData", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "createImageData", "type": "ImageData",
        "arguments": [
          { "name": "sw", "type": "long" },
          { "name": "sh", "type": "long" }
        ]
      }, {
        "name": "createImageData", "type": "ImageData",
        "arguments": [{ "name": "imagedata", "type": "ImageData" }]
      }, {
        "name": "getImageData", "type": "ImageData",
        "arguments": [
          { "name": "sx", "type": "long" },
          { "name": "sy", "type": "long" },
          { "name": "sw", "type": "long" },
          { "name": "sh", "type": "long" }
        ]
      }, {
        "name": "putImageData", "type": "void",
        "arguments": [
          { "name": "imagedata", "type": "ImageData" },
          { "name": "dx", "type": "long" },
          { "name": "dy", "type": "long" }
        ]
      }, {
        "name": "putImageData", "type": "void",
        "arguments": [
          { "name": "imagedata", "type": "ImageData" },
          { "name": "dx", "type": "long" },
          { "name": "dy", "type": "long" },
          { "name": "dirtyX", "type": "long" },
          { "name": "dirtyY", "type": "long" },
          { "name": "dirtyWidth", "type": "long" },
          { "name": "dirtyHeight", "type": "long" }
        ]
      }]
    }, {
      "name": "CanvasImageSmoothing", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "imageSmoothingEnabled", "type": "boolean" },
        { "name": "imageSmoothingQuality", "type": "ImageSmoothingQuality" }
      ]
    }, {
      "name": "CanvasPath", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "arc", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" },
            { "name": "radius", "type": "unrestricted double" },
            { "name": "startAngle", "type": "unrestricted double" },
            { "name": "endAngle", "type": "unrestricted double" },
            { "name": "anticlockwise", "type": "boolean", "optional": true, "default": "false" }
          ]
        }, {
          "name": "arcTo", "type": "void",
          "arguments": [
            { "name": "x1", "type": "unrestricted double" },
            { "name": "y1", "type": "unrestricted double" },
            { "name": "x2", "type": "unrestricted double" },
            { "name": "y2", "type": "unrestricted double" },
            { "name": "radius", "type": "unrestricted double" }
          ]
        }, {
          "name": "arcTo", "type": "void",
          "arguments": [
            { "name": "x1", "type": "unrestricted double" },
            { "name": "y1", "type": "unrestricted double" },
            { "name": "x2", "type": "unrestricted double" },
            { "name": "y2", "type": "unrestricted double" },
            { "name": "radiusX", "type": "unrestricted double" },
            { "name": "radiusY", "type": "unrestricted double" },
            { "name": "rotation", "type": "unrestricted double" }
          ]
        }, {
          "name": "bezierCurveTo", "type": "void",
          "arguments": [
            { "name": "cp1x", "type": "unrestricted double" },
            { "name": "cp1y", "type": "unrestricted double" },
            { "name": "cp2x", "type": "unrestricted double" },
            { "name": "cp2y", "type": "unrestricted double" },
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        },
        { "name": "closePath", "type": "void", "arguments": [] },
        {
          "name": "ellipse", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" },
            { "name": "radiusX", "type": "unrestricted double" },
            { "name": "radiusY", "type": "unrestricted double" },
            { "name": "rotation", "type": "unrestricted double" },
            { "name": "startAngle", "type": "unrestricted double" },
            { "name": "endAngle", "type": "unrestricted double" },
            { "name": "anticlockwise", "type": "boolean", "optional": true, "default": "false" }
          ]
        }, {
          "name": "lineTo", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "moveTo", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "quadraticCurveTo", "type": "void",
          "arguments": [
            { "name": "cpx", "type": "unrestricted double" },
            { "name": "cpy", "type": "unrestricted double" },
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "rect", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" },
            { "name": "w", "type": "unrestricted double" },
            { "name": "h", "type": "unrestricted double" }
          ]
        }
      ]
    }, {
      "name": "CanvasPathDrawingStyles", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "getLineDash", "type": "sequence<unrestricted double>", "arguments": [] },
        {
          "name": "setLineDash", "type": "void",
          "arguments": [{ "name": "segments", "type": "sequence<unrestricted double>" }]
        }
      ],
      "attributes": [
        { "name": "lineCap", "type": "CanvasLineCap" },
        { "name": "lineDashOffset", "type": "unrestricted double" },
        { "name": "lineJoin", "type": "CanvasLineJoin" },
        { "name": "lineWidth", "type": "unrestricted double" },
        { "name": "miterLimit", "type": "unrestricted double" }
      ]
    }, {
      "name": "CanvasPattern",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "setTransform", "type": "void",
        "arguments": [{ "name": "transform", "type": "DOMMatrix2DInit", "optional": true }]
      }]
    }, {
      "name": "CanvasRect", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "clearRect", "type": "void",
        "arguments": [
          { "name": "x", "type": "unrestricted double" },
          { "name": "y", "type": "unrestricted double" },
          { "name": "w", "type": "unrestricted double" },
          { "name": "h", "type": "unrestricted double" }
        ]
      }, {
        "name": "fillRect", "type": "void",
        "arguments": [
          { "name": "x", "type": "unrestricted double" },
          { "name": "y", "type": "unrestricted double" },
          { "name": "w", "type": "unrestricted double" },
          { "name": "h", "type": "unrestricted double" }
        ]
      }, {
        "name": "strokeRect", "type": "void",
        "arguments": [
          { "name": "x", "type": "unrestricted double" },
          { "name": "y", "type": "unrestricted double" },
          { "name": "w", "type": "unrestricted double" },
          { "name": "h", "type": "unrestricted double" }
        ]
      }]
    }, {
      "name": "CanvasRenderingContext2D",
      "exposed": ["Window"],
      "attributes": [{ "name": "canvas", "type": "HTMLCanvasElement", "readonly": true }],
      "implements": ["CanvasState", "CanvasTransform", "CanvasCompositing", "CanvasImageSmoothing", "CanvasFillStrokeStyles", "CanvasShadowStyles", "CanvasFilters", "CanvasRect", "CanvasDrawPath", "CanvasUserInterface", "CanvasText", "CanvasDrawImage", "CanvasImageData", "CanvasPathDrawingStyles", "CanvasTextDrawingStyles", "CanvasPath"]
    }, {
      "name": "CanvasShadowStyles", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "shadowBlur", "type": "unrestricted double" },
        { "name": "shadowColor", "type": "DOMString" },
        { "name": "shadowOffsetX", "type": "unrestricted double" },
        { "name": "shadowOffsetY", "type": "unrestricted double" }
      ]
    }, {
      "name": "CanvasState", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "restore", "type": "void", "arguments": [] },
        { "name": "save", "type": "void", "arguments": [] }
      ]
    }, {
      "name": "CanvasText", "noInterfaceObject": true,
      "exposed": ["Window"],
      "operations": [{
        "name": "fillText", "type": "void",
        "arguments": [
          { "name": "text", "type": "DOMString" },
          { "name": "x", "type": "unrestricted double" },
          { "name": "y", "type": "unrestricted double" },
          { "name": "maxWidth", "type": "unrestricted double", "optional": true }
        ]
      }, {
        "name": "measureText", "type": "TextMetrics",
        "arguments": [{ "name": "text", "type": "DOMString" }]
      }, {
        "name": "strokeText", "type": "void",
        "arguments": [
          { "name": "text", "type": "DOMString" },
          { "name": "x", "type": "unrestricted double" },
          { "name": "y", "type": "unrestricted double" },
          { "name": "maxWidth", "type": "unrestricted double", "optional": true }
        ]
      }]
    }, {
      "name": "CanvasTextDrawingStyles", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [
        { "name": "direction", "type": "CanvasDirection" },
        { "name": "font", "type": "DOMString" },
        { "name": "textAlign", "type": "CanvasTextAlign" },
        { "name": "textBaseline", "type": "CanvasTextBaseline" }
      ]
    }, {
      "name": "CanvasTransform", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "getTransform", "type": "DOMMatrix", "arguments": [] },
        { "name": "resetTransform", "type": "void", "arguments": [] },
        {
          "name": "rotate", "type": "void",
          "arguments": [{ "name": "angle", "type": "unrestricted double" }]
        }, {
          "name": "scale", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "setTransform", "type": "void",
          "arguments": [
            { "name": "a", "type": "unrestricted double" },
            { "name": "b", "type": "unrestricted double" },
            { "name": "c", "type": "unrestricted double" },
            { "name": "d", "type": "unrestricted double" },
            { "name": "e", "type": "unrestricted double" },
            { "name": "f", "type": "unrestricted double" }
          ]
        }, {
          "name": "setTransform", "type": "void",
          "arguments": [{ "name": "transform", "type": "DOMMatrix2DInit", "optional": true }]
        }, {
          "name": "transform", "type": "void",
          "arguments": [
            { "name": "a", "type": "unrestricted double" },
            { "name": "b", "type": "unrestricted double" },
            { "name": "c", "type": "unrestricted double" },
            { "name": "d", "type": "unrestricted double" },
            { "name": "e", "type": "unrestricted double" },
            { "name": "f", "type": "unrestricted double" }
          ]
        }, {
          "name": "translate", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }
      ]
    }, {
      "name": "CanvasUserInterface", "noInterfaceObject": true,
      "exposed": ["Window"],
      "operations": [
        {
          "name": "drawFocusIfNeeded", "type": "void",
          "arguments": [{ "name": "element", "type": "Element" }]
        }, {
          "name": "drawFocusIfNeeded", "type": "void",
          "arguments": [
            { "name": "path", "type": "Path2D" },
            { "name": "element", "type": "Element" }
          ]
        },
        { "name": "scrollPathIntoView", "type": "void", "arguments": [] },
        {
          "name": "scrollPathIntoView", "type": "void",
          "arguments": [{ "name": "path", "type": "Path2D" }]
        }
      ]
    }, {
      "name": "CaretPosition",
      "operations": [{ "name": "getClientRect", "type": "DOMRect", "nullable": true, "arguments": [] }],
      "attributes": [
        { "name": "offset", "type": "unsigned long", "readonly": true },
        { "name": "offsetNode", "type": "Node", "readonly": true }
      ]
    }, {
      "name": "CDATASection", "extends": "Text",
      "exposed": ["Window"]
    }, {
      "name": "ChannelMergerNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "ChannelMergerOptions", "optional": true }
        ]
      }]
    }, {
      "name": "ChannelSplitterNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "ChannelSplitterNode", "optional": true }
        ]
      }]
    }, {
      "name": "CharacterData", "extends": "Node",
      "exposed": ["Window"],
      "operations": [{
        "name": "appendData", "type": "void",
        "arguments": [{ "name": "data", "type": "DOMString" }]
      }, {
        "name": "deleteData", "type": "void",
        "arguments": [
          { "name": "offset", "type": "unsigned long" },
          { "name": "count", "type": "unsigned long" }
        ]
      }, {
        "name": "insertData", "type": "void",
        "arguments": [
          { "name": "offset", "type": "unsigned long" },
          { "name": "data", "type": "DOMString" }
        ]
      }, {
        "name": "replaceData", "type": "void",
        "arguments": [
          { "name": "offset", "type": "unsigned long" },
          { "name": "count", "type": "unsigned long" },
          { "name": "data", "type": "DOMString" }
        ]
      }, {
        "name": "substringData", "type": "DOMString",
        "arguments": [
          { "name": "offset", "type": "unsigned long" },
          { "name": "count", "type": "unsigned long" }
        ]
      }],
      "attributes": [
        { "name": "data", "type": "DOMString" },
        { "name": "length", "type": "unsigned long", "readonly": true }
      ],
      "implements": ["NonDocumentTypeChildNode", "ChildNode"]
    }, {
      "name": "ChildNode", "noInterfaceObject": true,
      "exposed": ["Window"],
      "operations": [
        {
          "name": "after", "type": "void",
          "arguments": [{ "name": "nodes", "type": "(Node or DOMString)", "variadic": true }]
        }, {
          "name": "before", "type": "void",
          "arguments": [{ "name": "nodes", "type": "(Node or DOMString)", "variadic": true }]
        },
        { "name": "remove", "type": "void", "arguments": [] },
        {
          "name": "replaceWith", "type": "void",
          "arguments": [{ "name": "nodes", "type": "(Node or DOMString)", "variadic": true }]
        }
      ]
    }, {
      "name": "Client",
      "exposed": ["ServiceWorker"],
      "operations": [{
        "name": "postMessage", "type": "void",
        "arguments": [
          { "name": "message", "type": "any" },
          { "name": "transfer", "type": "sequence<object>", "optional": true, "default": "[]" }
        ]
      }],
      "attributes": [
        { "name": "id", "type": "DOMString", "readonly": true },
        { "name": "reserved", "type": "boolean", "readonly": true },
        { "name": "type", "type": "ClientType", "readonly": true },
        { "name": "url", "type": "USVString", "readonly": true }
      ]
    }, {
      "name": "Clients",
      "exposed": ["ServiceWorker"],
      "operations": [
        { "name": "claim", "type": "Promise<void>", "arguments": [] },
        {
          "name": "get", "type": "Promise<any>",
          "arguments": [{ "name": "id", "type": "DOMString" }]
        }, {
          "name": "matchAll", "type": "Promise<sequence<Client>>",
          "arguments": [{ "name": "options", "type": "ClientQueryOptions", "optional": true }]
        }, {
          "name": "openWindow", "type": "Promise<WindowClient?>",
          "arguments": [{ "name": "url", "type": "USVString" }]
        }
      ]
    }, {
      "name": "Clipboard", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [
        { "name": "read", "type": "Promise<DataTransfer>", "arguments": [] },
        { "name": "readText", "type": "Promise<DOMString>", "arguments": [] },
        {
          "name": "write", "type": "Promise<void>",
          "arguments": [{ "name": "data", "type": "DataTransfer" }]
        }, {
          "name": "writeText", "type": "Promise<void>",
          "arguments": [{ "name": "data", "type": "DOMString" }]
        }
      ]
    }, {
      "name": "Clipboard", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [
        { "name": "read", "type": "Promise<DataTransfer>", "arguments": [] },
        { "name": "readText", "type": "Promise<DOMString>", "arguments": [] },
        {
          "name": "write", "type": "Promise<void>",
          "arguments": [{ "name": "data", "type": "DataTransfer" }]
        }, {
          "name": "writeText", "type": "Promise<void>",
          "arguments": [{ "name": "data", "type": "DOMString" }]
        }
      ]
    }, {
      "name": "ClipboardEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "ClipboardEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [{ "name": "clipboardData", "type": "DataTransfer", "nullable": true, "readonly": true }]
    }, {
      "name": "ClipboardEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "ClipboardEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [{ "name": "clipboardData", "type": "DataTransfer", "nullable": true, "readonly": true }]
    }, {
      "name": "CloseEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "CloseEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "code", "type": "unsigned short", "readonly": true },
        { "name": "reason", "type": "USVString", "readonly": true },
        { "name": "wasClean", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "Comment", "extends": "CharacterData",
      "constructors": [{
        "arguments": [{ "name": "data", "type": "DOMString", "optional": true, "default": "\"\"" }]
      }],
      "exposed": ["Window"]
    }, {
      "name": "CompositionEvent", "extends": "UIEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "CompositionEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [{ "name": "data", "type": "DOMString", "readonly": true }]
    }, {
      "name": "ConstantSourceNode", "extends": "AudioScheduledSourceNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "ConstantSourceOptions", "optional": true }
        ]
      }],
      "attributes": [{ "name": "offset", "type": "AudioParam", "readonly": true }]
    }, {
      "name": "ConstrainablePattern", "noInterfaceObject": true,
      "operations": [
        {
          "name": "applyConstraints", "type": "Promise<void>",
          "arguments": [{ "name": "constraints", "type": "Constraints", "optional": true }]
        },
        { "name": "getCapabilities", "type": "Capabilities", "arguments": [] },
        { "name": "getConstraints", "type": "Constraints", "arguments": [] },
        { "name": "getSettings", "type": "Settings", "arguments": [] }
      ],
      "attributes": [{ "name": "onoverconstrained", "type": "EventHandler", "eventHandler": "overconstrained" }],
      "events": [{ "name": "overconstrained", "type": "OverconstrainedErrorEvent" }]
    }, {
      "name": "ConvolverNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "ConvolverOptions", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "buffer", "type": "AudioBuffer", "nullable": true },
        { "name": "normalize", "type": "boolean" }
      ]
    }, {
      "name": "Coordinates", "noInterfaceObject": true,
      "attributes": [
        { "name": "accuracy", "type": "double", "readonly": true },
        { "name": "altitude", "type": "double", "nullable": true, "readonly": true },
        { "name": "altitudeAccuracy", "type": "double", "nullable": true, "readonly": true },
        { "name": "heading", "type": "double", "nullable": true, "readonly": true },
        { "name": "latitude", "type": "double", "readonly": true },
        { "name": "longitude", "type": "double", "readonly": true },
        { "name": "speed", "type": "double", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "Crypto",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "getRandomValues", "type": "ArrayBufferView",
        "arguments": [{ "name": "array", "type": "ArrayBufferView" }]
      }],
      "attributes": [{ "name": "subtle", "type": "SubtleCrypto", "readonly": true }]
    }, {
      "name": "CryptoKey",
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "algorithm", "type": "object", "readonly": true },
        { "name": "extractable", "type": "boolean", "readonly": true },
        { "name": "type", "type": "KeyType", "readonly": true },
        { "name": "usages", "type": "object", "readonly": true }
      ]
    }, {
      "name": "CSS",
      "exposed": ["Window"],
      "operations": [{
        "name": "escape", "type": "CSSOMString", "static": true,
        "arguments": [{ "name": "ident", "type": "CSSOMString" }]
      }, {
        "name": "supports", "type": "boolean", "static": true,
        "arguments": [
          { "name": "property", "type": "CSSOMString" },
          { "name": "value", "type": "CSSOMString" }
        ]
      }, {
        "name": "supports", "type": "boolean", "static": true,
        "arguments": [{ "name": "conditionText", "type": "CSSOMString" }]
      }]
    }, {
      "name": "CSSConditionRule", "extends": "CSSGroupingRule",
      "attributes": [{ "name": "conditionText", "type": "CSSOMString" }]
    }, {
      "name": "CSSGroupingRule", "extends": "CSSRule",
      "operations": [{
        "name": "deleteRule", "type": "void",
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "insertRule", "type": "unsigned long",
        "arguments": [
          { "name": "rule", "type": "CSSOMString" },
          { "name": "index", "type": "unsigned long" }
        ]
      }],
      "attributes": [{ "name": "cssRules", "type": "CSSRuleList", "readonly": true }]
    }, {
      "name": "CSSGroupingRule", "extends": "CSSRule",
      "exposed": ["Window"],
      "operations": [{
        "name": "deleteRule", "type": "void",
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "insertRule", "type": "unsigned long",
        "arguments": [
          { "name": "rule", "type": "CSSOMString" },
          { "name": "index", "type": "unsigned long", "optional": true, "default": "0" }
        ]
      }],
      "attributes": [{ "name": "cssRules", "type": "CSSRuleList", "readonly": true }]
    }, {
      "name": "CSSImportRule", "extends": "CSSRule",
      "exposed": ["Window"],
      "attributes": [
        { "name": "href", "type": "USVString", "readonly": true },
        { "name": "media", "type": "MediaList", "readonly": true },
        { "name": "styleSheet", "type": "CSSStyleSheet", "readonly": true }
      ]
    }, {
      "name": "CSSKeyframeRule", "extends": "CSSRule",
      "exposed": ["Window"],
      "attributes": [
        { "name": "keyText", "type": "CSSOMString" },
        { "name": "style", "type": "CSSStyleDeclaration", "readonly": true }
      ]
    }, {
      "name": "CSSKeyframesRule", "extends": "CSSRule",
      "exposed": ["Window"],
      "operations": [{
        "name": "appendRule", "type": "void",
        "arguments": [{ "name": "rule", "type": "CSSOMString" }]
      }, {
        "name": "deleteRule", "type": "void",
        "arguments": [{ "name": "select", "type": "CSSOMString" }]
      }, {
        "name": "findRule", "type": "CSSKeyframeRule", "nullable": true,
        "arguments": [{ "name": "select", "type": "CSSOMString" }]
      }],
      "attributes": [
        { "name": "cssRules", "type": "CSSRuleList", "readonly": true },
        { "name": "name", "type": "CSSOMString" }
      ]
    }, {
      "name": "CSSMarginRule", "extends": "CSSRule",
      "exposed": ["Window"],
      "attributes": [
        { "name": "name", "type": "CSSOMString", "readonly": true },
        { "name": "style", "type": "CSSStyleDeclaration", "readonly": true }
      ]
    }, {
      "name": "CSSMediaRule", "extends": "CSSConditionRule",
      "attributes": [{ "name": "media", "type": "MediaList", "readonly": true }]
    }, {
      "name": "CSSNamespaceRule", "extends": "CSSRule",
      "exposed": ["Window"],
      "attributes": [
        { "name": "namespaceURI", "type": "CSSOMString", "readonly": true },
        { "name": "prefix", "type": "CSSOMString", "readonly": true }
      ]
    }, {
      "name": "CSSPageRule", "extends": "CSSGroupingRule",
      "exposed": ["Window"],
      "attributes": [
        { "name": "selectorText", "type": "CSSOMString" },
        { "name": "style", "type": "CSSStyleDeclaration", "readonly": true }
      ]
    }, {
      "name": "CSSPseudoElement", "partial": true,
      "implements": ["GeometryUtils"]
    }, {
      "name": "CSSRule",
      "exposed": ["Window"],
      "constants": [
        { "name": "CHARSET_RULE", "type": "unsigned short", "value": "2" },
        { "name": "FONT_FACE_RULE", "type": "unsigned short", "value": "5" },
        { "name": "IMPORT_RULE", "type": "unsigned short", "value": "3" },
        { "name": "KEYFRAME_RULE", "type": "unsigned short", "value": "8" },
        { "name": "KEYFRAMES_RULE", "type": "unsigned short", "value": "7" },
        { "name": "MARGIN_RULE", "type": "unsigned short", "value": "9" },
        { "name": "MEDIA_RULE", "type": "unsigned short", "value": "4" },
        { "name": "NAMESPACE_RULE", "type": "unsigned short", "value": "10" },
        { "name": "PAGE_RULE", "type": "unsigned short", "value": "6" },
        { "name": "STYLE_RULE", "type": "unsigned short", "value": "1" },
        { "name": "SUPPORTS_RULE", "type": "unsigned short", "value": "12" }
      ],
      "attributes": [
        { "name": "cssText", "type": "CSSOMString" },
        { "name": "parentRule", "type": "CSSRule", "nullable": true, "readonly": true },
        { "name": "parentStyleSheet", "type": "CSSStyleSheet", "nullable": true, "readonly": true },
        { "name": "type", "type": "unsigned short", "readonly": true }
      ]
    }, {
      "name": "CSSRuleList",
      "exposed": ["Window"],
      "operations": [{
        "name": "item", "type": "CSSRule", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "CSSStyleDeclaration",
      "exposed": ["Window"],
      "operations": [{
        "name": "getPropertyPriority", "type": "CSSOMString",
        "arguments": [{ "name": "property", "type": "CSSOMString" }]
      }, {
        "name": "getPropertyValue", "type": "CSSOMString",
        "arguments": [{ "name": "property", "type": "CSSOMString" }]
      }, {
        "name": "item", "type": "CSSOMString", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "removeProperty", "type": "CSSOMString",
        "arguments": [{ "name": "property", "type": "CSSOMString" }]
      }, {
        "name": "setProperty", "type": "void",
        "arguments": [
          { "name": "property", "type": "CSSOMString" },
          { "name": "value", "type": "CSSOMString" },
          { "name": "priority", "type": "CSSOMString", "optional": true, "default": "\"\"" }
        ]
      }, {
        "name": "setPropertyPriority", "type": "void",
        "arguments": [
          { "name": "property", "type": "CSSOMString" },
          { "name": "priority", "type": "CSSOMString" }
        ]
      }, {
        "name": "setPropertyValue", "type": "void",
        "arguments": [
          { "name": "property", "type": "CSSOMString" },
          { "name": "value", "type": "CSSOMString" }
        ]
      }],
      "attributes": [
        { "name": "cssFloat", "type": "CSSOMString" },
        { "name": "cssText", "type": "CSSOMString" },
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "parentRule", "type": "CSSRule", "nullable": true, "readonly": true },
        { "name": "resize", "cssProperty": "resize", "type": "CSSOMString" },
        { "name": "scrollPadding", "cssProperty": "scroll-padding", "type": "CSSOMString" },
        { "name": "scrollPaddingBlock", "cssProperty": "scroll-padding-block", "type": "CSSOMString" },
        { "name": "scrollPaddingBlockEnd", "cssProperty": "scroll-padding-block-end", "type": "CSSOMString" },
        { "name": "scrollPaddingBlockStart", "cssProperty": "scroll-padding-block-start", "type": "CSSOMString" },
        { "name": "scrollPaddingBottom", "cssProperty": "scroll-padding-bottom", "type": "CSSOMString" },
        { "name": "scrollPaddingInline", "cssProperty": "scroll-padding-inline", "type": "CSSOMString" },
        { "name": "scrollPaddingInlineEnd", "cssProperty": "scroll-padding-inline-end", "type": "CSSOMString" },
        { "name": "scrollPaddingInlineStart", "cssProperty": "scroll-padding-inline-start", "type": "CSSOMString" },
        { "name": "scrollPaddingLeft", "cssProperty": "scroll-padding-left", "type": "CSSOMString" },
        { "name": "scrollPaddingRight", "cssProperty": "scroll-padding-right", "type": "CSSOMString" },
        { "name": "scrollPaddingTop", "cssProperty": "scroll-padding-top", "type": "CSSOMString" },
        { "name": "scrollSnapAlign", "cssProperty": "scroll-snap-align", "type": "CSSOMString" },
        { "name": "scrollSnapMargin", "cssProperty": "scroll-snap-margin", "type": "CSSOMString" },
        { "name": "scrollSnapMarginBlock", "cssProperty": "scroll-snap-margin-block", "type": "CSSOMString" },
        { "name": "scrollSnapMarginBlockEnd", "cssProperty": "scroll-snap-margin-block-end", "type": "CSSOMString" },
        { "name": "scrollSnapMarginBlockStart", "cssProperty": "scroll-snap-margin-block-start", "type": "CSSOMString" },
        { "name": "scrollSnapMarginBottom", "cssProperty": "scroll-snap-margin-bottom", "type": "CSSOMString" },
        { "name": "scrollSnapMarginInline", "cssProperty": "scroll-snap-margin-inline", "type": "CSSOMString" },
        { "name": "scrollSnapMarginInlineEnd", "cssProperty": "scroll-snap-margin-inline-end", "type": "CSSOMString" },
        { "name": "scrollSnapMarginInlineStart", "cssProperty": "scroll-snap-margin-inline-start", "type": "CSSOMString" },
        { "name": "scrollSnapMarginLeft", "cssProperty": "scroll-snap-margin-left", "type": "CSSOMString" },
        { "name": "scrollSnapMarginRight", "cssProperty": "scroll-snap-margin-right", "type": "CSSOMString" },
        { "name": "scrollSnapMarginTop", "cssProperty": "scroll-snap-margin-top", "type": "CSSOMString" },
        { "name": "scrollSnapStop", "cssProperty": "scroll-snap-stop", "type": "CSSOMString" },
        { "name": "scrollSnapType", "cssProperty": "scroll-snap-type", "type": "CSSOMString" },
        { "name": "userSelect", "cssProperty": "user-select", "type": "CSSOMString" }
      ]
    }, {
      "name": "CSSStyleRule", "extends": "CSSRule",
      "exposed": ["Window"],
      "attributes": [
        { "name": "selectorText", "type": "CSSOMString" },
        { "name": "style", "type": "CSSStyleDeclaration", "readonly": true }
      ]
    }, {
      "name": "CSSStyleSheet", "extends": "StyleSheet",
      "exposed": ["Window"],
      "operations": [{
        "name": "deleteRule", "type": "void",
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "insertRule", "type": "unsigned long",
        "arguments": [
          { "name": "rule", "type": "CSSOMString" },
          { "name": "index", "type": "unsigned long", "optional": true, "default": "0" }
        ]
      }],
      "attributes": [
        { "name": "cssRules", "type": "CSSRuleList", "readonly": true },
        { "name": "ownerRule", "type": "CSSRule", "nullable": true, "readonly": true }
      ]
    },
    { "name": "CSSSupportsRule", "extends": "CSSConditionRule" },
    {
      "name": "CustomElementRegistry",
      "exposed": ["Window"],
      "operations": [{
        "name": "define", "type": "void",
        "arguments": [
          { "name": "name", "type": "DOMString" },
          { "name": "constructor", "type": "Function" },
          { "name": "options", "type": "ElementDefinitionOptions", "optional": true }
        ]
      }, {
        "name": "get", "type": "any",
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }, {
        "name": "whenDefined", "type": "Promise<void>",
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }]
    }, {
      "name": "CustomEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "CustomEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "initCustomEvent", "type": "void",
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "bubbles", "type": "boolean", "optional": true, "default": "false" },
          { "name": "cancelable", "type": "boolean", "optional": true, "default": "false" },
          { "name": "detail", "type": "any", "optional": true, "default": "null" }
        ]
      }],
      "attributes": [{ "name": "detail", "type": "any", "readonly": true }]
    }, {
      "name": "DataTransfer",
      "exposed": ["Window"],
      "constructors": [{ "arguments": [] }],
      "operations": [{
        "name": "clearData", "type": "void",
        "arguments": [{ "name": "format", "type": "DOMString", "optional": true }]
      }, {
        "name": "getData", "type": "DOMString",
        "arguments": [{ "name": "format", "type": "DOMString" }]
      }, {
        "name": "setData", "type": "void",
        "arguments": [
          { "name": "format", "type": "DOMString" },
          { "name": "data", "type": "DOMString" }
        ]
      }, {
        "name": "setDragImage", "type": "void",
        "arguments": [
          { "name": "image", "type": "Element" },
          { "name": "x", "type": "long" },
          { "name": "y", "type": "long" }
        ]
      }],
      "attributes": [
        { "name": "dropEffect", "type": "DOMString" },
        { "name": "effectAllowed", "type": "DOMString" },
        { "name": "files", "type": "FileList", "readonly": true },
        { "name": "items", "type": "DataTransferItemList", "readonly": true },
        { "name": "types", "type": "FrozenArray<DOMString>", "readonly": true }
      ]
    }, {
      "name": "DataTransferItem",
      "exposed": ["Window"],
      "operations": [
        { "name": "getAsFile", "type": "File", "nullable": true, "arguments": [] },
        {
          "name": "getAsString", "type": "void",
          "arguments": [{ "name": "callback", "type": "FunctionStringCallback", "nullable": true }]
        }
      ],
      "attributes": [
        { "name": "kind", "type": "DOMString", "readonly": true },
        { "name": "type", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "DataTransferItemList",
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "DataTransferItem", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "operations": [
        {
          "name": "add", "type": "DataTransferItem", "nullable": true,
          "arguments": [
            { "name": "data", "type": "DOMString" },
            { "name": "type", "type": "DOMString" }
          ]
        }, {
          "name": "add", "type": "DataTransferItem", "nullable": true,
          "arguments": [{ "name": "data", "type": "File" }]
        },
        { "name": "clear", "type": "void", "arguments": [] },
        {
          "name": "remove", "type": "void",
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }
      ],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "DedicatedWorkerGlobalScope", "extends": "WorkerGlobalScope", "global": "Worker DedicatedWorker",
      "exposed": ["DedicatedWorker"],
      "operations": [
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "postMessage", "type": "void",
          "arguments": [
            { "name": "message", "type": "any" },
            { "name": "transfer", "type": "sequence<object>", "optional": true, "default": "[]" }
          ]
        }
      ],
      "attributes": [
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "onmessage", "type": "EventHandler", "eventHandler": "message" },
        { "name": "onmessageerror", "type": "EventHandler", "eventHandler": "messageerror" }
      ],
      "events": [
        { "name": "message", "type": "MessageEvent" },
        { "name": "messageerror", "type": "MessageEvent" }
      ]
    }, {
      "name": "DelayNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "DelayOptions", "optional": true }
        ]
      }],
      "attributes": [{ "name": "delayTime", "type": "AudioParam", "readonly": true }]
    }, {
      "name": "DeviceAcceleration", "noInterfaceObject": true,
      "attributes": [
        { "name": "x", "type": "double", "nullable": true, "readonly": true },
        { "name": "y", "type": "double", "nullable": true, "readonly": true },
        { "name": "z", "type": "double", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "DeviceMotionEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "DeviceMotionEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "acceleration", "type": "DeviceAcceleration", "nullable": true, "readonly": true },
        { "name": "accelerationIncludingGravity", "type": "DeviceAcceleration", "nullable": true, "readonly": true },
        { "name": "interval", "type": "double", "nullable": true, "readonly": true },
        { "name": "rotationRate", "type": "DeviceRotationRate", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "DeviceOrientationEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "DeviceOrientationEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "absolute", "type": "boolean", "readonly": true },
        { "name": "alpha", "type": "double", "nullable": true, "readonly": true },
        { "name": "beta", "type": "double", "nullable": true, "readonly": true },
        { "name": "gamma", "type": "double", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "DeviceRotationRate", "noInterfaceObject": true,
      "attributes": [
        { "name": "alpha", "type": "double", "nullable": true, "readonly": true },
        { "name": "beta", "type": "double", "nullable": true, "readonly": true },
        { "name": "gamma", "type": "double", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "Document", "extends": "Node",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window"],
      "operations": [
        {
          "name": "adoptNode", "type": "Node",
          "arguments": [{ "name": "node", "type": "Node" }]
        },
        { "name": "captureEvents", "type": "void", "arguments": [] },
        {
          "name": "caretPositionFromPoint", "type": "CaretPosition", "nullable": true,
          "arguments": [
            { "name": "x", "type": "double" },
            { "name": "y", "type": "double" }
          ]
        },
        { "name": "clear", "type": "void", "arguments": [] },
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "createAttribute", "type": "Attr",
          "arguments": [{ "name": "localName", "type": "DOMString" }]
        }, {
          "name": "createAttributeNS", "type": "Attr",
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "qualifiedName", "type": "DOMString" }
          ]
        }, {
          "name": "createCDATASection", "type": "CDATASection",
          "arguments": [{ "name": "data", "type": "DOMString" }]
        }, {
          "name": "createComment", "type": "Comment",
          "arguments": [{ "name": "data", "type": "DOMString" }]
        },
        { "name": "createDocumentFragment", "type": "DocumentFragment", "arguments": [] },
        {
          "name": "createElement", "type": "Element",
          "arguments": [
            { "name": "localName", "type": "DOMString" },
            { "name": "options", "type": "ElementCreationOptions", "optional": true }
          ]
        }, {
          "name": "createElementNS", "type": "Element",
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "qualifiedName", "type": "DOMString" },
            { "name": "options", "type": "ElementCreationOptions", "optional": true }
          ]
        }, {
          "name": "createEvent", "type": "Event",
          "arguments": [{ "name": "interface", "type": "DOMString" }]
        }, {
          "name": "createNodeIterator", "type": "NodeIterator",
          "arguments": [
            { "name": "root", "type": "Node" },
            { "name": "whatToShow", "type": "unsigned long", "optional": true, "default": "4294967295" },
            { "name": "filter", "type": "NodeFilter", "nullable": true, "optional": true, "default": "null" }
          ]
        }, {
          "name": "createProcessingInstruction", "type": "ProcessingInstruction",
          "arguments": [
            { "name": "target", "type": "DOMString" },
            { "name": "data", "type": "DOMString" }
          ]
        },
        { "name": "createRange", "type": "Range", "arguments": [] },
        {
          "name": "createTextNode", "type": "Text",
          "arguments": [{ "name": "data", "type": "DOMString" }]
        }, {
          "name": "createTouch", "type": "Touch",
          "arguments": [
            { "name": "view", "type": "WindowProxy" },
            { "name": "target", "type": "EventTarget" },
            { "name": "identifier", "type": "long" },
            { "name": "pageX", "type": "double" },
            { "name": "pageY", "type": "double" },
            { "name": "screenX", "type": "double" },
            { "name": "screenY", "type": "double" }
          ]
        }, {
          "name": "createTouchList", "type": "TouchList",
          "arguments": [{ "name": "touches", "type": "Touch", "variadic": true }]
        }, {
          "name": "createTreeWalker", "type": "TreeWalker",
          "arguments": [
            { "name": "root", "type": "Node" },
            { "name": "whatToShow", "type": "unsigned long", "optional": true, "default": "4294967295" },
            { "name": "filter", "type": "NodeFilter", "nullable": true, "optional": true, "default": "null" }
          ]
        }, {
          "name": "elementFromPoint", "type": "Element", "nullable": true,
          "arguments": [
            { "name": "x", "type": "double" },
            { "name": "y", "type": "double" }
          ]
        }, {
          "name": "elementsFromPoint", "type": "sequence<Element>",
          "arguments": [
            { "name": "x", "type": "double" },
            { "name": "y", "type": "double" }
          ]
        }, {
          "name": "execCommand", "type": "boolean",
          "arguments": [
            { "name": "commandId", "type": "DOMString" },
            { "name": "showUI", "type": "boolean", "optional": true, "default": "false" },
            { "name": "value", "type": "DOMString", "optional": true, "default": "\"\"" }
          ]
        },
        { "name": "exitFullscreen", "type": "Promise<void>", "arguments": [] },
        {
          "name": "getElementsByClassName", "type": "HTMLCollection",
          "arguments": [{ "name": "classNames", "type": "DOMString" }]
        }, {
          "name": "getElementsByName", "type": "NodeList",
          "arguments": [{ "name": "elementName", "type": "DOMString" }]
        }, {
          "name": "getElementsByTagName", "type": "HTMLCollection",
          "arguments": [{ "name": "qualifiedName", "type": "DOMString" }]
        }, {
          "name": "getElementsByTagNameNS", "type": "HTMLCollection",
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "localName", "type": "DOMString" }
          ]
        },
        { "name": "getSelection", "type": "Selection", "nullable": true, "arguments": [] },
        { "name": "hasFocus", "type": "boolean", "arguments": [] },
        {
          "name": "importNode", "type": "Node",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "deep", "type": "boolean", "optional": true, "default": "false" }
          ]
        }, {
          "name": "open", "type": "Document",
          "arguments": [
            { "name": "type", "type": "DOMString", "optional": true, "default": "\"text/html\"" },
            { "name": "replace", "type": "DOMString", "optional": true, "default": "\"\"" }
          ]
        }, {
          "name": "open", "type": "WindowProxy",
          "arguments": [
            { "name": "url", "type": "USVString" },
            { "name": "name", "type": "DOMString" },
            { "name": "features", "type": "DOMString" }
          ]
        }, {
          "name": "queryCommandEnabled", "type": "boolean",
          "arguments": [{ "name": "commandId", "type": "DOMString" }]
        }, {
          "name": "queryCommandIndeterm", "type": "boolean",
          "arguments": [{ "name": "commandId", "type": "DOMString" }]
        }, {
          "name": "queryCommandState", "type": "boolean",
          "arguments": [{ "name": "commandId", "type": "DOMString" }]
        }, {
          "name": "queryCommandSupported", "type": "boolean",
          "arguments": [{ "name": "commandId", "type": "DOMString" }]
        }, {
          "name": "queryCommandValue", "type": "DOMString",
          "arguments": [{ "name": "commandId", "type": "DOMString" }]
        },
        { "name": "releaseEvents", "type": "void", "arguments": [] },
        {
          "name": "write", "type": "void",
          "arguments": [{ "name": "text", "type": "DOMString", "variadic": true }]
        }, {
          "name": "writeln", "type": "void",
          "arguments": [{ "name": "text", "type": "DOMString", "variadic": true }]
        }
      ],
      "attributes": [
        { "name": "activeElement", "type": "Element", "nullable": true, "readonly": true },
        { "name": "activeElement", "type": "Element", "nullable": true, "readonly": true },
        { "name": "alinkColor", "type": "DOMString" },
        { "name": "all", "type": "HTMLAllCollection", "readonly": true },
        { "name": "anchors", "type": "HTMLCollection", "readonly": true },
        { "name": "applets", "type": "HTMLCollection", "readonly": true },
        { "name": "bgColor", "type": "DOMString" },
        { "name": "body", "type": "HTMLElement", "nullable": true },
        { "name": "characterSet", "type": "DOMString", "readonly": true },
        { "name": "charset", "type": "DOMString", "readonly": true },
        { "name": "compatMode", "type": "DOMString", "readonly": true },
        { "name": "contentType", "type": "DOMString", "readonly": true },
        { "name": "cookie", "type": "USVString" },
        { "name": "currentScript", "type": "HTMLOrSVGScriptElement", "nullable": true, "readonly": true },
        { "name": "defaultView", "type": "WindowProxy", "nullable": true, "readonly": true },
        { "name": "designMode", "type": "DOMString" },
        { "name": "dir", "type": "DOMString" },
        { "name": "doctype", "type": "DocumentType", "nullable": true, "readonly": true },
        { "name": "documentElement", "type": "Element", "nullable": true, "readonly": true },
        { "name": "documentURI", "type": "USVString", "readonly": true },
        { "name": "domain", "type": "USVString" },
        { "name": "domain", "type": "DOMString", "readonly": true },
        { "name": "embeds", "type": "HTMLCollection", "readonly": true },
        { "name": "fgColor", "type": "DOMString" },
        { "name": "forms", "type": "HTMLCollection", "readonly": true },
        { "name": "fullscreen", "type": "boolean", "readonly": true },
        { "name": "fullscreenEnabled", "type": "boolean", "readonly": true },
        { "name": "head", "type": "HTMLHeadElement", "nullable": true, "readonly": true },
        { "name": "hidden", "type": "boolean", "readonly": true },
        { "name": "images", "type": "HTMLCollection", "readonly": true },
        { "name": "implementation", "type": "DOMImplementation", "readonly": true },
        { "name": "inputEncoding", "type": "DOMString", "readonly": true },
        { "name": "lastModified", "type": "DOMString", "readonly": true },
        { "name": "linkColor", "type": "DOMString" },
        { "name": "links", "type": "HTMLCollection", "readonly": true },
        { "name": "location", "type": "Location", "nullable": true, "readonly": true },
        { "name": "onfullscreenchange", "type": "EventHandler" },
        { "name": "onfullscreenerror", "type": "EventHandler" },
        { "name": "onreadystatechange", "type": "EventHandler" },
        { "name": "onvisibilitychange", "type": "EventHandler" },
        { "name": "origin", "type": "USVString", "readonly": true },
        { "name": "plugins", "type": "HTMLCollection", "readonly": true },
        { "name": "readyState", "type": "DocumentReadyState", "readonly": true },
        { "name": "referrer", "type": "USVString", "readonly": true },
        { "name": "referrer", "type": "DOMString", "readonly": true },
        { "name": "rootElement", "type": "SVGSVGElement", "nullable": true, "readonly": true },
        { "name": "scripts", "type": "HTMLCollection", "readonly": true },
        { "name": "scrollingElement", "type": "Element", "nullable": true, "readonly": true },
        { "name": "styleSheets", "type": "StyleSheetList", "readonly": true },
        { "name": "title", "type": "DOMString" },
        { "name": "title", "type": "DOMString", "readonly": true },
        { "name": "URL", "type": "USVString", "readonly": true },
        { "name": "visibilityState", "type": "VisibilityState", "readonly": true },
        { "name": "vlinkColor", "type": "DOMString" }
      ],
      "implements": ["NonElementParentNode", "DocumentOrShadowRoot", "ParentNode", "GeometryUtils", "GlobalEventHandlers", "DocumentAndElementEventHandlers"],
      "anonymousOperations": [{
        "type": "object", "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }]
    }, {
      "name": "DocumentAndElementEventHandlers", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [
        { "name": "oncopy", "type": "EventHandler", "eventHandler": "copy" },
        { "name": "oncut", "type": "EventHandler", "eventHandler": "cut" },
        { "name": "onpaste", "type": "EventHandler", "eventHandler": "paste" }
      ],
      "events": [
        { "name": "copy", "type": "Event" },
        { "name": "cut", "type": "Event" },
        { "name": "paste", "type": "Event" }
      ]
    }, {
      "name": "DocumentFragment", "extends": "Node",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window"],
      "implements": ["NonElementParentNode", "ParentNode"]
    }, {
      "name": "DocumentOrShadowRoot", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [{ "name": "fullscreenElement", "type": "Element", "nullable": true, "readonly": true }]
    }, {
      "name": "DocumentType", "extends": "Node",
      "exposed": ["Window"],
      "attributes": [
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "publicId", "type": "DOMString", "readonly": true },
        { "name": "systemId", "type": "DOMString", "readonly": true }
      ],
      "implements": ["ChildNode"]
    }, {
      "name": "DOMException",
      "exposed": ["Window", "Worker"],
      "constructors": [{
        "arguments": [
          { "name": "message", "type": "DOMString", "optional": true, "default": "\"\"" },
          { "name": "name", "type": "DOMString", "optional": true, "default": "\"Error\"" }
        ]
      }],
      "constants": [
        { "name": "ABORT_ERR", "type": "unsigned short", "value": "20" },
        { "name": "DATA_CLONE_ERR", "type": "unsigned short", "value": "25" },
        { "name": "DOMSTRING_SIZE_ERR", "type": "unsigned short", "value": "2" },
        { "name": "HIERARCHY_REQUEST_ERR", "type": "unsigned short", "value": "3" },
        { "name": "INDEX_SIZE_ERR", "type": "unsigned short", "value": "1" },
        { "name": "INUSE_ATTRIBUTE_ERR", "type": "unsigned short", "value": "10" },
        { "name": "INVALID_ACCESS_ERR", "type": "unsigned short", "value": "15" },
        { "name": "INVALID_CHARACTER_ERR", "type": "unsigned short", "value": "5" },
        { "name": "INVALID_MODIFICATION_ERR", "type": "unsigned short", "value": "13" },
        { "name": "INVALID_NODE_TYPE_ERR", "type": "unsigned short", "value": "24" },
        { "name": "INVALID_STATE_ERR", "type": "unsigned short", "value": "11" },
        { "name": "NAMESPACE_ERR", "type": "unsigned short", "value": "14" },
        { "name": "NETWORK_ERR", "type": "unsigned short", "value": "19" },
        { "name": "NO_DATA_ALLOWED_ERR", "type": "unsigned short", "value": "6" },
        { "name": "NO_MODIFICATION_ALLOWED_ERR", "type": "unsigned short", "value": "7" },
        { "name": "NOT_FOUND_ERR", "type": "unsigned short", "value": "8" },
        { "name": "NOT_SUPPORTED_ERR", "type": "unsigned short", "value": "9" },
        { "name": "QUOTA_EXCEEDED_ERR", "type": "unsigned short", "value": "22" },
        { "name": "SECURITY_ERR", "type": "unsigned short", "value": "18" },
        { "name": "SYNTAX_ERR", "type": "unsigned short", "value": "12" },
        { "name": "TIMEOUT_ERR", "type": "unsigned short", "value": "23" },
        { "name": "TYPE_MISMATCH_ERR", "type": "unsigned short", "value": "17" },
        { "name": "URL_MISMATCH_ERR", "type": "unsigned short", "value": "21" },
        { "name": "VALIDATION_ERR", "type": "unsigned short", "value": "16" },
        { "name": "WRONG_DOCUMENT_ERR", "type": "unsigned short", "value": "4" }
      ],
      "attributes": [
        { "name": "code", "type": "unsigned short", "readonly": true },
        { "name": "message", "type": "DOMString", "readonly": true },
        { "name": "name", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "DOMImplementation",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "createDocument", "type": "XMLDocument",
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "qualifiedName", "type": "DOMString" },
            { "name": "doctype", "type": "DocumentType", "nullable": true, "optional": true, "default": "null" }
          ]
        }, {
          "name": "createDocumentType", "type": "DocumentType",
          "arguments": [
            { "name": "qualifiedName", "type": "DOMString" },
            { "name": "publicId", "type": "DOMString" },
            { "name": "systemId", "type": "DOMString" }
          ]
        }, {
          "name": "createHTMLDocument", "type": "Document",
          "arguments": [{ "name": "title", "type": "DOMString", "optional": true }]
        },
        { "name": "hasFeature", "type": "boolean", "arguments": [] }
      ]
    }, {
      "name": "DOMMatrix", "extends": "DOMMatrixReadOnly",
      "constructors": [{
        "arguments": [{ "name": "init", "type": "(DOMString or sequence<unrestricted double>)", "optional": true }]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "fromFloat32Array", "type": "DOMMatrix", "static": true,
          "arguments": [{ "name": "array32", "type": "Float32Array" }]
        }, {
          "name": "fromFloat64Array", "type": "DOMMatrix", "static": true,
          "arguments": [{ "name": "array64", "type": "Float64Array" }]
        }, {
          "name": "fromMatrix", "type": "DOMMatrix", "static": true,
          "arguments": [{ "name": "other", "type": "DOMMatrixInit", "optional": true }]
        },
        { "name": "invertSelf", "type": "DOMMatrix", "arguments": [] },
        {
          "name": "multiplySelf", "type": "DOMMatrix",
          "arguments": [{ "name": "other", "type": "DOMMatrixInit", "optional": true }]
        }, {
          "name": "preMultiplySelf", "type": "DOMMatrix",
          "arguments": [{ "name": "other", "type": "DOMMatrixInit", "optional": true }]
        }, {
          "name": "rotateAxisAngleSelf", "type": "DOMMatrix",
          "arguments": [
            { "name": "x", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "y", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "z", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "angle", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }, {
          "name": "rotateFromVectorSelf", "type": "DOMMatrix",
          "arguments": [
            { "name": "x", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "y", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }, {
          "name": "rotateSelf", "type": "DOMMatrix",
          "arguments": [
            { "name": "rotX", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "rotY", "type": "unrestricted double", "optional": true },
            { "name": "rotZ", "type": "unrestricted double", "optional": true }
          ]
        }, {
          "name": "scale3dSelf", "type": "DOMMatrix",
          "arguments": [
            { "name": "scale", "type": "unrestricted double", "optional": true, "default": "1" },
            { "name": "originX", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "originY", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "originZ", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }, {
          "name": "scaleSelf", "type": "DOMMatrix",
          "arguments": [
            { "name": "scaleX", "type": "unrestricted double", "optional": true, "default": "1" },
            { "name": "scaleY", "type": "unrestricted double", "optional": true },
            { "name": "scaleZ", "type": "unrestricted double", "optional": true, "default": "1" },
            { "name": "originX", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "originY", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "originZ", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }, {
          "name": "setMatrixValue", "type": "DOMMatrix",
          "arguments": [{ "name": "transformList", "type": "DOMString" }],
          "exposed": ["Window"]
        }, {
          "name": "skewXSelf", "type": "DOMMatrix",
          "arguments": [{ "name": "sx", "type": "unrestricted double", "optional": true, "default": "0" }]
        }, {
          "name": "skewYSelf", "type": "DOMMatrix",
          "arguments": [{ "name": "sy", "type": "unrestricted double", "optional": true, "default": "0" }]
        }, {
          "name": "translateSelf", "type": "DOMMatrix",
          "arguments": [
            { "name": "tx", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "ty", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "tz", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }
      ],
      "attributes": [
        { "name": "a", "type": "unrestricted double" },
        { "name": "b", "type": "unrestricted double" },
        { "name": "c", "type": "unrestricted double" },
        { "name": "d", "type": "unrestricted double" },
        { "name": "e", "type": "unrestricted double" },
        { "name": "f", "type": "unrestricted double" },
        { "name": "m11", "type": "unrestricted double" },
        { "name": "m12", "type": "unrestricted double" },
        { "name": "m13", "type": "unrestricted double" },
        { "name": "m14", "type": "unrestricted double" },
        { "name": "m21", "type": "unrestricted double" },
        { "name": "m22", "type": "unrestricted double" },
        { "name": "m23", "type": "unrestricted double" },
        { "name": "m24", "type": "unrestricted double" },
        { "name": "m31", "type": "unrestricted double" },
        { "name": "m32", "type": "unrestricted double" },
        { "name": "m33", "type": "unrestricted double" },
        { "name": "m34", "type": "unrestricted double" },
        { "name": "m41", "type": "unrestricted double" },
        { "name": "m42", "type": "unrestricted double" },
        { "name": "m43", "type": "unrestricted double" },
        { "name": "m44", "type": "unrestricted double" }
      ]
    }, {
      "name": "DOMMatrixReadOnly",
      "constructors": [{
        "arguments": [{ "name": "init", "type": "(DOMString or sequence<unrestricted double>)", "optional": true }]
      }],
      "exposed": ["Window", "Worker"],
      "anonymousOperations": [{
        "type": "DOMString", "stringifier": true,
        "exposed": ["Window"]
      }],
      "operations": [
        { "name": "flipX", "type": "DOMMatrix", "arguments": [] },
        { "name": "flipY", "type": "DOMMatrix", "arguments": [] },
        {
          "name": "fromFloat32Array", "type": "DOMMatrixReadOnly", "static": true,
          "arguments": [{ "name": "array32", "type": "Float32Array" }]
        }, {
          "name": "fromFloat64Array", "type": "DOMMatrixReadOnly", "static": true,
          "arguments": [{ "name": "array64", "type": "Float64Array" }]
        }, {
          "name": "fromMatrix", "type": "DOMMatrixReadOnly", "static": true,
          "arguments": [{ "name": "other", "type": "DOMMatrixInit", "optional": true }]
        },
        { "name": "inverse", "type": "DOMMatrix", "arguments": [] },
        {
          "name": "multiply", "type": "DOMMatrix",
          "arguments": [{ "name": "other", "type": "DOMMatrixInit", "optional": true }]
        }, {
          "name": "rotate", "type": "DOMMatrix",
          "arguments": [
            { "name": "rotX", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "rotY", "type": "unrestricted double", "optional": true },
            { "name": "rotZ", "type": "unrestricted double", "optional": true }
          ]
        }, {
          "name": "rotateAxisAngle", "type": "DOMMatrix",
          "arguments": [
            { "name": "x", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "y", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "z", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "angle", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }, {
          "name": "rotateFromVector", "type": "DOMMatrix",
          "arguments": [
            { "name": "x", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "y", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }, {
          "name": "scale", "type": "DOMMatrix",
          "arguments": [
            { "name": "scaleX", "type": "unrestricted double", "optional": true, "default": "1" },
            { "name": "scaleY", "type": "unrestricted double", "optional": true },
            { "name": "scaleZ", "type": "unrestricted double", "optional": true, "default": "1" },
            { "name": "originX", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "originY", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "originZ", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }, {
          "name": "scale3d", "type": "DOMMatrix",
          "arguments": [
            { "name": "scale", "type": "unrestricted double", "optional": true, "default": "1" },
            { "name": "originX", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "originY", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "originZ", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }, {
          "name": "skewX", "type": "DOMMatrix",
          "arguments": [{ "name": "sx", "type": "unrestricted double", "optional": true, "default": "0" }]
        }, {
          "name": "skewY", "type": "DOMMatrix",
          "arguments": [{ "name": "sy", "type": "unrestricted double", "optional": true, "default": "0" }]
        },
        { "name": "toFloat32Array", "type": "Float32Array", "arguments": [] },
        { "name": "toFloat64Array", "type": "Float64Array", "arguments": [] },
        {
          "name": "transformPoint", "type": "DOMPoint",
          "arguments": [{ "name": "point", "type": "DOMPointInit", "optional": true }]
        }, {
          "name": "translate", "type": "DOMMatrix",
          "arguments": [
            { "name": "tx", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "ty", "type": "unrestricted double", "optional": true, "default": "0" },
            { "name": "tz", "type": "unrestricted double", "optional": true, "default": "0" }
          ]
        }
      ],
      "attributes": [
        { "name": "a", "type": "unrestricted double", "readonly": true },
        { "name": "b", "type": "unrestricted double", "readonly": true },
        { "name": "c", "type": "unrestricted double", "readonly": true },
        { "name": "d", "type": "unrestricted double", "readonly": true },
        { "name": "e", "type": "unrestricted double", "readonly": true },
        { "name": "f", "type": "unrestricted double", "readonly": true },
        { "name": "is2D", "type": "boolean", "readonly": true },
        { "name": "isIdentity", "type": "boolean", "readonly": true },
        { "name": "m11", "type": "unrestricted double", "readonly": true },
        { "name": "m12", "type": "unrestricted double", "readonly": true },
        { "name": "m13", "type": "unrestricted double", "readonly": true },
        { "name": "m14", "type": "unrestricted double", "readonly": true },
        { "name": "m21", "type": "unrestricted double", "readonly": true },
        { "name": "m22", "type": "unrestricted double", "readonly": true },
        { "name": "m23", "type": "unrestricted double", "readonly": true },
        { "name": "m24", "type": "unrestricted double", "readonly": true },
        { "name": "m31", "type": "unrestricted double", "readonly": true },
        { "name": "m32", "type": "unrestricted double", "readonly": true },
        { "name": "m33", "type": "unrestricted double", "readonly": true },
        { "name": "m34", "type": "unrestricted double", "readonly": true },
        { "name": "m41", "type": "unrestricted double", "readonly": true },
        { "name": "m42", "type": "unrestricted double", "readonly": true },
        { "name": "m43", "type": "unrestricted double", "readonly": true },
        { "name": "m44", "type": "unrestricted double", "readonly": true }
      ]
    }, {
      "name": "DOMParser",
      "constructors": [{ "arguments": [] }],
      "operations": [{
        "name": "parseFromString", "type": "Document",
        "arguments": [
          { "name": "str", "type": "DOMString" },
          { "name": "type", "type": "SupportedType" }
        ]
      }]
    }, {
      "name": "DOMPoint", "extends": "DOMPointReadOnly",
      "constructors": [{
        "arguments": [
          { "name": "x", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "y", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "z", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "w", "type": "unrestricted double", "optional": true, "default": "1" }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "fromPoint", "type": "DOMPoint", "static": true,
        "arguments": [{ "name": "other", "type": "DOMPointInit", "optional": true }]
      }],
      "attributes": [
        { "name": "w", "type": "unrestricted double" },
        { "name": "x", "type": "unrestricted double" },
        { "name": "y", "type": "unrestricted double" },
        { "name": "z", "type": "unrestricted double" }
      ]
    }, {
      "name": "DOMPointReadOnly",
      "constructors": [{
        "arguments": [
          { "name": "x", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "y", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "z", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "w", "type": "unrestricted double", "optional": true, "default": "1" }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "fromPoint", "type": "DOMPointReadOnly", "static": true,
        "arguments": [{ "name": "other", "type": "DOMPointInit", "optional": true }]
      }, {
        "name": "matrixTransform", "type": "DOMPoint",
        "arguments": [{ "name": "matrix", "type": "DOMMatrixInit", "optional": true }]
      }],
      "attributes": [
        { "name": "w", "type": "unrestricted double", "readonly": true },
        { "name": "x", "type": "unrestricted double", "readonly": true },
        { "name": "y", "type": "unrestricted double", "readonly": true },
        { "name": "z", "type": "unrestricted double", "readonly": true }
      ]
    }, {
      "name": "DOMQuad",
      "constructors": [{
        "arguments": [
          { "name": "p1", "type": "DOMPointInit", "optional": true },
          { "name": "p2", "type": "DOMPointInit", "optional": true },
          { "name": "p3", "type": "DOMPointInit", "optional": true },
          { "name": "p4", "type": "DOMPointInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "fromQuad", "type": "DOMQuad", "static": true,
          "arguments": [{ "name": "other", "type": "DOMQuadInit", "optional": true }]
        }, {
          "name": "fromRect", "type": "DOMQuad", "static": true,
          "arguments": [{ "name": "other", "type": "DOMRectInit", "optional": true }]
        },
        { "name": "getBounds", "type": "DOMRect", "arguments": [] }
      ],
      "attributes": [
        { "name": "p1", "type": "DOMPoint", "readonly": true },
        { "name": "p2", "type": "DOMPoint", "readonly": true },
        { "name": "p3", "type": "DOMPoint", "readonly": true },
        { "name": "p4", "type": "DOMPoint", "readonly": true }
      ]
    }, {
      "name": "DOMRect", "extends": "DOMRectReadOnly",
      "constructors": [{
        "arguments": [
          { "name": "x", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "y", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "width", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "height", "type": "unrestricted double", "optional": true, "default": "0" }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "fromRect", "type": "DOMRect", "static": true,
        "arguments": [{ "name": "other", "type": "DOMRectInit", "optional": true }]
      }],
      "attributes": [
        { "name": "height", "type": "unrestricted double" },
        { "name": "width", "type": "unrestricted double" },
        { "name": "x", "type": "unrestricted double" },
        { "name": "y", "type": "unrestricted double" }
      ]
    }, {
      "name": "DOMRectList", "noInterfaceObject": true,
      "operations": [{
        "name": "item", "type": "DOMRect", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "DOMRectReadOnly",
      "constructors": [{
        "arguments": [
          { "name": "x", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "y", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "width", "type": "unrestricted double", "optional": true, "default": "0" },
          { "name": "height", "type": "unrestricted double", "optional": true, "default": "0" }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "fromRect", "type": "DOMRectReadOnly", "static": true,
        "arguments": [{ "name": "other", "type": "DOMRectInit", "optional": true }]
      }],
      "attributes": [
        { "name": "bottom", "type": "unrestricted double", "readonly": true },
        { "name": "height", "type": "unrestricted double", "readonly": true },
        { "name": "left", "type": "unrestricted double", "readonly": true },
        { "name": "right", "type": "unrestricted double", "readonly": true },
        { "name": "top", "type": "unrestricted double", "readonly": true },
        { "name": "width", "type": "unrestricted double", "readonly": true },
        { "name": "x", "type": "unrestricted double", "readonly": true },
        { "name": "y", "type": "unrestricted double", "readonly": true }
      ]
    }, {
      "name": "DOMStringList",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "contains", "type": "boolean",
        "arguments": [{ "name": "string", "type": "DOMString" }]
      }, {
        "name": "item", "type": "DOMString", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "DOMStringMap", "overrideBuiltins": true,
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "DOMString", "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }, {
        "type": "void", "setter": true,
        "arguments": [
          { "name": "name", "type": "DOMString" },
          { "name": "value", "type": "DOMString" }
        ]
      }, {
        "type": "void", "deleter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }]
    }, {
      "name": "DOMTokenList",
      "exposed": ["Window"],
      "iterable": { "type": "DOMString" },
      "operations": [{
        "name": "add", "type": "void",
        "arguments": [{ "name": "tokens", "type": "DOMString", "variadic": true }]
      }, {
        "name": "contains", "type": "boolean",
        "arguments": [{ "name": "token", "type": "DOMString" }]
      }, {
        "name": "item", "type": "DOMString", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "remove", "type": "void",
        "arguments": [{ "name": "tokens", "type": "DOMString", "variadic": true }]
      }, {
        "name": "replace", "type": "void",
        "arguments": [
          { "name": "token", "type": "DOMString" },
          { "name": "newToken", "type": "DOMString" }
        ]
      }, {
        "name": "supports", "type": "boolean",
        "arguments": [{ "name": "token", "type": "DOMString" }]
      }, {
        "name": "toggle", "type": "boolean",
        "arguments": [
          { "name": "token", "type": "DOMString" },
          { "name": "force", "type": "boolean", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "value", "type": "DOMString", "stringifier": true }
      ]
    }, {
      "name": "DragEvent", "extends": "MouseEvent",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "DragEventInit", "optional": true }
        ]
      }],
      "attributes": [{ "name": "dataTransfer", "type": "DataTransfer", "nullable": true, "readonly": true }]
    }, {
      "name": "DynamicsCompressorNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "DynamicsCompressorOptions", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "attack", "type": "AudioParam", "readonly": true },
        { "name": "knee", "type": "AudioParam", "readonly": true },
        { "name": "ratio", "type": "AudioParam", "readonly": true },
        { "name": "reduction", "type": "float", "readonly": true },
        { "name": "release", "type": "AudioParam", "readonly": true },
        { "name": "threshold", "type": "AudioParam", "readonly": true }
      ]
    }, {
      "name": "Element", "extends": "Node",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "attachShadow", "type": "ShadowRoot",
          "arguments": [{ "name": "init", "type": "ShadowRootInit" }]
        }, {
          "name": "closest", "type": "Element", "nullable": true,
          "arguments": [{ "name": "selectors", "type": "DOMString" }]
        }, {
          "name": "getAttribute", "type": "DOMString", "nullable": true,
          "arguments": [{ "name": "qualifiedName", "type": "DOMString" }]
        },
        { "name": "getAttributeNames", "type": "sequence<DOMString>", "arguments": [] },
        {
          "name": "getAttributeNode", "type": "Attr", "nullable": true,
          "arguments": [{ "name": "qualifiedName", "type": "DOMString" }]
        }, {
          "name": "getAttributeNodeNS", "type": "Attr", "nullable": true,
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "localName", "type": "DOMString" }
          ]
        }, {
          "name": "getAttributeNS", "type": "DOMString", "nullable": true,
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "localName", "type": "DOMString" }
          ]
        },
        { "name": "getBoundingClientRect", "type": "DOMRect", "arguments": [] },
        { "name": "getClientRects", "type": "sequence<DOMRect>", "arguments": [] },
        {
          "name": "getElementsByClassName", "type": "HTMLCollection",
          "arguments": [{ "name": "classNames", "type": "DOMString" }]
        }, {
          "name": "getElementsByTagName", "type": "HTMLCollection",
          "arguments": [{ "name": "qualifiedName", "type": "DOMString" }]
        }, {
          "name": "getElementsByTagNameNS", "type": "HTMLCollection",
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "localName", "type": "DOMString" }
          ]
        }, {
          "name": "hasAttribute", "type": "boolean",
          "arguments": [{ "name": "qualifiedName", "type": "DOMString" }]
        }, {
          "name": "hasAttributeNS", "type": "boolean",
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "localName", "type": "DOMString" }
          ]
        },
        { "name": "hasAttributes", "type": "boolean", "arguments": [] },
        {
          "name": "insertAdjacentElement", "type": "Element", "nullable": true,
          "arguments": [
            { "name": "where", "type": "DOMString" },
            { "name": "element", "type": "Element" }
          ]
        }, {
          "name": "insertAdjacentHTML", "type": "void",
          "arguments": [
            { "name": "position", "type": "DOMString" },
            { "name": "text", "type": "DOMString" }
          ]
        }, {
          "name": "insertAdjacentText", "type": "void",
          "arguments": [
            { "name": "where", "type": "DOMString" },
            { "name": "data", "type": "DOMString" }
          ]
        }, {
          "name": "matches", "type": "boolean",
          "arguments": [{ "name": "selectors", "type": "DOMString" }]
        }, {
          "name": "releasePointerCapture", "type": "void",
          "arguments": [{ "name": "pointerId", "type": "long" }]
        }, {
          "name": "removeAttribute", "type": "void",
          "arguments": [{ "name": "qualifiedName", "type": "DOMString" }]
        }, {
          "name": "removeAttributeNode", "type": "Attr",
          "arguments": [{ "name": "attr", "type": "Attr" }]
        }, {
          "name": "removeAttributeNS", "type": "void",
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "localName", "type": "DOMString" }
          ]
        },
        { "name": "requestFullscreen", "type": "Promise<void>", "arguments": [] },
        {
          "name": "scroll", "type": "void",
          "arguments": [{ "name": "options", "type": "ScrollToOptions", "optional": true }]
        }, {
          "name": "scroll", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "scrollBy", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "scrollBy", "type": "void",
          "arguments": [{ "name": "options", "type": "ScrollToOptions", "optional": true }]
        },
        { "name": "scrollIntoView", "type": "void", "arguments": [] },
        {
          "name": "scrollIntoView", "type": "void",
          "arguments": [{ "name": "arg", "type": "(boolean or object)" }]
        }, {
          "name": "scrollTo", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "scrollTo", "type": "void",
          "arguments": [{ "name": "options", "type": "ScrollToOptions", "optional": true }]
        }, {
          "name": "setAttribute", "type": "void",
          "arguments": [
            { "name": "qualifiedName", "type": "DOMString" },
            { "name": "value", "type": "DOMString" }
          ]
        }, {
          "name": "setAttributeNode", "type": "Attr", "nullable": true,
          "arguments": [{ "name": "attr", "type": "Attr" }]
        }, {
          "name": "setAttributeNodeNS", "type": "Attr", "nullable": true,
          "arguments": [{ "name": "attr", "type": "Attr" }]
        }, {
          "name": "setAttributeNS", "type": "void",
          "arguments": [
            { "name": "namespace", "type": "DOMString", "nullable": true },
            { "name": "qualifiedName", "type": "DOMString" },
            { "name": "value", "type": "DOMString" }
          ]
        }, {
          "name": "setPointerCapture", "type": "void",
          "arguments": [{ "name": "pointerId", "type": "long" }]
        }, {
          "name": "webkitMatchesSelector", "type": "boolean",
          "arguments": [{ "name": "selectors", "type": "DOMString" }]
        }
      ],
      "attributes": [
        { "name": "attributes", "type": "NamedNodeMap", "readonly": true },
        { "name": "classList", "type": "DOMTokenList", "readonly": true },
        { "name": "className", "type": "DOMString" },
        { "name": "clientHeight", "type": "long", "readonly": true },
        { "name": "clientLeft", "type": "long", "readonly": true },
        { "name": "clientTop", "type": "long", "readonly": true },
        { "name": "clientWidth", "type": "long", "readonly": true },
        { "name": "id", "type": "DOMString" },
        { "name": "innerHTML", "type": "DOMString" },
        { "name": "localName", "type": "DOMString", "readonly": true },
        { "name": "namespaceURI", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "onfullscreenchange", "type": "EventHandler" },
        { "name": "onfullscreenerror", "type": "EventHandler" },
        { "name": "ongotpointercapture", "type": "EventHandler" },
        { "name": "onlostpointercapture", "type": "EventHandler" },
        { "name": "outerHTML", "type": "DOMString" },
        { "name": "prefix", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "scrollHeight", "type": "long", "readonly": true },
        { "name": "scrollLeft", "type": "unrestricted double" },
        { "name": "scrollTop", "type": "unrestricted double" },
        { "name": "scrollWidth", "type": "long", "readonly": true },
        { "name": "shadowRoot", "type": "ShadowRoot", "nullable": true, "readonly": true },
        { "name": "slot", "type": "DOMString" },
        { "name": "tagName", "type": "DOMString", "readonly": true }
      ],
      "implements": ["ParentNode", "NonDocumentTypeChildNode", "ChildNode", "Slotable", "GeometryUtils"]
    }, {
      "name": "ElementContentEditable", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [
        { "name": "contentEditable", "type": "DOMString" },
        { "name": "isContentEditable", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "ElementCSSInlineStyle", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [{ "name": "style", "type": "CSSStyleDeclaration", "readonly": true }]
    }, {
      "name": "ErrorEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "ErrorEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "colno", "type": "unsigned long", "readonly": true },
        { "name": "error", "type": "any", "readonly": true },
        { "name": "filename", "type": "USVString", "readonly": true },
        { "name": "lineno", "type": "unsigned long", "readonly": true },
        { "name": "message", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "EventInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker", "AudioWorklet"],
      "constants": [
        { "name": "AT_TARGET", "type": "unsigned short", "value": "2" },
        { "name": "BUBBLING_PHASE", "type": "unsigned short", "value": "3" },
        { "name": "CAPTURING_PHASE", "type": "unsigned short", "value": "1" },
        { "name": "NONE", "type": "unsigned short", "value": "0" }
      ],
      "operations": [
        { "name": "composedPath", "type": "sequence<EventTarget>", "arguments": [] },
        {
          "name": "initEvent", "type": "void",
          "arguments": [
            { "name": "type", "type": "DOMString" },
            { "name": "bubbles", "type": "boolean", "optional": true, "default": "false" },
            { "name": "cancelable", "type": "boolean", "optional": true, "default": "false" }
          ]
        },
        { "name": "preventDefault", "type": "void", "arguments": [] },
        { "name": "stopImmediatePropagation", "type": "void", "arguments": [] },
        { "name": "stopPropagation", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "bubbles", "type": "boolean", "readonly": true },
        { "name": "cancelable", "type": "boolean", "readonly": true },
        { "name": "cancelBubble", "type": "boolean" },
        { "name": "composed", "type": "boolean", "readonly": true },
        { "name": "currentTarget", "type": "EventTarget", "nullable": true, "readonly": true },
        { "name": "defaultPrevented", "type": "boolean", "readonly": true },
        { "name": "eventPhase", "type": "unsigned short", "readonly": true },
        { "name": "isTrusted", "type": "boolean", "readonly": true },
        { "name": "target", "type": "EventTarget", "nullable": true, "readonly": true },
        { "name": "timeStamp", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "type", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "EventSource", "extends": "EventTarget",
      "constructors": [{
        "arguments": [
          { "name": "url", "type": "USVString" },
          { "name": "eventSourceInitDict", "type": "EventSourceInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "constants": [
        { "name": "CLOSED", "type": "unsigned short", "value": "2" },
        { "name": "CONNECTING", "type": "unsigned short", "value": "0" },
        { "name": "OPEN", "type": "unsigned short", "value": "1" }
      ],
      "operations": [{ "name": "close", "type": "void", "arguments": [] }],
      "attributes": [
        { "name": "onerror", "type": "EventHandler", "eventHandler": "error" },
        { "name": "onmessage", "type": "EventHandler", "eventHandler": "message" },
        { "name": "onopen", "type": "EventHandler", "eventHandler": "open" },
        { "name": "readyState", "type": "unsigned short", "readonly": true },
        { "name": "url", "type": "USVString", "readonly": true },
        { "name": "withCredentials", "type": "boolean", "readonly": true }
      ],
      "events": [
        { "name": "open", "type": "Event" },
        { "name": "message", "type": "MessageEvent" },
        { "name": "error", "type": "Event" }
      ]
    }, {
      "name": "EventTarget",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window", "Worker", "AudioWorklet"],
      "operations": [{
        "name": "addEventListener", "type": "void",
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "callback", "type": "EventListener", "nullable": true },
          { "name": "options", "type": "(AddEventListenerOptions or boolean)", "optional": true }
        ]
      }, {
        "name": "dispatchEvent", "type": "boolean",
        "arguments": [{ "name": "event", "type": "Event" }]
      }, {
        "name": "removeEventListener", "type": "void",
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "callback", "type": "EventListener", "nullable": true },
          { "name": "options", "type": "(EventListenerOptions or boolean)", "optional": true }
        ]
      }]
    },
    { "name": "EXT_frag_depth", "noInterfaceObject": true },
    {
      "name": "EXT_texture_filter_anisotropic", "noInterfaceObject": true,
      "constants": [
        { "name": "MAX_TEXTURE_MAX_ANISOTROPY_EXT", "type": "GLenum", "value": "34047" },
        { "name": "TEXTURE_MAX_ANISOTROPY_EXT", "type": "GLenum", "value": "34046" }
      ]
    }, {
      "name": "ExtendableEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "ExtendableEventInit", "optional": true }
        ]
      }],
      "exposed": ["ServiceWorker"],
      "operations": [{
        "name": "waitUntil", "type": "void",
        "arguments": [{ "name": "f", "type": "Promise<any>" }]
      }]
    }, {
      "name": "ExtendableMessageEvent", "extends": "ExtendableEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "ExtendableMessageEventInit", "optional": true }
        ]
      }],
      "exposed": ["ServiceWorker"],
      "attributes": [
        { "name": "data", "type": "any", "readonly": true },
        { "name": "lastEventId", "type": "DOMString", "readonly": true },
        { "name": "origin", "type": "USVString", "readonly": true },
        { "name": "ports", "type": "FrozenArray<MessagePort>", "readonly": true },
        { "name": "source", "type": "(Client or ServiceWorker or MessagePort)", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "External", "noInterfaceObject": true,
      "exposed": ["Window"],
      "operations": [
        { "name": "AddSearchProvider", "type": "void", "arguments": [] },
        { "name": "IsSearchProviderInstalled", "type": "void", "arguments": [] }
      ]
    }, {
      "name": "FetchEvent", "extends": "ExtendableEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "FetchEventInit" }
        ]
      }],
      "exposed": ["ServiceWorker"],
      "operations": [{
        "name": "respondWith", "type": "void",
        "arguments": [{ "name": "r", "type": "Promise<Response>" }]
      }],
      "attributes": [
        { "name": "clientId", "type": "DOMString", "readonly": true },
        { "name": "preloadResponse", "type": "Promise<any>", "readonly": true },
        { "name": "request", "type": "Request", "readonly": true },
        { "name": "reservedClientId", "type": "DOMString", "readonly": true },
        { "name": "targetClientId", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "File", "extends": "Blob",
      "constructors": [{
        "arguments": [
          { "name": "fileBits", "type": "sequence<BlobPart>" },
          { "name": "fileName", "type": "USVString" },
          { "name": "options", "type": "FilePropertyBag", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "lastModified", "type": "long long", "readonly": true },
        { "name": "name", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "FileList",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "item", "type": "File", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "FileReader", "extends": "EventTarget",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window", "Worker"],
      "constants": [
        { "name": "DONE", "type": "unsigned short", "value": "2" },
        { "name": "EMPTY", "type": "unsigned short", "value": "0" },
        { "name": "LOADING", "type": "unsigned short", "value": "1" }
      ],
      "operations": [
        { "name": "abort", "type": "void", "arguments": [] },
        {
          "name": "readAsArrayBuffer", "type": "void",
          "arguments": [{ "name": "blob", "type": "Blob" }]
        }, {
          "name": "readAsBinaryString", "type": "void",
          "arguments": [{ "name": "blob", "type": "Blob" }]
        }, {
          "name": "readAsDataURL", "type": "void",
          "arguments": [{ "name": "blob", "type": "Blob" }]
        }, {
          "name": "readAsText", "type": "void",
          "arguments": [
            { "name": "blob", "type": "Blob" },
            { "name": "label", "type": "DOMString", "optional": true }
          ]
        }
      ],
      "attributes": [
        { "name": "error", "type": "DOMException", "nullable": true, "readonly": true },
        { "name": "onabort", "type": "EventHandler", "eventHandler": "abort" },
        { "name": "onerror", "type": "EventHandler", "eventHandler": "error" },
        { "name": "onload", "type": "EventHandler", "eventHandler": "load" },
        { "name": "onloadend", "type": "EventHandler", "eventHandler": "loadend" },
        { "name": "onloadstart", "type": "EventHandler", "eventHandler": "loadstart" },
        { "name": "onprogress", "type": "EventHandler", "eventHandler": "progress" },
        { "name": "readyState", "type": "unsigned short", "readonly": true },
        { "name": "result", "type": "(DOMString or ArrayBuffer)", "nullable": true, "readonly": true }
      ],
      "events": [
        { "name": "loadstart", "type": "ProgressEvent" },
        { "name": "progress", "type": "ProgressEvent" },
        { "name": "load", "type": "ProgressEvent" },
        { "name": "abort", "type": "ProgressEvent" },
        { "name": "error", "type": "ProgressEvent" },
        { "name": "loadend", "type": "ProgressEvent" }
      ]
    }, {
      "name": "FileReaderSync",
      "constructors": [{ "arguments": [] }],
      "exposed": ["DedicatedWorker", "SharedWorker"],
      "operations": [{
        "name": "readAsArrayBuffer", "type": "ArrayBuffer",
        "arguments": [{ "name": "blob", "type": "Blob" }]
      }, {
        "name": "readAsBinaryString", "type": "DOMString",
        "arguments": [{ "name": "blob", "type": "Blob" }]
      }, {
        "name": "readAsDataURL", "type": "DOMString",
        "arguments": [{ "name": "blob", "type": "Blob" }]
      }, {
        "name": "readAsText", "type": "DOMString",
        "arguments": [
          { "name": "blob", "type": "Blob" },
          { "name": "label", "type": "DOMString", "optional": true }
        ]
      }]
    }, {
      "name": "FocusEvent", "extends": "UIEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "FocusEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [{ "name": "relatedTarget", "type": "EventTarget", "nullable": true, "readonly": true }]
    }, {
      "name": "FormData",
      "constructors": [{
        "arguments": [{ "name": "form", "type": "HTMLFormElement", "optional": true }]
      }],
      "exposed": ["Window", "Worker"],
      "iterable": { "keytype": "USVString", "type": "FormDataEntryValue" },
      "operations": [{
        "name": "append", "type": "void",
        "arguments": [
          { "name": "name", "type": "USVString" },
          { "name": "value", "type": "USVString" }
        ]
      }, {
        "name": "append", "type": "void",
        "arguments": [
          { "name": "name", "type": "USVString" },
          { "name": "blobValue", "type": "Blob" },
          { "name": "filename", "type": "USVString", "optional": true }
        ]
      }, {
        "name": "delete", "type": "void",
        "arguments": [{ "name": "name", "type": "USVString" }]
      }, {
        "name": "get", "type": "FormDataEntryValue", "nullable": true,
        "arguments": [{ "name": "name", "type": "USVString" }]
      }, {
        "name": "getAll", "type": "sequence<FormDataEntryValue>",
        "arguments": [{ "name": "name", "type": "USVString" }]
      }, {
        "name": "has", "type": "boolean",
        "arguments": [{ "name": "name", "type": "USVString" }]
      }, {
        "name": "set", "type": "void",
        "arguments": [
          { "name": "name", "type": "USVString" },
          { "name": "value", "type": "USVString" }
        ]
      }, {
        "name": "set", "type": "void",
        "arguments": [
          { "name": "name", "type": "USVString" },
          { "name": "blobValue", "type": "Blob" },
          { "name": "filename", "type": "USVString", "optional": true }
        ]
      }]
    }, {
      "name": "GainNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "GainOptions", "optional": true }
        ]
      }],
      "attributes": [{ "name": "gain", "type": "AudioParam", "readonly": true }]
    }, {
      "name": "Gamepad",
      "attributes": [
        { "name": "axes", "type": "FrozenArray<double>", "readonly": true },
        { "name": "buttons", "type": "FrozenArray<GamepadButton>", "readonly": true },
        { "name": "connected", "type": "boolean", "readonly": true },
        { "name": "id", "type": "DOMString", "readonly": true },
        { "name": "index", "type": "long", "readonly": true },
        { "name": "mapping", "type": "GamepadMappingType", "readonly": true },
        { "name": "timestamp", "type": "DOMHighResTimeStamp", "readonly": true }
      ]
    }, {
      "name": "GamepadButton",
      "attributes": [
        { "name": "pressed", "type": "boolean", "readonly": true },
        { "name": "touched", "type": "boolean", "readonly": true },
        { "name": "value", "type": "double", "readonly": true }
      ]
    }, {
      "name": "GamepadEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "GamepadEventInit", "optional": true }
        ]
      }],
      "attributes": [{ "name": "gamepad", "type": "Gamepad", "readonly": true }]
    }, {
      "name": "Geolocation", "noInterfaceObject": true,
      "operations": [{
        "name": "clearWatch", "type": "void",
        "arguments": [{ "name": "watchId", "type": "long" }]
      }, {
        "name": "getCurrentPosition", "type": "void",
        "arguments": [
          { "name": "successCallback", "type": "PositionCallback" },
          { "name": "errorCallback", "type": "PositionErrorCallback", "optional": true },
          { "name": "options", "type": "PositionOptions", "optional": true }
        ]
      }, {
        "name": "watchPosition", "type": "long",
        "arguments": [
          { "name": "successCallback", "type": "PositionCallback" },
          { "name": "errorCallback", "type": "PositionErrorCallback", "optional": true },
          { "name": "options", "type": "PositionOptions", "optional": true }
        ]
      }]
    }, {
      "name": "GeometryUtils", "noInterfaceObject": true,
      "operations": [{
        "name": "convertPointFromNode", "type": "DOMPoint",
        "arguments": [
          { "name": "point", "type": "DOMPointInit" },
          { "name": "from", "type": "GeometryNode" },
          { "name": "options", "type": "ConvertCoordinateOptions", "optional": true }
        ]
      }, {
        "name": "convertQuadFromNode", "type": "DOMQuad",
        "arguments": [
          { "name": "quad", "type": "DOMQuadInit" },
          { "name": "from", "type": "GeometryNode" },
          { "name": "options", "type": "ConvertCoordinateOptions", "optional": true }
        ]
      }, {
        "name": "convertRectFromNode", "type": "DOMQuad",
        "arguments": [
          { "name": "rect", "type": "DOMRectReadOnly" },
          { "name": "from", "type": "GeometryNode" },
          { "name": "options", "type": "ConvertCoordinateOptions", "optional": true }
        ]
      }, {
        "name": "getBoxQuads", "type": "sequence<DOMQuad>",
        "arguments": [{ "name": "options", "type": "BoxQuadOptions", "optional": true }]
      }]
    }, {
      "name": "GetSVGDocument", "noInterfaceObject": true,
      "operations": [{ "name": "getSVGDocument", "type": "Document", "arguments": [] }]
    }, {
      "name": "GlobalCrypto", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [{ "name": "crypto", "type": "Crypto", "readonly": true }]
    }, {
      "name": "GlobalEventHandlers", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [
        { "name": "onabort", "type": "EventHandler", "eventHandler": "abort" },
        { "name": "onanimationcancel", "type": "EventHandler", "eventHandler": "animationcancel" },
        { "name": "onanimationend", "type": "EventHandler", "eventHandler": "animationend" },
        { "name": "onanimationiteration", "type": "EventHandler", "eventHandler": "animationiteration" },
        { "name": "onanimationstart", "type": "EventHandler", "eventHandler": "animationstart" },
        { "name": "onauxclick", "type": "EventHandler", "eventHandler": "auxclick" },
        { "name": "onblur", "type": "EventHandler", "eventHandler": "blur" },
        { "name": "oncancel", "type": "EventHandler", "eventHandler": "cancel" },
        { "name": "oncanplay", "type": "EventHandler", "eventHandler": "canplay" },
        { "name": "oncanplaythrough", "type": "EventHandler", "eventHandler": "canplaythrough" },
        { "name": "onchange", "type": "EventHandler", "eventHandler": "change" },
        { "name": "onclick", "type": "EventHandler", "eventHandler": "click" },
        { "name": "onclose", "type": "EventHandler", "eventHandler": "close" },
        { "name": "oncontextmenu", "type": "EventHandler", "eventHandler": "contextmenu" },
        { "name": "oncuechange", "type": "EventHandler", "eventHandler": "cuechange" },
        { "name": "ondblclick", "type": "EventHandler", "eventHandler": "dblclick" },
        { "name": "ondrag", "type": "EventHandler", "eventHandler": "drag" },
        { "name": "ondragend", "type": "EventHandler", "eventHandler": "dragend" },
        { "name": "ondragenter", "type": "EventHandler", "eventHandler": "dragenter" },
        { "name": "ondragexit", "type": "EventHandler", "eventHandler": "dragexit" },
        { "name": "ondragleave", "type": "EventHandler", "eventHandler": "dragleave" },
        { "name": "ondragover", "type": "EventHandler", "eventHandler": "dragover" },
        { "name": "ondragstart", "type": "EventHandler", "eventHandler": "dragstart" },
        { "name": "ondrop", "type": "EventHandler", "eventHandler": "drop" },
        { "name": "ondurationchange", "type": "EventHandler", "eventHandler": "durationchange" },
        { "name": "onemptied", "type": "EventHandler", "eventHandler": "emptied" },
        { "name": "onended", "type": "EventHandler", "eventHandler": "ended" },
        { "name": "onerror", "type": "OnErrorEventHandler", "eventHandler": "error" },
        { "name": "onfocus", "type": "EventHandler", "eventHandler": "focus" },
        { "name": "oninput", "type": "EventHandler", "eventHandler": "input" },
        { "name": "oninvalid", "type": "EventHandler", "eventHandler": "invalid" },
        { "name": "onkeydown", "type": "EventHandler", "eventHandler": "keydown" },
        { "name": "onkeypress", "type": "EventHandler", "eventHandler": "keypress" },
        { "name": "onkeyup", "type": "EventHandler", "eventHandler": "keyup" },
        { "name": "onload", "type": "EventHandler", "eventHandler": "load" },
        { "name": "onloadeddata", "type": "EventHandler", "eventHandler": "loadeddata" },
        { "name": "onloadedmetadata", "type": "EventHandler", "eventHandler": "loadedmetadata" },
        { "name": "onloadend", "type": "EventHandler", "eventHandler": "loadend" },
        { "name": "onloadstart", "type": "EventHandler", "eventHandler": "loadstart" },
        { "name": "onmousedown", "type": "EventHandler", "eventHandler": "mousedown" },
        { "name": "onmouseenter", "type": "EventHandler", "eventHandler": "mouseenter" },
        { "name": "onmouseleave", "type": "EventHandler", "eventHandler": "mouseleave" },
        { "name": "onmousemove", "type": "EventHandler", "eventHandler": "mousemove" },
        { "name": "onmouseout", "type": "EventHandler", "eventHandler": "mouseout" },
        { "name": "onmouseover", "type": "EventHandler", "eventHandler": "mouseover" },
        { "name": "onmouseup", "type": "EventHandler", "eventHandler": "mouseup" },
        { "name": "onpause", "type": "EventHandler", "eventHandler": "pause" },
        { "name": "onplay", "type": "EventHandler", "eventHandler": "play" },
        { "name": "onplaying", "type": "EventHandler", "eventHandler": "playing" },
        { "name": "onpointercancel", "type": "EventHandler" },
        { "name": "onpointerdown", "type": "EventHandler" },
        { "name": "onpointerenter", "type": "EventHandler" },
        { "name": "onpointerleave", "type": "EventHandler" },
        { "name": "onpointermove", "type": "EventHandler" },
        { "name": "onpointerout", "type": "EventHandler" },
        { "name": "onpointerover", "type": "EventHandler" },
        { "name": "onpointerup", "type": "EventHandler" },
        { "name": "onprogress", "type": "EventHandler", "eventHandler": "progress" },
        { "name": "onratechange", "type": "EventHandler", "eventHandler": "ratechange" },
        { "name": "onreset", "type": "EventHandler", "eventHandler": "reset" },
        { "name": "onresize", "type": "EventHandler", "eventHandler": "resize" },
        { "name": "onscroll", "type": "EventHandler", "eventHandler": "scroll" },
        { "name": "onsecuritypolicyviolation", "type": "EventHandler" },
        { "name": "onseeked", "type": "EventHandler", "eventHandler": "seeked" },
        { "name": "onseeking", "type": "EventHandler", "eventHandler": "seeking" },
        { "name": "onselect", "type": "EventHandler", "eventHandler": "select" },
        { "name": "onselectionchange", "type": "EventHandler", "eventHandler": "selectionchange" },
        { "name": "onselectstart", "type": "EventHandler", "eventHandler": "selectstart" },
        { "name": "onstalled", "type": "EventHandler", "eventHandler": "stalled" },
        { "name": "onsubmit", "type": "EventHandler", "eventHandler": "submit" },
        { "name": "onsuspend", "type": "EventHandler", "eventHandler": "suspend" },
        { "name": "ontimeupdate", "type": "EventHandler", "eventHandler": "timeupdate" },
        { "name": "ontoggle", "type": "EventHandler", "eventHandler": "toggle" },
        { "name": "ontouchcancel", "type": "EventHandler", "eventHandler": "touchcancel" },
        { "name": "ontouchend", "type": "EventHandler", "eventHandler": "touchend" },
        { "name": "ontouchmove", "type": "EventHandler", "eventHandler": "touchmove" },
        { "name": "ontouchstart", "type": "EventHandler", "eventHandler": "touchstart" },
        { "name": "ontransitioncancel", "type": "EventHandler", "eventHandler": "transitioncancel" },
        { "name": "ontransitionend", "type": "EventHandler", "eventHandler": "transitionend" },
        { "name": "ontransitionrun", "type": "EventHandler", "eventHandler": "transitionrun" },
        { "name": "ontransitionstart", "type": "EventHandler", "eventHandler": "transitionstart" },
        { "name": "onvolumechange", "type": "EventHandler", "eventHandler": "volumechange" },
        { "name": "onwaiting", "type": "EventHandler", "eventHandler": "waiting" },
        { "name": "onwheel", "type": "EventHandler", "eventHandler": "wheel" }
      ],
      "events": [
        { "name": "abort", "type": "Event" },
        { "name": "auxclick", "type": "MouseEvent" },
        { "name": "blur", "type": "Event" },
        { "name": "cancel", "type": "Event" },
        { "name": "canplay", "type": "Event" },
        { "name": "canplaythrough", "type": "Event" },
        { "name": "change", "type": "Event" },
        { "name": "click", "type": "MouseEvent" },
        { "name": "close", "type": "Event" },
        { "name": "contextmenu", "type": "MouseEvent" },
        { "name": "cuechange", "type": "Event" },
        { "name": "dblclick", "type": "MouseEvent" },
        { "name": "drag", "type": "DragEvent" },
        { "name": "dragend", "type": "DragEvent" },
        { "name": "dragenter", "type": "DragEvent" },
        { "name": "dragexit", "type": "DragEvent" },
        { "name": "dragleave", "type": "DragEvent" },
        { "name": "dragover", "type": "DragEvent" },
        { "name": "dragstart", "type": "DragEvent" },
        { "name": "drop", "type": "DragEvent" },
        { "name": "durationchange", "type": "Event" },
        { "name": "emptied", "type": "Event" },
        { "name": "ended", "type": "Event" },
        { "name": "error", "type": "Event" },
        { "name": "focus", "type": "Event" },
        { "name": "input", "type": "Event" },
        { "name": "invalid", "type": "Event" },
        { "name": "keydown", "type": "KeyboardEvent" },
        { "name": "keypress", "type": "KeyboardEvent" },
        { "name": "keyup", "type": "KeyboardEvent" },
        { "name": "load", "type": "Event" },
        { "name": "loadeddata", "type": "Event" },
        { "name": "loadedmetadata", "type": "Event" },
        { "name": "loadend", "type": "Event" },
        { "name": "loadstart", "type": "Event" },
        { "name": "mousedown", "type": "MouseEvent" },
        { "name": "mouseenter", "type": "MouseEvent" },
        { "name": "mouseleave", "type": "MouseEvent" },
        { "name": "mousemove", "type": "MouseEvent" },
        { "name": "mouseout", "type": "MouseEvent" },
        { "name": "mouseover", "type": "MouseEvent" },
        { "name": "mouseup", "type": "MouseEvent" },
        { "name": "wheel", "type": "WheelEvent" },
        { "name": "pause", "type": "Event" },
        { "name": "play", "type": "Event" },
        { "name": "playing", "type": "Event" },
        { "name": "progress", "type": "Event" },
        { "name": "ratechange", "type": "Event" },
        { "name": "reset", "type": "Event" },
        { "name": "resize", "type": "Event" },
        { "name": "scroll", "type": "Event" },
        { "name": "seeked", "type": "Event" },
        { "name": "seeking", "type": "Event" },
        { "name": "select", "type": "Event" },
        { "name": "stalled", "type": "Event" },
        { "name": "submit", "type": "Event" },
        { "name": "suspend", "type": "Event" },
        { "name": "timeupdate", "type": "Event" },
        { "name": "toggle", "type": "Event" },
        { "name": "volumechange", "type": "Event" },
        { "name": "waiting", "type": "Event" },
        { "name": "animationstart", "type": "AnimationEvent" },
        { "name": "animationiteration", "type": "AnimationEvent" },
        { "name": "animationend", "type": "AnimationEvent" },
        { "name": "animationcancel", "type": "AnimationEvent" },
        { "name": "transitionrun", "type": "TransitionEvent" },
        { "name": "transitionstart", "type": "TransitionEvent" },
        { "name": "transitionend", "type": "TransitionEvent" },
        { "name": "transitioncancel", "type": "TransitionEvent" },
        { "name": "selectstart", "type": "Event" },
        { "name": "selectionchange", "type": "Event" },
        { "name": "touchstart", "type": "TouchEvent" },
        { "name": "touchend", "type": "TouchEvent" },
        { "name": "touchmove", "type": "TouchEvent" },
        { "name": "touchcancel", "type": "TouchEvent" }
      ]
    }, {
      "name": "HashChangeEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "HashChangeEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "newURL", "type": "USVString", "readonly": true },
        { "name": "oldURL", "type": "USVString", "readonly": true }
      ]
    }, {
      "name": "Headers",
      "constructors": [{
        "arguments": [{ "name": "init", "type": "HeadersInit", "optional": true }]
      }],
      "exposed": ["Window", "Worker"],
      "iterable": { "keytype": "ByteString", "type": "ByteString" },
      "operations": [{
        "name": "append", "type": "void",
        "arguments": [
          { "name": "name", "type": "ByteString" },
          { "name": "value", "type": "ByteString" }
        ]
      }, {
        "name": "delete", "type": "void",
        "arguments": [{ "name": "name", "type": "ByteString" }]
      }, {
        "name": "get", "type": "ByteString", "nullable": true,
        "arguments": [{ "name": "name", "type": "ByteString" }]
      }, {
        "name": "has", "type": "boolean",
        "arguments": [{ "name": "name", "type": "ByteString" }]
      }, {
        "name": "set", "type": "void",
        "arguments": [
          { "name": "name", "type": "ByteString" },
          { "name": "value", "type": "ByteString" }
        ]
      }]
    }, {
      "name": "History",
      "exposed": ["Window"],
      "operations": [
        { "name": "back", "type": "void", "arguments": [] },
        { "name": "forward", "type": "void", "arguments": [] },
        {
          "name": "go", "type": "void",
          "arguments": [{ "name": "delta", "type": "long", "optional": true, "default": "0" }]
        }, {
          "name": "pushState", "type": "void",
          "arguments": [
            { "name": "data", "type": "any" },
            { "name": "title", "type": "DOMString" },
            { "name": "url", "type": "USVString", "nullable": true, "optional": true, "default": "null" }
          ]
        }, {
          "name": "replaceState", "type": "void",
          "arguments": [
            { "name": "data", "type": "any" },
            { "name": "title", "type": "DOMString" },
            { "name": "url", "type": "USVString", "nullable": true, "optional": true, "default": "null" }
          ]
        }
      ],
      "attributes": [
        { "name": "index", "type": "unsigned long", "readonly": true },
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "scrollRestoration", "type": "ScrollRestoration" },
        { "name": "state", "type": "any", "readonly": true }
      ]
    }, {
      "name": "HTMLAllCollection",
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "Element", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "operations": [{
        "name": "item", "type": "(HTMLCollection or Element)", "nullable": true,
        "arguments": [{ "name": "nameOrIndex", "type": "DOMString", "optional": true }]
      }, {
        "name": "namedItem", "type": "(HTMLCollection or Element)", "nullable": true, "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "HTMLAnchorElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "charset", "type": "DOMString" },
        { "name": "coords", "type": "DOMString" },
        { "name": "download", "type": "DOMString" },
        { "name": "hreflang", "type": "DOMString" },
        { "name": "name", "type": "DOMString" },
        { "name": "ping", "type": "USVString" },
        { "name": "referrerPolicy", "type": "DOMString" },
        { "name": "rel", "type": "DOMString" },
        { "name": "relList", "type": "DOMTokenList", "readonly": true },
        { "name": "rev", "type": "DOMString" },
        { "name": "shape", "type": "DOMString" },
        { "name": "target", "type": "DOMString" },
        { "name": "text", "type": "DOMString" },
        { "name": "type", "type": "DOMString" }
      ],
      "implements": ["HTMLHyperlinkElementUtils"],
      "elements": [{ "name": "a", "namespace": "HTML" }]
    }, {
      "name": "HTMLAreaElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "alt", "type": "DOMString" },
        { "name": "coords", "type": "DOMString" },
        { "name": "download", "type": "DOMString" },
        { "name": "noHref", "type": "boolean" },
        { "name": "ping", "type": "USVString" },
        { "name": "referrerPolicy", "type": "DOMString" },
        { "name": "rel", "type": "DOMString" },
        { "name": "relList", "type": "DOMTokenList", "readonly": true },
        { "name": "shape", "type": "DOMString" },
        { "name": "target", "type": "DOMString" }
      ],
      "implements": ["HTMLHyperlinkElementUtils"],
      "elements": [{ "name": "area", "namespace": "HTML" }]
    }, {
      "name": "HTMLAudioElement", "extends": "HTMLMediaElement",
      "exposed": ["Window"],
      "namedConstructor": {
        "name": "Audio",
        "arguments": [{ "name": "src", "type": "DOMString", "optional": true }]
      },
      "elements": [{ "name": "audio", "namespace": "HTML" }]
    }, {
      "name": "HTMLBaseElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "href", "type": "USVString" },
        { "name": "target", "type": "DOMString" }
      ],
      "elements": [{ "name": "base", "namespace": "HTML" }]
    }, {
      "name": "HTMLBodyElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "implements": ["WindowEventHandlers"],
      "attributes": [
        { "name": "aLink", "type": "DOMString" },
        { "name": "background", "type": "DOMString" },
        { "name": "bgColor", "type": "DOMString" },
        { "name": "link", "type": "DOMString" },
        { "name": "text", "type": "DOMString" },
        { "name": "vLink", "type": "DOMString" }
      ],
      "elements": [{ "name": "body", "namespace": "HTML" }]
    }, {
      "name": "HTMLBRElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "clear", "type": "DOMString" }],
      "elements": [{ "name": "br", "namespace": "HTML" }]
    }, {
      "name": "HTMLButtonElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        { "name": "checkValidity", "type": "boolean", "arguments": [] },
        { "name": "reportValidity", "type": "boolean", "arguments": [] },
        {
          "name": "setCustomValidity", "type": "void",
          "arguments": [{ "name": "error", "type": "DOMString" }]
        }
      ],
      "attributes": [
        { "name": "autofocus", "type": "boolean" },
        { "name": "disabled", "type": "boolean" },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "formAction", "type": "USVString" },
        { "name": "formEnctype", "type": "DOMString" },
        { "name": "formMethod", "type": "DOMString" },
        { "name": "formNoValidate", "type": "boolean" },
        { "name": "formTarget", "type": "DOMString" },
        { "name": "labels", "type": "NodeList", "readonly": true },
        { "name": "name", "type": "DOMString" },
        { "name": "type", "type": "DOMString" },
        { "name": "validationMessage", "type": "DOMString", "readonly": true },
        { "name": "validity", "type": "ValidityState", "readonly": true },
        { "name": "value", "type": "DOMString" },
        { "name": "willValidate", "type": "boolean", "readonly": true }
      ],
      "elements": [{ "name": "button", "namespace": "HTML" }]
    }, {
      "name": "HTMLCanvasElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "getContext", "type": "RenderingContext", "nullable": true,
          "arguments": [
            { "name": "contextId", "type": "DOMString" },
            { "name": "arguments", "type": "any", "variadic": true }
          ]
        }, {
          "name": "toBlob", "type": "void",
          "arguments": [
            { "name": "callback", "type": "BlobCallback" },
            { "name": "type", "type": "DOMString", "optional": true },
            { "name": "quality", "type": "any", "optional": true }
          ]
        }, {
          "name": "toDataURL", "type": "USVString",
          "arguments": [
            { "name": "type", "type": "DOMString", "optional": true },
            { "name": "quality", "type": "any", "optional": true }
          ]
        },
        { "name": "transferControlToOffscreen", "type": "OffscreenCanvas", "arguments": [] }
      ],
      "attributes": [
        { "name": "height", "type": "unsigned long" },
        { "name": "width", "type": "unsigned long" }
      ],
      "elements": [{ "name": "canvas", "namespace": "HTML" }]
    }, {
      "name": "HTMLCollection",
      "exposed": ["Window"],
      "operations": [{
        "name": "item", "type": "Element", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "namedItem", "type": "Element", "nullable": true, "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "HTMLDataElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "value", "type": "DOMString" }],
      "elements": [{ "name": "data", "namespace": "HTML" }]
    }, {
      "name": "HTMLDataListElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "options", "type": "HTMLCollection", "readonly": true }],
      "elements": [{ "name": "datalist", "namespace": "HTML" }]
    }, {
      "name": "HTMLDetailsElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "open", "type": "boolean" }],
      "elements": [{ "name": "details", "namespace": "HTML" }]
    }, {
      "name": "HTMLDialogElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "close", "type": "void",
          "arguments": [{ "name": "returnValue", "type": "DOMString", "optional": true }]
        },
        { "name": "show", "type": "void", "arguments": [] },
        { "name": "showModal", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "open", "type": "boolean" },
        { "name": "returnValue", "type": "DOMString" }
      ],
      "elements": [{ "name": "dialog", "namespace": "HTML" }]
    }, {
      "name": "HTMLDirectoryElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "compact", "type": "boolean" }]
    }, {
      "name": "HTMLDivElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "align", "type": "DOMString" }],
      "elements": [{ "name": "div", "namespace": "HTML" }]
    }, {
      "name": "HTMLDListElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "compact", "type": "boolean" }],
      "elements": [{ "name": "dl", "namespace": "HTML" }]
    }, {
      "name": "HTMLElement", "extends": "Element",
      "exposed": ["Window"],
      "operations": [
        { "name": "blur", "type": "void", "arguments": [] },
        { "name": "click", "type": "void", "arguments": [] },
        {
          "name": "focus", "type": "void",
          "arguments": [{ "name": "options", "type": "FocusOptions", "optional": true }]
        }
      ],
      "attributes": [
        { "name": "accessKey", "type": "DOMString" },
        { "name": "accessKeyLabel", "type": "DOMString", "readonly": true },
        { "name": "dataset", "type": "DOMStringMap", "readonly": true },
        { "name": "dir", "type": "DOMString" },
        { "name": "draggable", "type": "boolean" },
        { "name": "hidden", "type": "boolean" },
        { "name": "innerText", "type": "DOMString" },
        { "name": "lang", "type": "DOMString" },
        { "name": "offsetHeight", "type": "long", "readonly": true },
        { "name": "offsetLeft", "type": "long", "readonly": true },
        { "name": "offsetParent", "type": "Element", "nullable": true, "readonly": true },
        { "name": "offsetTop", "type": "long", "readonly": true },
        { "name": "offsetWidth", "type": "long", "readonly": true },
        { "name": "spellcheck", "type": "boolean" },
        { "name": "tabIndex", "type": "long" },
        { "name": "title", "type": "DOMString" },
        { "name": "translate", "type": "boolean" }
      ],
      "implements": ["GlobalEventHandlers", "DocumentAndElementEventHandlers", "ElementContentEditable", "NoncedElement", "ElementCSSInlineStyle"],
      "elements": [
        { "name": "abbr", "namespace": "HTML" },
        { "name": "address", "namespace": "HTML" },
        { "name": "article", "namespace": "HTML" },
        { "name": "aside", "namespace": "HTML" },
        { "name": "b", "namespace": "HTML" },
        { "name": "bdi", "namespace": "HTML" },
        { "name": "bdo", "namespace": "HTML" },
        { "name": "cite", "namespace": "HTML" },
        { "name": "code", "namespace": "HTML" },
        { "name": "dd", "namespace": "HTML" },
        { "name": "dfn", "namespace": "HTML" },
        { "name": "dt", "namespace": "HTML" },
        { "name": "em", "namespace": "HTML" },
        { "name": "figcaption", "namespace": "HTML" },
        { "name": "figure", "namespace": "HTML" },
        { "name": "footer", "namespace": "HTML" },
        { "name": "header", "namespace": "HTML" },
        { "name": "hgroup", "namespace": "HTML" },
        { "name": "i", "namespace": "HTML" },
        { "name": "kbd", "namespace": "HTML" },
        { "name": "main", "namespace": "HTML" },
        { "name": "mark", "namespace": "HTML" },
        { "name": "nav", "namespace": "HTML" },
        { "name": "noscript", "namespace": "HTML" },
        { "name": "rp", "namespace": "HTML" },
        { "name": "rt", "namespace": "HTML" },
        { "name": "ruby", "namespace": "HTML" },
        { "name": "s", "namespace": "HTML" },
        { "name": "samp", "namespace": "HTML" },
        { "name": "section", "namespace": "HTML" },
        { "name": "small", "namespace": "HTML" },
        { "name": "strong", "namespace": "HTML" },
        { "name": "sub", "namespace": "HTML" },
        { "name": "summary", "namespace": "HTML" },
        { "name": "sup", "namespace": "HTML" },
        { "name": "u", "namespace": "HTML" },
        { "name": "var", "namespace": "HTML" },
        { "name": "wbr", "namespace": "HTML" }
      ]
    }, {
      "name": "HTMLEmbedElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [{ "name": "getSVGDocument", "type": "Document", "nullable": true, "arguments": [] }],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "height", "type": "DOMString" },
        { "name": "name", "type": "DOMString" },
        { "name": "src", "type": "USVString" },
        { "name": "type", "type": "DOMString" },
        { "name": "width", "type": "DOMString" }
      ],
      "elements": [{ "name": "embed", "namespace": "HTML" }]
    }, {
      "name": "HTMLFieldSetElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        { "name": "checkValidity", "type": "boolean", "arguments": [] },
        { "name": "reportValidity", "type": "boolean", "arguments": [] },
        {
          "name": "setCustomValidity", "type": "void",
          "arguments": [{ "name": "error", "type": "DOMString" }]
        }
      ],
      "attributes": [
        { "name": "disabled", "type": "boolean" },
        { "name": "elements", "type": "HTMLCollection", "readonly": true },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "name", "type": "DOMString" },
        { "name": "type", "type": "DOMString", "readonly": true },
        { "name": "validationMessage", "type": "DOMString", "readonly": true },
        { "name": "validity", "type": "ValidityState", "readonly": true },
        { "name": "willValidate", "type": "boolean", "readonly": true }
      ],
      "elements": [{ "name": "fieldset", "namespace": "HTML" }]
    }, {
      "name": "HTMLFontElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "color", "type": "DOMString" },
        { "name": "face", "type": "DOMString" },
        { "name": "size", "type": "DOMString" }
      ]
    }, {
      "name": "HTMLFormControlsCollection", "extends": "HTMLCollection",
      "exposed": ["Window"],
      "operations": [{
        "name": "namedItem", "type": "(RadioNodeList or Element)", "nullable": true, "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }]
    }, {
      "name": "HTMLFormElement", "extends": "HTMLElement", "overrideBuiltins": true,
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "Element", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "type": "(RadioNodeList or Element)", "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }],
      "operations": [
        { "name": "checkValidity", "type": "boolean", "arguments": [] },
        { "name": "reportValidity", "type": "boolean", "arguments": [] },
        { "name": "reset", "type": "void", "arguments": [] },
        { "name": "submit", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "acceptCharset", "type": "DOMString" },
        { "name": "action", "type": "USVString" },
        { "name": "autocomplete", "type": "DOMString" },
        { "name": "elements", "type": "HTMLFormControlsCollection", "readonly": true },
        { "name": "encoding", "type": "DOMString" },
        { "name": "enctype", "type": "DOMString" },
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "method", "type": "DOMString" },
        { "name": "name", "type": "DOMString" },
        { "name": "noValidate", "type": "boolean" },
        { "name": "target", "type": "DOMString" }
      ],
      "elements": [{ "name": "form", "namespace": "HTML" }]
    }, {
      "name": "HTMLFrameElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "contentDocument", "type": "Document", "nullable": true, "readonly": true },
        { "name": "contentWindow", "type": "WindowProxy", "nullable": true, "readonly": true },
        { "name": "frameBorder", "type": "DOMString" },
        { "name": "longDesc", "type": "USVString" },
        { "name": "marginHeight", "type": "DOMString" },
        { "name": "marginWidth", "type": "DOMString" },
        { "name": "name", "type": "DOMString" },
        { "name": "noResize", "type": "boolean" },
        { "name": "scrolling", "type": "DOMString" },
        { "name": "src", "type": "USVString" }
      ]
    }, {
      "name": "HTMLFrameSetElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "cols", "type": "DOMString" },
        { "name": "rows", "type": "DOMString" }
      ],
      "implements": ["WindowEventHandlers"]
    }, {
      "name": "HTMLHeadElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "elements": [{ "name": "head", "namespace": "HTML" }]
    }, {
      "name": "HTMLHeadingElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "align", "type": "DOMString" }],
      "elements": [
        { "name": "h1", "namespace": "HTML" },
        { "name": "h2", "namespace": "HTML" },
        { "name": "h3", "namespace": "HTML" },
        { "name": "h4", "namespace": "HTML" },
        { "name": "h5", "namespace": "HTML" },
        { "name": "h6", "namespace": "HTML" }
      ]
    }, {
      "name": "HTMLHRElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "color", "type": "DOMString" },
        { "name": "noShade", "type": "boolean" },
        { "name": "size", "type": "DOMString" },
        { "name": "width", "type": "DOMString" }
      ],
      "elements": [{ "name": "hr", "namespace": "HTML" }]
    }, {
      "name": "HTMLHtmlElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "version", "type": "DOMString" }],
      "elements": [{ "name": "html", "namespace": "HTML" }]
    }, {
      "name": "HTMLHyperlinkElementUtils", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [
        { "name": "hash", "type": "USVString" },
        { "name": "host", "type": "USVString" },
        { "name": "hostname", "type": "USVString" },
        { "name": "href", "type": "USVString", "stringifier": true },
        { "name": "origin", "type": "USVString", "readonly": true },
        { "name": "password", "type": "USVString" },
        { "name": "pathname", "type": "USVString" },
        { "name": "port", "type": "USVString" },
        { "name": "protocol", "type": "USVString" },
        { "name": "search", "type": "USVString" },
        { "name": "username", "type": "USVString" }
      ]
    }, {
      "name": "HTMLIFrameElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [{ "name": "getSVGDocument", "type": "Document", "nullable": true, "arguments": [] }],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "allowFullscreen", "type": "boolean" },
        { "name": "allowPaymentRequest", "type": "boolean" },
        { "name": "allowUserMedia", "type": "boolean" },
        { "name": "contentDocument", "type": "Document", "nullable": true, "readonly": true },
        { "name": "contentWindow", "type": "WindowProxy", "nullable": true, "readonly": true },
        { "name": "frameBorder", "type": "DOMString" },
        { "name": "height", "type": "DOMString" },
        { "name": "longDesc", "type": "USVString" },
        { "name": "marginHeight", "type": "DOMString" },
        { "name": "marginWidth", "type": "DOMString" },
        { "name": "name", "type": "DOMString" },
        { "name": "referrerPolicy", "type": "DOMString" },
        { "name": "sandbox", "type": "DOMTokenList", "readonly": true },
        { "name": "scrolling", "type": "DOMString" },
        { "name": "src", "type": "USVString" },
        { "name": "srcdoc", "type": "DOMString" },
        { "name": "width", "type": "DOMString" }
      ],
      "elements": [{ "name": "iframe", "namespace": "HTML" }]
    }, {
      "name": "HTMLImageElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "namedConstructor": {
        "name": "Image",
        "arguments": [
          { "name": "width", "type": "unsigned long", "optional": true },
          { "name": "height", "type": "unsigned long", "optional": true }
        ]
      },
      "operations": [{ "name": "decode", "type": "Promise<void>", "arguments": [] }],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "alt", "type": "DOMString" },
        { "name": "border", "type": "DOMString" },
        { "name": "complete", "type": "boolean", "readonly": true },
        { "name": "crossOrigin", "type": "DOMString", "nullable": true },
        { "name": "currentSrc", "type": "USVString", "readonly": true },
        { "name": "height", "type": "unsigned long" },
        { "name": "hspace", "type": "unsigned long" },
        { "name": "isMap", "type": "boolean" },
        { "name": "longDesc", "type": "USVString" },
        { "name": "lowsrc", "type": "USVString" },
        { "name": "name", "type": "DOMString" },
        { "name": "naturalHeight", "type": "unsigned long", "readonly": true },
        { "name": "naturalWidth", "type": "unsigned long", "readonly": true },
        { "name": "referrerPolicy", "type": "DOMString" },
        { "name": "sizes", "type": "DOMString" },
        { "name": "src", "type": "USVString" },
        { "name": "srcset", "type": "USVString" },
        { "name": "useMap", "type": "DOMString" },
        { "name": "vspace", "type": "unsigned long" },
        { "name": "width", "type": "unsigned long" },
        { "name": "x", "type": "long", "readonly": true },
        { "name": "y", "type": "long", "readonly": true }
      ],
      "elements": [{ "name": "img", "namespace": "HTML" }]
    }, {
      "name": "HTMLInputElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        { "name": "checkValidity", "type": "boolean", "arguments": [] },
        { "name": "reportValidity", "type": "boolean", "arguments": [] },
        { "name": "select", "type": "void", "arguments": [] },
        {
          "name": "setCustomValidity", "type": "void",
          "arguments": [{ "name": "error", "type": "DOMString" }]
        }, {
          "name": "setRangeText", "type": "void",
          "arguments": [{ "name": "replacement", "type": "DOMString" }]
        }, {
          "name": "setRangeText", "type": "void",
          "arguments": [
            { "name": "replacement", "type": "DOMString" },
            { "name": "start", "type": "unsigned long" },
            { "name": "end", "type": "unsigned long" },
            { "name": "selectionMode", "type": "SelectionMode", "optional": true, "default": "\"preserve\"" }
          ]
        }, {
          "name": "setSelectionRange", "type": "void",
          "arguments": [
            { "name": "start", "type": "unsigned long" },
            { "name": "end", "type": "unsigned long" },
            { "name": "direction", "type": "DOMString", "optional": true }
          ]
        }, {
          "name": "stepDown", "type": "void",
          "arguments": [{ "name": "n", "type": "long", "optional": true, "default": "1" }]
        }, {
          "name": "stepUp", "type": "void",
          "arguments": [{ "name": "n", "type": "long", "optional": true, "default": "1" }]
        }
      ],
      "attributes": [
        { "name": "accept", "type": "DOMString" },
        { "name": "align", "type": "DOMString" },
        { "name": "alt", "type": "DOMString" },
        { "name": "autocomplete", "type": "DOMString" },
        { "name": "autofocus", "type": "boolean" },
        { "name": "checked", "type": "boolean" },
        { "name": "defaultChecked", "type": "boolean" },
        { "name": "defaultValue", "type": "DOMString" },
        { "name": "dirName", "type": "DOMString" },
        { "name": "disabled", "type": "boolean" },
        { "name": "files", "type": "FileList", "nullable": true },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "formAction", "type": "USVString" },
        { "name": "formEnctype", "type": "DOMString" },
        { "name": "formMethod", "type": "DOMString" },
        { "name": "formNoValidate", "type": "boolean" },
        { "name": "formTarget", "type": "DOMString" },
        { "name": "height", "type": "unsigned long" },
        { "name": "indeterminate", "type": "boolean" },
        { "name": "inputMode", "type": "DOMString" },
        { "name": "labels", "type": "NodeList", "nullable": true, "readonly": true },
        { "name": "list", "type": "HTMLElement", "nullable": true, "readonly": true },
        { "name": "max", "type": "DOMString" },
        { "name": "maxLength", "type": "long" },
        { "name": "min", "type": "DOMString" },
        { "name": "minLength", "type": "long" },
        { "name": "multiple", "type": "boolean" },
        { "name": "name", "type": "DOMString" },
        { "name": "pattern", "type": "DOMString" },
        { "name": "placeholder", "type": "DOMString" },
        { "name": "readOnly", "type": "boolean" },
        { "name": "required", "type": "boolean" },
        { "name": "selectionDirection", "type": "DOMString", "nullable": true },
        { "name": "selectionEnd", "type": "unsigned long", "nullable": true },
        { "name": "selectionStart", "type": "unsigned long", "nullable": true },
        { "name": "size", "type": "unsigned long" },
        { "name": "src", "type": "USVString" },
        { "name": "step", "type": "DOMString" },
        { "name": "type", "type": "DOMString" },
        { "name": "useMap", "type": "DOMString" },
        { "name": "validationMessage", "type": "DOMString", "readonly": true },
        { "name": "validity", "type": "ValidityState", "readonly": true },
        { "name": "value", "type": "DOMString" },
        { "name": "valueAsDate", "type": "object", "nullable": true },
        { "name": "valueAsNumber", "type": "unrestricted double" },
        { "name": "width", "type": "unsigned long" },
        { "name": "willValidate", "type": "boolean", "readonly": true }
      ],
      "elements": [{ "name": "input", "namespace": "HTML" }]
    }, {
      "name": "HTMLLabelElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "control", "type": "HTMLElement", "nullable": true, "readonly": true },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "htmlFor", "type": "DOMString" }
      ],
      "elements": [{ "name": "label", "namespace": "HTML" }]
    }, {
      "name": "HTMLLegendElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true }
      ],
      "elements": [{ "name": "legend", "namespace": "HTML" }]
    }, {
      "name": "HTMLLIElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "type", "type": "DOMString" },
        { "name": "value", "type": "long" }
      ],
      "elements": [{ "name": "li", "namespace": "HTML" }]
    }, {
      "name": "HTMLLinkElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "as", "type": "DOMString" },
        { "name": "charset", "type": "DOMString" },
        { "name": "crossOrigin", "type": "DOMString", "nullable": true },
        { "name": "href", "type": "USVString" },
        { "name": "hreflang", "type": "DOMString" },
        { "name": "integrity", "type": "DOMString" },
        { "name": "media", "type": "DOMString" },
        { "name": "referrerPolicy", "type": "DOMString" },
        { "name": "rel", "type": "DOMString" },
        { "name": "relList", "type": "DOMTokenList", "readonly": true },
        { "name": "rev", "type": "DOMString" },
        { "name": "sizes", "type": "DOMTokenList", "readonly": true },
        { "name": "target", "type": "DOMString" },
        { "name": "type", "type": "DOMString" }
      ],
      "implements": ["LinkStyle"],
      "elements": [{ "name": "link", "namespace": "HTML" }]
    }, {
      "name": "HTMLMapElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "areas", "type": "HTMLCollection", "readonly": true },
        { "name": "name", "type": "DOMString" }
      ],
      "elements": [{ "name": "map", "namespace": "HTML" }]
    }, {
      "name": "HTMLMarqueeElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        { "name": "start", "type": "void", "arguments": [] },
        { "name": "stop", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "behavior", "type": "DOMString" },
        { "name": "bgColor", "type": "DOMString" },
        { "name": "direction", "type": "DOMString" },
        { "name": "height", "type": "DOMString" },
        { "name": "hspace", "type": "unsigned long" },
        { "name": "loop", "type": "long" },
        { "name": "onbounce", "type": "EventHandler" },
        { "name": "onfinish", "type": "EventHandler" },
        { "name": "onstart", "type": "EventHandler" },
        { "name": "scrollAmount", "type": "unsigned long" },
        { "name": "scrollDelay", "type": "unsigned long" },
        { "name": "trueSpeed", "type": "boolean" },
        { "name": "vspace", "type": "unsigned long" },
        { "name": "width", "type": "DOMString" }
      ]
    }, {
      "name": "HTMLMediaElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "constants": [
        { "name": "HAVE_CURRENT_DATA", "type": "unsigned short", "value": "2" },
        { "name": "HAVE_ENOUGH_DATA", "type": "unsigned short", "value": "4" },
        { "name": "HAVE_FUTURE_DATA", "type": "unsigned short", "value": "3" },
        { "name": "HAVE_METADATA", "type": "unsigned short", "value": "1" },
        { "name": "HAVE_NOTHING", "type": "unsigned short", "value": "0" },
        { "name": "NETWORK_EMPTY", "type": "unsigned short", "value": "0" },
        { "name": "NETWORK_IDLE", "type": "unsigned short", "value": "1" },
        { "name": "NETWORK_LOADING", "type": "unsigned short", "value": "2" },
        { "name": "NETWORK_NO_SOURCE", "type": "unsigned short", "value": "3" }
      ],
      "operations": [
        {
          "name": "addTextTrack", "type": "TextTrack",
          "arguments": [
            { "name": "kind", "type": "TextTrackKind" },
            { "name": "label", "type": "DOMString", "optional": true, "default": "\"\"" },
            { "name": "language", "type": "DOMString", "optional": true, "default": "\"\"" }
          ]
        }, {
          "name": "canPlayType", "type": "CanPlayTypeResult",
          "arguments": [{ "name": "type", "type": "DOMString" }]
        }, {
          "name": "fastSeek", "type": "void",
          "arguments": [{ "name": "time", "type": "double" }]
        },
        { "name": "getStartDate", "type": "object", "arguments": [] },
        { "name": "load", "type": "void", "arguments": [] },
        { "name": "pause", "type": "void", "arguments": [] },
        { "name": "play", "type": "Promise<void>", "arguments": [] },
        {
          "name": "setMediaKeys", "type": "Promise<void>",
          "arguments": [{ "name": "mediaKeys", "type": "MediaKeys", "nullable": true }]
        }
      ],
      "attributes": [
        { "name": "audioTracks", "type": "AudioTrackList", "readonly": true },
        { "name": "autoplay", "type": "boolean" },
        { "name": "buffered", "type": "TimeRanges", "readonly": true },
        { "name": "controls", "type": "boolean" },
        { "name": "crossOrigin", "type": "DOMString", "nullable": true },
        { "name": "currentSrc", "type": "USVString", "readonly": true },
        { "name": "currentTime", "type": "double" },
        { "name": "defaultMuted", "type": "boolean" },
        { "name": "defaultPlaybackRate", "type": "double" },
        { "name": "duration", "type": "unrestricted double", "readonly": true },
        { "name": "ended", "type": "boolean", "readonly": true },
        { "name": "error", "type": "MediaError", "nullable": true, "readonly": true },
        { "name": "loop", "type": "boolean" },
        { "name": "mediaKeys", "type": "MediaKeys", "nullable": true, "readonly": true },
        { "name": "muted", "type": "boolean" },
        { "name": "networkState", "type": "unsigned short", "readonly": true },
        { "name": "onencrypted", "type": "EventHandler", "eventHandler": "encrypted" },
        { "name": "onwaitingforkey", "type": "EventHandler", "eventHandler": "waitingforkey" },
        { "name": "paused", "type": "boolean", "readonly": true },
        { "name": "playbackRate", "type": "double" },
        { "name": "played", "type": "TimeRanges", "readonly": true },
        { "name": "preload", "type": "DOMString" },
        { "name": "readyState", "type": "unsigned short", "readonly": true },
        { "name": "seekable", "type": "TimeRanges", "readonly": true },
        { "name": "seeking", "type": "boolean", "readonly": true },
        { "name": "src", "type": "USVString" },
        { "name": "srcObject", "type": "MediaProvider", "nullable": true },
        { "name": "textTracks", "type": "TextTrackList", "readonly": true },
        { "name": "videoTracks", "type": "VideoTrackList", "readonly": true },
        { "name": "volume", "type": "double" }
      ],
      "events": [
        { "name": "encrypted", "type": "MediaEncryptedEvent" },
        { "name": "waitingforkey", "type": "Event" }
      ]
    }, {
      "name": "HTMLMenuElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "compact", "type": "boolean" }],
      "elements": [{ "name": "menu", "namespace": "HTML" }]
    }, {
      "name": "HTMLMenuItemElement", "partial": true,
      "elements": [{ "name": "menuitem", "namespace": "HTML" }]
    }, {
      "name": "HTMLMetaElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "content", "type": "DOMString" },
        { "name": "httpEquiv", "type": "DOMString" },
        { "name": "name", "type": "DOMString" },
        { "name": "scheme", "type": "DOMString" }
      ],
      "elements": [{ "name": "meta", "namespace": "HTML" }]
    }, {
      "name": "HTMLMeterElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "high", "type": "double" },
        { "name": "labels", "type": "NodeList", "readonly": true },
        { "name": "low", "type": "double" },
        { "name": "max", "type": "double" },
        { "name": "min", "type": "double" },
        { "name": "optimum", "type": "double" },
        { "name": "value", "type": "double" }
      ],
      "elements": [{ "name": "meter", "namespace": "HTML" }]
    }, {
      "name": "HTMLModElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "cite", "type": "USVString" },
        { "name": "dateTime", "type": "DOMString" }
      ],
      "elements": [
        { "name": "del", "namespace": "HTML" },
        { "name": "ins", "namespace": "HTML" }
      ]
    }, {
      "name": "HTMLObjectElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        { "name": "checkValidity", "type": "boolean", "arguments": [] },
        { "name": "getSVGDocument", "type": "Document", "nullable": true, "arguments": [] },
        { "name": "reportValidity", "type": "boolean", "arguments": [] },
        {
          "name": "setCustomValidity", "type": "void",
          "arguments": [{ "name": "error", "type": "DOMString" }]
        }
      ],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "archive", "type": "DOMString" },
        { "name": "border", "type": "DOMString" },
        { "name": "code", "type": "DOMString" },
        { "name": "codeBase", "type": "DOMString" },
        { "name": "codeType", "type": "DOMString" },
        { "name": "contentDocument", "type": "Document", "nullable": true, "readonly": true },
        { "name": "contentWindow", "type": "WindowProxy", "nullable": true, "readonly": true },
        { "name": "data", "type": "USVString" },
        { "name": "declare", "type": "boolean" },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "height", "type": "DOMString" },
        { "name": "hspace", "type": "unsigned long" },
        { "name": "name", "type": "DOMString" },
        { "name": "standby", "type": "DOMString" },
        { "name": "type", "type": "DOMString" },
        { "name": "typeMustMatch", "type": "boolean" },
        { "name": "useMap", "type": "DOMString" },
        { "name": "validationMessage", "type": "DOMString", "readonly": true },
        { "name": "validity", "type": "ValidityState", "readonly": true },
        { "name": "vspace", "type": "unsigned long" },
        { "name": "width", "type": "DOMString" },
        { "name": "willValidate", "type": "boolean", "readonly": true }
      ],
      "elements": [{ "name": "object", "namespace": "HTML" }]
    }, {
      "name": "HTMLOListElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "compact", "type": "boolean" },
        { "name": "reversed", "type": "boolean" },
        { "name": "start", "type": "long" },
        { "name": "type", "type": "DOMString" }
      ],
      "elements": [{ "name": "ol", "namespace": "HTML" }]
    }, {
      "name": "HTMLOptGroupElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "disabled", "type": "boolean" },
        { "name": "label", "type": "DOMString" }
      ],
      "elements": [{ "name": "optgroup", "namespace": "HTML" }]
    }, {
      "name": "HTMLOptionElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "namedConstructor": {
        "name": "Option",
        "arguments": [
          { "name": "text", "type": "DOMString", "optional": true, "default": "\"\"" },
          { "name": "value", "type": "DOMString", "optional": true },
          { "name": "defaultSelected", "type": "boolean", "optional": true, "default": "false" },
          { "name": "selected", "type": "boolean", "optional": true, "default": "false" }
        ]
      },
      "attributes": [
        { "name": "defaultSelected", "type": "boolean" },
        { "name": "disabled", "type": "boolean" },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "index", "type": "long", "readonly": true },
        { "name": "label", "type": "DOMString" },
        { "name": "selected", "type": "boolean" },
        { "name": "text", "type": "DOMString" },
        { "name": "value", "type": "DOMString" }
      ],
      "elements": [{ "name": "option", "namespace": "HTML" }]
    }, {
      "name": "HTMLOptionsCollection", "extends": "HTMLCollection",
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "void", "setter": true,
        "arguments": [
          { "name": "index", "type": "unsigned long" },
          { "name": "option", "type": "HTMLOptionElement", "nullable": true }
        ]
      }],
      "operations": [{
        "name": "add", "type": "void",
        "arguments": [
          { "name": "element", "type": "(HTMLOptionElement or HTMLOptGroupElement)" },
          { "name": "before", "type": "(HTMLElement or long)", "nullable": true, "optional": true, "default": "null" }
        ]
      }, {
        "name": "remove", "type": "void",
        "arguments": [{ "name": "index", "type": "long" }]
      }],
      "attributes": [
        { "name": "length", "type": "unsigned long" },
        { "name": "selectedIndex", "type": "long" }
      ]
    }, {
      "name": "HTMLOutputElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        { "name": "checkValidity", "type": "boolean", "arguments": [] },
        { "name": "reportValidity", "type": "boolean", "arguments": [] },
        {
          "name": "setCustomValidity", "type": "void",
          "arguments": [{ "name": "error", "type": "DOMString" }]
        }
      ],
      "attributes": [
        { "name": "defaultValue", "type": "DOMString" },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "htmlFor", "type": "DOMTokenList", "readonly": true },
        { "name": "labels", "type": "NodeList", "readonly": true },
        { "name": "name", "type": "DOMString" },
        { "name": "type", "type": "DOMString", "readonly": true },
        { "name": "validationMessage", "type": "DOMString", "readonly": true },
        { "name": "validity", "type": "ValidityState", "readonly": true },
        { "name": "value", "type": "DOMString" },
        { "name": "willValidate", "type": "boolean", "readonly": true }
      ],
      "elements": [{ "name": "output", "namespace": "HTML" }]
    }, {
      "name": "HTMLParagraphElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "align", "type": "DOMString" }],
      "elements": [{ "name": "p", "namespace": "HTML" }]
    }, {
      "name": "HTMLParamElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "name", "type": "DOMString" },
        { "name": "type", "type": "DOMString" },
        { "name": "value", "type": "DOMString" },
        { "name": "valueType", "type": "DOMString" }
      ],
      "elements": [{ "name": "param", "namespace": "HTML" }]
    }, {
      "name": "HTMLPictureElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "elements": [{ "name": "picture", "namespace": "HTML" }]
    }, {
      "name": "HTMLPreElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "width", "type": "long" }],
      "elements": [{ "name": "pre", "namespace": "HTML" }]
    }, {
      "name": "HTMLProgressElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "labels", "type": "NodeList", "readonly": true },
        { "name": "max", "type": "double" },
        { "name": "position", "type": "double", "readonly": true },
        { "name": "value", "type": "double" }
      ],
      "elements": [{ "name": "progress", "namespace": "HTML" }]
    }, {
      "name": "HTMLQuoteElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "cite", "type": "USVString" }],
      "elements": [
        { "name": "blockquote", "namespace": "HTML" },
        { "name": "q", "namespace": "HTML" }
      ]
    }, {
      "name": "HTMLScriptElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "async", "type": "boolean" },
        { "name": "charset", "type": "DOMString" },
        { "name": "crossOrigin", "type": "DOMString", "nullable": true },
        { "name": "defer", "type": "boolean" },
        { "name": "event", "type": "DOMString" },
        { "name": "htmlFor", "type": "DOMString" },
        { "name": "integrity", "type": "DOMString" },
        { "name": "noModule", "type": "boolean" },
        { "name": "src", "type": "USVString" },
        { "name": "text", "type": "DOMString" },
        { "name": "type", "type": "DOMString" }
      ],
      "elements": [{ "name": "script", "namespace": "HTML" }]
    }, {
      "name": "HTMLSelectElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "void", "setter": true,
        "arguments": [
          { "name": "index", "type": "unsigned long" },
          { "name": "option", "type": "HTMLOptionElement", "nullable": true }
        ]
      }],
      "operations": [
        {
          "name": "add", "type": "void",
          "arguments": [
            { "name": "element", "type": "(HTMLOptionElement or HTMLOptGroupElement)" },
            { "name": "before", "type": "(HTMLElement or long)", "nullable": true, "optional": true, "default": "null" }
          ]
        },
        { "name": "checkValidity", "type": "boolean", "arguments": [] },
        {
          "name": "item", "type": "Element", "nullable": true, "getter": true,
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "namedItem", "type": "HTMLOptionElement", "nullable": true,
          "arguments": [{ "name": "name", "type": "DOMString" }]
        },
        { "name": "remove", "type": "void", "arguments": [] },
        {
          "name": "remove", "type": "void",
          "arguments": [{ "name": "index", "type": "long" }]
        },
        { "name": "reportValidity", "type": "boolean", "arguments": [] },
        {
          "name": "setCustomValidity", "type": "void",
          "arguments": [{ "name": "error", "type": "DOMString" }]
        }
      ],
      "attributes": [
        { "name": "autocomplete", "type": "DOMString" },
        { "name": "autofocus", "type": "boolean" },
        { "name": "disabled", "type": "boolean" },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "labels", "type": "NodeList", "readonly": true },
        { "name": "length", "type": "unsigned long" },
        { "name": "multiple", "type": "boolean" },
        { "name": "name", "type": "DOMString" },
        { "name": "options", "type": "HTMLOptionsCollection", "readonly": true },
        { "name": "required", "type": "boolean" },
        { "name": "selectedIndex", "type": "long" },
        { "name": "selectedOptions", "type": "HTMLCollection", "readonly": true },
        { "name": "size", "type": "unsigned long" },
        { "name": "type", "type": "DOMString", "readonly": true },
        { "name": "validationMessage", "type": "DOMString", "readonly": true },
        { "name": "validity", "type": "ValidityState", "readonly": true },
        { "name": "value", "type": "DOMString" },
        { "name": "willValidate", "type": "boolean", "readonly": true }
      ],
      "elements": [{ "name": "select", "namespace": "HTML" }]
    }, {
      "name": "HTMLSlotElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [{
        "name": "assignedNodes", "type": "sequence<Node>",
        "arguments": [{ "name": "options", "type": "AssignedNodesOptions", "optional": true }]
      }],
      "attributes": [{ "name": "name", "type": "DOMString" }],
      "elements": [{ "name": "slot", "namespace": "HTML" }]
    }, {
      "name": "HTMLSourceElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "media", "type": "DOMString" },
        { "name": "sizes", "type": "DOMString" },
        { "name": "src", "type": "USVString" },
        { "name": "srcset", "type": "USVString" },
        { "name": "type", "type": "DOMString" }
      ],
      "elements": [{ "name": "source", "namespace": "HTML" }]
    }, {
      "name": "HTMLSpanElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "elements": [{ "name": "span", "namespace": "HTML" }]
    }, {
      "name": "HTMLStyleElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "media", "type": "DOMString" },
        { "name": "type", "type": "DOMString" }
      ],
      "implements": ["LinkStyle"],
      "elements": [{ "name": "style", "namespace": "HTML" }]
    }, {
      "name": "HTMLTableCaptionElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "align", "type": "DOMString" }],
      "elements": [{ "name": "caption", "namespace": "HTML" }]
    }, {
      "name": "HTMLTableCellElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "abbr", "type": "DOMString" },
        { "name": "align", "type": "DOMString" },
        { "name": "axis", "type": "DOMString" },
        { "name": "bgColor", "type": "DOMString" },
        { "name": "cellIndex", "type": "long", "readonly": true },
        { "name": "ch", "type": "DOMString" },
        { "name": "chOff", "type": "DOMString" },
        { "name": "colSpan", "type": "unsigned long" },
        { "name": "headers", "type": "DOMString" },
        { "name": "height", "type": "DOMString" },
        { "name": "noWrap", "type": "boolean" },
        { "name": "rowSpan", "type": "unsigned long" },
        { "name": "scope", "type": "DOMString" },
        { "name": "vAlign", "type": "DOMString" },
        { "name": "width", "type": "DOMString" }
      ],
      "elements": [
        { "name": "td", "namespace": "HTML" },
        { "name": "th", "namespace": "HTML" }
      ]
    }, {
      "name": "HTMLTableColElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "ch", "type": "DOMString" },
        { "name": "chOff", "type": "DOMString" },
        { "name": "span", "type": "unsigned long" },
        { "name": "vAlign", "type": "DOMString" },
        { "name": "width", "type": "DOMString" }
      ],
      "elements": [
        { "name": "col", "namespace": "HTML" },
        { "name": "colgroup", "namespace": "HTML" }
      ]
    }, {
      "name": "HTMLTableElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        { "name": "createCaption", "type": "HTMLTableCaptionElement", "arguments": [] },
        { "name": "createTBody", "type": "HTMLTableSectionElement", "arguments": [] },
        { "name": "createTFoot", "type": "HTMLTableSectionElement", "arguments": [] },
        { "name": "createTHead", "type": "HTMLTableSectionElement", "arguments": [] },
        { "name": "deleteCaption", "type": "void", "arguments": [] },
        {
          "name": "deleteRow", "type": "void",
          "arguments": [{ "name": "index", "type": "long" }]
        },
        { "name": "deleteTFoot", "type": "void", "arguments": [] },
        { "name": "deleteTHead", "type": "void", "arguments": [] },
        {
          "name": "insertRow", "type": "HTMLTableRowElement",
          "arguments": [{ "name": "index", "type": "long", "optional": true, "default": "-1" }]
        }
      ],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "bgColor", "type": "DOMString" },
        { "name": "border", "type": "DOMString" },
        { "name": "caption", "type": "HTMLTableCaptionElement", "nullable": true },
        { "name": "cellPadding", "type": "DOMString" },
        { "name": "cellSpacing", "type": "DOMString" },
        { "name": "frame", "type": "DOMString" },
        { "name": "rows", "type": "HTMLCollection", "readonly": true },
        { "name": "rules", "type": "DOMString" },
        { "name": "summary", "type": "DOMString" },
        { "name": "tBodies", "type": "HTMLCollection", "readonly": true },
        { "name": "tFoot", "type": "HTMLTableSectionElement", "nullable": true },
        { "name": "tHead", "type": "HTMLTableSectionElement", "nullable": true },
        { "name": "width", "type": "DOMString" }
      ],
      "elements": [{ "name": "table", "namespace": "HTML" }]
    }, {
      "name": "HTMLTableRowElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [{
        "name": "deleteCell", "type": "void",
        "arguments": [{ "name": "index", "type": "long" }]
      }, {
        "name": "insertCell", "type": "HTMLTableCellElement",
        "arguments": [{ "name": "index", "type": "long", "optional": true, "default": "-1" }]
      }],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "bgColor", "type": "DOMString" },
        { "name": "cells", "type": "HTMLCollection", "readonly": true },
        { "name": "ch", "type": "DOMString" },
        { "name": "chOff", "type": "DOMString" },
        { "name": "rowIndex", "type": "long", "readonly": true },
        { "name": "sectionRowIndex", "type": "long", "readonly": true },
        { "name": "vAlign", "type": "DOMString" }
      ],
      "elements": [{ "name": "tr", "namespace": "HTML" }]
    }, {
      "name": "HTMLTableSectionElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [{
        "name": "deleteRow", "type": "void",
        "arguments": [{ "name": "index", "type": "long" }]
      }, {
        "name": "insertRow", "type": "HTMLElement",
        "arguments": [{ "name": "index", "type": "long", "optional": true, "default": "-1" }]
      }],
      "attributes": [
        { "name": "align", "type": "DOMString" },
        { "name": "ch", "type": "DOMString" },
        { "name": "chOff", "type": "DOMString" },
        { "name": "rows", "type": "HTMLCollection", "readonly": true },
        { "name": "vAlign", "type": "DOMString" }
      ],
      "elements": [
        { "name": "tbody", "namespace": "HTML" },
        { "name": "tfoot", "namespace": "HTML" },
        { "name": "thead", "namespace": "HTML" }
      ]
    }, {
      "name": "HTMLTemplateElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "content", "type": "DocumentFragment", "readonly": true }],
      "elements": [{ "name": "template", "namespace": "HTML" }]
    }, {
      "name": "HTMLTextAreaElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "operations": [
        { "name": "checkValidity", "type": "boolean", "arguments": [] },
        { "name": "reportValidity", "type": "boolean", "arguments": [] },
        { "name": "select", "type": "void", "arguments": [] },
        {
          "name": "setCustomValidity", "type": "void",
          "arguments": [{ "name": "error", "type": "DOMString" }]
        }, {
          "name": "setRangeText", "type": "void",
          "arguments": [{ "name": "replacement", "type": "DOMString" }]
        }, {
          "name": "setRangeText", "type": "void",
          "arguments": [
            { "name": "replacement", "type": "DOMString" },
            { "name": "start", "type": "unsigned long" },
            { "name": "end", "type": "unsigned long" },
            { "name": "selectionMode", "type": "SelectionMode", "optional": true, "default": "\"preserve\"" }
          ]
        }, {
          "name": "setSelectionRange", "type": "void",
          "arguments": [
            { "name": "start", "type": "unsigned long" },
            { "name": "end", "type": "unsigned long" },
            { "name": "direction", "type": "DOMString", "optional": true }
          ]
        }
      ],
      "attributes": [
        { "name": "autocomplete", "type": "DOMString" },
        { "name": "autofocus", "type": "boolean" },
        { "name": "cols", "type": "unsigned long" },
        { "name": "defaultValue", "type": "DOMString" },
        { "name": "dirName", "type": "DOMString" },
        { "name": "disabled", "type": "boolean" },
        { "name": "form", "type": "HTMLFormElement", "nullable": true, "readonly": true },
        { "name": "inputMode", "type": "DOMString" },
        { "name": "labels", "type": "NodeList", "readonly": true },
        { "name": "maxLength", "type": "long" },
        { "name": "minLength", "type": "long" },
        { "name": "name", "type": "DOMString" },
        { "name": "placeholder", "type": "DOMString" },
        { "name": "readOnly", "type": "boolean" },
        { "name": "required", "type": "boolean" },
        { "name": "rows", "type": "unsigned long" },
        { "name": "selectionDirection", "type": "DOMString" },
        { "name": "selectionEnd", "type": "unsigned long" },
        { "name": "selectionStart", "type": "unsigned long" },
        { "name": "textLength", "type": "unsigned long", "readonly": true },
        { "name": "type", "type": "DOMString", "readonly": true },
        { "name": "validationMessage", "type": "DOMString", "readonly": true },
        { "name": "validity", "type": "ValidityState", "readonly": true },
        { "name": "value", "type": "DOMString" },
        { "name": "willValidate", "type": "boolean", "readonly": true },
        { "name": "wrap", "type": "DOMString" }
      ],
      "elements": [{ "name": "textarea", "namespace": "HTML" }]
    }, {
      "name": "HTMLTimeElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "dateTime", "type": "DOMString" }],
      "elements": [{ "name": "time", "namespace": "HTML" }]
    }, {
      "name": "HTMLTitleElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [{ "name": "text", "type": "DOMString" }],
      "elements": [{ "name": "title", "namespace": "HTML" }]
    }, {
      "name": "HTMLTrackElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "constants": [
        { "name": "ERROR", "type": "unsigned short", "value": "3" },
        { "name": "LOADED", "type": "unsigned short", "value": "2" },
        { "name": "LOADING", "type": "unsigned short", "value": "1" },
        { "name": "NONE", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "default", "type": "boolean" },
        { "name": "kind", "type": "DOMString" },
        { "name": "label", "type": "DOMString" },
        { "name": "readyState", "type": "unsigned short", "readonly": true },
        { "name": "src", "type": "USVString" },
        { "name": "srclang", "type": "DOMString" },
        { "name": "track", "type": "TextTrack", "readonly": true }
      ],
      "elements": [{ "name": "track", "namespace": "HTML" }]
    }, {
      "name": "HTMLUListElement", "extends": "HTMLElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "compact", "type": "boolean" },
        { "name": "type", "type": "DOMString" }
      ],
      "elements": [{ "name": "ul", "namespace": "HTML" }]
    }, {
      "name": "HTMLUnknownElement", "extends": "HTMLElement",
      "exposed": ["Window"]
    }, {
      "name": "HTMLVideoElement", "extends": "HTMLMediaElement",
      "exposed": ["Window"],
      "attributes": [
        { "name": "height", "type": "unsigned long" },
        { "name": "playsInline", "type": "boolean" },
        { "name": "poster", "type": "USVString" },
        { "name": "videoHeight", "type": "unsigned long", "readonly": true },
        { "name": "videoWidth", "type": "unsigned long", "readonly": true },
        { "name": "width", "type": "unsigned long" }
      ],
      "elements": [{ "name": "video", "namespace": "HTML" }],
      "operations": [{ "name": "getVideoPlaybackQuality", "type": "VideoPlaybackQuality", "arguments": [] }]
    }, {
      "name": "IDBCursor",
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "advance", "type": "void",
          "arguments": [{ "name": "count", "type": "unsigned long" }]
        }, {
          "name": "continue", "type": "void",
          "arguments": [{ "name": "key", "type": "any", "optional": true }]
        }, {
          "name": "continuePrimaryKey", "type": "void",
          "arguments": [
            { "name": "key", "type": "any" },
            { "name": "primaryKey", "type": "any" }
          ]
        },
        { "name": "delete", "type": "IDBRequest", "arguments": [] },
        {
          "name": "update", "type": "IDBRequest",
          "arguments": [{ "name": "value", "type": "any" }]
        }
      ],
      "attributes": [
        { "name": "direction", "type": "IDBCursorDirection", "readonly": true },
        { "name": "key", "type": "any", "readonly": true },
        { "name": "primaryKey", "type": "any", "readonly": true },
        { "name": "source", "type": "(IDBObjectStore or IDBIndex)", "readonly": true }
      ]
    }, {
      "name": "IDBCursorWithValue", "extends": "IDBCursor",
      "exposed": ["Window", "Worker"],
      "attributes": [{ "name": "value", "type": "any", "readonly": true }]
    }, {
      "name": "IDBDatabase", "extends": "EventTarget",
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "createObjectStore", "type": "IDBObjectStore",
          "arguments": [
            { "name": "name", "type": "DOMString" },
            { "name": "options", "type": "IDBObjectStoreParameters", "optional": true }
          ]
        }, {
          "name": "deleteObjectStore", "type": "void",
          "arguments": [{ "name": "name", "type": "DOMString" }]
        }, {
          "name": "transaction", "type": "IDBTransaction",
          "arguments": [
            { "name": "storeNames", "type": "(DOMString or sequence<DOMString>)" },
            { "name": "mode", "type": "IDBTransactionMode", "optional": true, "default": "\"readonly\"" }
          ]
        }
      ],
      "attributes": [
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "objectStoreNames", "type": "DOMStringList", "readonly": true },
        { "name": "onabort", "type": "EventHandler", "eventHandler": "abort" },
        { "name": "onclose", "type": "EventHandler", "eventHandler": "close" },
        { "name": "onerror", "type": "EventHandler", "eventHandler": "error" },
        { "name": "onversionchange", "type": "EventHandler", "eventHandler": "versionchange" },
        { "name": "version", "type": "unsigned long long", "readonly": true }
      ],
      "events": [
        { "name": "abort", "type": "Event" },
        { "name": "close", "type": "Event" },
        { "name": "error", "type": "Event" },
        { "name": "versionchange", "type": "IDBVersionChangeEvent" }
      ]
    }, {
      "name": "IDBFactory",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "cmp", "type": "short",
        "arguments": [
          { "name": "first", "type": "any" },
          { "name": "second", "type": "any" }
        ]
      }, {
        "name": "deleteDatabase", "type": "IDBOpenDBRequest",
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }, {
        "name": "open", "type": "IDBOpenDBRequest",
        "arguments": [
          { "name": "name", "type": "DOMString" },
          { "name": "version", "type": "unsigned long long", "optional": true }
        ]
      }]
    }, {
      "name": "IDBIndex",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "count", "type": "IDBRequest",
        "arguments": [{ "name": "query", "type": "any", "optional": true }]
      }, {
        "name": "get", "type": "IDBRequest",
        "arguments": [{ "name": "query", "type": "any" }]
      }, {
        "name": "getAll", "type": "IDBRequest",
        "arguments": [
          { "name": "query", "type": "any", "optional": true },
          { "name": "count", "type": "unsigned long", "optional": true }
        ]
      }, {
        "name": "getAllKeys", "type": "IDBRequest",
        "arguments": [
          { "name": "query", "type": "any", "optional": true },
          { "name": "count", "type": "unsigned long", "optional": true }
        ]
      }, {
        "name": "getKey", "type": "IDBRequest",
        "arguments": [{ "name": "query", "type": "any" }]
      }, {
        "name": "openCursor", "type": "IDBRequest",
        "arguments": [
          { "name": "query", "type": "any", "optional": true },
          { "name": "direction", "type": "IDBCursorDirection", "optional": true, "default": "\"next\"" }
        ]
      }, {
        "name": "openKeyCursor", "type": "IDBRequest",
        "arguments": [
          { "name": "query", "type": "any", "optional": true },
          { "name": "direction", "type": "IDBCursorDirection", "optional": true, "default": "\"next\"" }
        ]
      }],
      "attributes": [
        { "name": "keyPath", "type": "any", "readonly": true },
        { "name": "multiEntry", "type": "boolean", "readonly": true },
        { "name": "name", "type": "DOMString" },
        { "name": "objectStore", "type": "IDBObjectStore", "readonly": true },
        { "name": "unique", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "IDBKeyRange",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "bound", "type": "IDBKeyRange", "static": true,
        "arguments": [
          { "name": "lower", "type": "any" },
          { "name": "upper", "type": "any" },
          { "name": "lowerOpen", "type": "boolean", "optional": true, "default": "false" },
          { "name": "upperOpen", "type": "boolean", "optional": true, "default": "false" }
        ]
      }, {
        "name": "includes", "type": "boolean",
        "arguments": [{ "name": "key", "type": "any" }]
      }, {
        "name": "lowerBound", "type": "IDBKeyRange", "static": true,
        "arguments": [
          { "name": "lower", "type": "any" },
          { "name": "open", "type": "boolean", "optional": true, "default": "false" }
        ]
      }, {
        "name": "only", "type": "IDBKeyRange", "static": true,
        "arguments": [{ "name": "value", "type": "any" }]
      }, {
        "name": "upperBound", "type": "IDBKeyRange", "static": true,
        "arguments": [
          { "name": "upper", "type": "any" },
          { "name": "open", "type": "boolean", "optional": true, "default": "false" }
        ]
      }],
      "attributes": [
        { "name": "lower", "type": "any", "readonly": true },
        { "name": "lowerOpen", "type": "boolean", "readonly": true },
        { "name": "upper", "type": "any", "readonly": true },
        { "name": "upperOpen", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "IDBObjectStore",
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "add", "type": "IDBRequest",
          "arguments": [
            { "name": "value", "type": "any" },
            { "name": "key", "type": "any", "optional": true }
          ]
        },
        { "name": "clear", "type": "IDBRequest", "arguments": [] },
        {
          "name": "count", "type": "IDBRequest",
          "arguments": [{ "name": "query", "type": "any", "optional": true }]
        }, {
          "name": "createIndex", "type": "IDBIndex",
          "arguments": [
            { "name": "name", "type": "DOMString" },
            { "name": "keyPath", "type": "(DOMString or sequence<DOMString>)" },
            { "name": "options", "type": "IDBIndexParameters", "optional": true }
          ]
        }, {
          "name": "delete", "type": "IDBRequest",
          "arguments": [{ "name": "query", "type": "any" }]
        }, {
          "name": "deleteIndex", "type": "void",
          "arguments": [{ "name": "name", "type": "DOMString" }]
        }, {
          "name": "get", "type": "IDBRequest",
          "arguments": [{ "name": "query", "type": "any" }]
        }, {
          "name": "getAll", "type": "IDBRequest",
          "arguments": [
            { "name": "query", "type": "any", "optional": true },
            { "name": "count", "type": "unsigned long", "optional": true }
          ]
        }, {
          "name": "getAllKeys", "type": "IDBRequest",
          "arguments": [
            { "name": "query", "type": "any", "optional": true },
            { "name": "count", "type": "unsigned long", "optional": true }
          ]
        }, {
          "name": "getKey", "type": "IDBRequest",
          "arguments": [{ "name": "query", "type": "any" }]
        }, {
          "name": "index", "type": "IDBIndex",
          "arguments": [{ "name": "name", "type": "DOMString" }]
        }, {
          "name": "openCursor", "type": "IDBRequest",
          "arguments": [
            { "name": "query", "type": "any", "optional": true },
            { "name": "direction", "type": "IDBCursorDirection", "optional": true, "default": "\"next\"" }
          ]
        }, {
          "name": "openKeyCursor", "type": "IDBRequest",
          "arguments": [
            { "name": "query", "type": "any", "optional": true },
            { "name": "direction", "type": "IDBCursorDirection", "optional": true, "default": "\"next\"" }
          ]
        }, {
          "name": "put", "type": "IDBRequest",
          "arguments": [
            { "name": "value", "type": "any" },
            { "name": "key", "type": "any", "optional": true }
          ]
        }
      ],
      "attributes": [
        { "name": "autoIncrement", "type": "boolean", "readonly": true },
        { "name": "indexNames", "type": "DOMStringList", "readonly": true },
        { "name": "keyPath", "type": "any", "readonly": true },
        { "name": "name", "type": "DOMString" },
        { "name": "transaction", "type": "IDBTransaction", "readonly": true }
      ]
    }, {
      "name": "IDBOpenDBRequest", "extends": "IDBRequest",
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "onblocked", "type": "EventHandler" },
        { "name": "onupgradeneeded", "type": "EventHandler" }
      ]
    }, {
      "name": "IDBRequest", "extends": "EventTarget",
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "error", "type": "DOMException", "nullable": true, "readonly": true },
        { "name": "onerror", "type": "EventHandler" },
        { "name": "onsuccess", "type": "EventHandler" },
        { "name": "readyState", "type": "IDBRequestReadyState", "readonly": true },
        { "name": "result", "type": "any", "readonly": true },
        { "name": "source", "type": "(IDBObjectStore or IDBIndex or IDBCursor)", "nullable": true, "readonly": true },
        { "name": "transaction", "type": "IDBTransaction", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "IDBTransaction", "extends": "EventTarget",
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "abort", "type": "void", "arguments": [] },
        {
          "name": "objectStore", "type": "IDBObjectStore",
          "arguments": [{ "name": "name", "type": "DOMString" }]
        }
      ],
      "attributes": [
        { "name": "db", "type": "IDBDatabase", "readonly": true },
        { "name": "error", "type": "DOMException", "readonly": true },
        { "name": "mode", "type": "IDBTransactionMode", "readonly": true },
        { "name": "objectStoreNames", "type": "DOMStringList", "readonly": true },
        { "name": "onabort", "type": "EventHandler" },
        { "name": "oncomplete", "type": "EventHandler" },
        { "name": "onerror", "type": "EventHandler" }
      ]
    }, {
      "name": "IDBVersionChangeEvent", "extends": "Event",
      "exposed": ["Window", "Worker"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "IDBVersionChangeEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "newVersion", "type": "unsigned long long", "nullable": true, "readonly": true },
        { "name": "oldVersion", "type": "unsigned long long", "readonly": true }
      ]
    }, {
      "name": "IIRFilterNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "IIRFilterOptions" }
        ]
      }],
      "operations": [{
        "name": "getFrequencyResponse", "type": "void",
        "arguments": [
          { "name": "frequencyHz", "type": "Float32Array" },
          { "name": "magResponse", "type": "Float32Array" },
          { "name": "phaseResponse", "type": "Float32Array" }
        ]
      }]
    }, {
      "name": "ImageBitmap",
      "exposed": ["Window", "Worker"],
      "operations": [{ "name": "close", "type": "void", "arguments": [] }],
      "attributes": [
        { "name": "height", "type": "unsigned long", "readonly": true },
        { "name": "width", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "ImageBitmapRenderingContext",
      "exposed": ["Window"],
      "operations": [{
        "name": "transferFromImageBitmap", "type": "void",
        "arguments": [{ "name": "bitmap", "type": "ImageBitmap", "nullable": true }]
      }],
      "attributes": [{ "name": "canvas", "type": "HTMLCanvasElement", "readonly": true }]
    }, {
      "name": "ImageData",
      "constructors": [{
        "arguments": [
          { "name": "sw", "type": "unsigned long" },
          { "name": "sh", "type": "unsigned long" }
        ]
      }, {
        "arguments": [
          { "name": "data", "type": "Uint8ClampedArray" },
          { "name": "sw", "type": "unsigned long" },
          { "name": "sh", "type": "unsigned long", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "data", "type": "Uint8ClampedArray", "readonly": true },
        { "name": "height", "type": "unsigned long", "readonly": true },
        { "name": "width", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "InputDeviceInfo", "extends": "MediaDeviceInfo",
      "operations": [{ "name": "getCapabilities", "type": "MediaTrackCapabilities", "arguments": [] }]
    }, {
      "name": "InputEvent", "extends": "UIEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "InputEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [
        { "name": "data", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "isComposing", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "IntersectionObserver",
      "constructors": [{
        "arguments": [
          { "name": "callback", "type": "IntersectionObserverCallback" },
          { "name": "options", "type": "IntersectionObserverInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "operations": [
        { "name": "disconnect", "type": "void", "arguments": [] },
        {
          "name": "observe", "type": "void",
          "arguments": [{ "name": "target", "type": "Element" }]
        },
        { "name": "takeRecords", "type": "sequence<IntersectionObserverEntry>", "arguments": [] },
        {
          "name": "unobserve", "type": "void",
          "arguments": [{ "name": "target", "type": "Element" }]
        }
      ],
      "attributes": [
        { "name": "root", "type": "Element", "nullable": true, "readonly": true },
        { "name": "rootMargin", "type": "DOMString", "readonly": true },
        { "name": "thresholds", "type": "FrozenArray<double>", "readonly": true }
      ]
    }, {
      "name": "IntersectionObserverEntry",
      "constructors": [{
        "arguments": [{ "name": "intersectionObserverEntryInit", "type": "IntersectionObserverEntryInit" }]
      }],
      "attributes": [
        { "name": "boundingClientRect", "type": "DOMRectReadOnly", "readonly": true },
        { "name": "intersectionRatio", "type": "double", "readonly": true },
        { "name": "intersectionRect", "type": "DOMRectReadOnly", "readonly": true },
        { "name": "isIntersecting", "type": "boolean", "readonly": true },
        { "name": "rootBounds", "type": "DOMRectReadOnly", "readonly": true },
        { "name": "target", "type": "Element", "readonly": true },
        { "name": "time", "type": "DOMHighResTimeStamp", "readonly": true }
      ]
    }, {
      "name": "KeyboardEvent", "extends": "UIEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "KeyboardEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "constants": [
        { "name": "DOM_KEY_LOCATION_LEFT", "type": "unsigned long", "value": "1" },
        { "name": "DOM_KEY_LOCATION_NUMPAD", "type": "unsigned long", "value": "3" },
        { "name": "DOM_KEY_LOCATION_RIGHT", "type": "unsigned long", "value": "2" },
        { "name": "DOM_KEY_LOCATION_STANDARD", "type": "unsigned long", "value": "0" }
      ],
      "operations": [{
        "name": "getModifierState", "type": "boolean",
        "arguments": [{ "name": "keyArg", "type": "DOMString" }]
      }],
      "attributes": [
        { "name": "altKey", "type": "boolean", "readonly": true },
        { "name": "code", "type": "DOMString", "readonly": true },
        { "name": "ctrlKey", "type": "boolean", "readonly": true },
        { "name": "isComposing", "type": "boolean", "readonly": true },
        { "name": "key", "type": "DOMString", "readonly": true },
        { "name": "location", "type": "unsigned long", "readonly": true },
        { "name": "metaKey", "type": "boolean", "readonly": true },
        { "name": "repeat", "type": "boolean", "readonly": true },
        { "name": "shiftKey", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "LinkStyle", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [{ "name": "sheet", "type": "StyleSheet", "nullable": true, "readonly": true }]
    }, {
      "name": "Location",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "assign", "type": "void",
          "arguments": [{ "name": "url", "type": "USVString" }]
        },
        { "name": "reload", "type": "void", "arguments": [] },
        {
          "name": "replace", "type": "void",
          "arguments": [{ "name": "url", "type": "USVString" }]
        }
      ],
      "attributes": [
        { "name": "ancestorOrigins", "type": "DOMStringList", "readonly": true },
        { "name": "hash", "type": "USVString" },
        { "name": "host", "type": "USVString" },
        { "name": "hostname", "type": "USVString" },
        { "name": "href", "type": "USVString", "stringifier": true },
        { "name": "origin", "type": "USVString", "readonly": true },
        { "name": "pathname", "type": "USVString" },
        { "name": "port", "type": "USVString" },
        { "name": "protocol", "type": "USVString" },
        { "name": "search", "type": "USVString" }
      ]
    }, {
      "name": "MediaDeviceInfo",
      "exposed": ["Window"],
      "operations": [{ "name": "toJSON", "type": "object", "arguments": [] }],
      "attributes": [
        { "name": "deviceId", "type": "DOMString", "readonly": true },
        { "name": "groupId", "type": "DOMString", "readonly": true },
        { "name": "kind", "type": "MediaDeviceKind", "readonly": true },
        { "name": "label", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "MediaDevices", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [
        { "name": "enumerateDevices", "type": "Promise<sequence<MediaDeviceInfo>>", "arguments": [] },
        { "name": "getSupportedConstraints", "type": "MediaTrackSupportedConstraints", "arguments": [] },
        {
          "name": "getUserMedia", "type": "Promise<MediaStream>",
          "arguments": [{ "name": "constraints", "type": "MediaStreamConstraints", "optional": true }]
        }
      ],
      "attributes": [{ "name": "ondevicechange", "type": "EventHandler" }]
    }, {
      "name": "MediaElementAudioSourceNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "MediaElementAudioSourceOptions" }
        ]
      }],
      "attributes": [{ "name": "mediaElement", "type": "HTMLMediaElement", "readonly": true }]
    }, {
      "name": "MediaEncryptedEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "MediaEncryptedEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "initData", "type": "ArrayBuffer", "nullable": true, "readonly": true },
        { "name": "initDataType", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "MediaError",
      "exposed": ["Window"],
      "constants": [
        { "name": "MEDIA_ERR_ABORTED", "type": "unsigned short", "value": "1" },
        { "name": "MEDIA_ERR_DECODE", "type": "unsigned short", "value": "3" },
        { "name": "MEDIA_ERR_NETWORK", "type": "unsigned short", "value": "2" },
        { "name": "MEDIA_ERR_SRC_NOT_SUPPORTED", "type": "unsigned short", "value": "4" }
      ],
      "attributes": [
        { "name": "code", "type": "unsigned short", "readonly": true },
        { "name": "message", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "MediaKeyMessageEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "MediaKeyMessageEventInit" }
        ]
      }],
      "attributes": [
        { "name": "message", "type": "ArrayBuffer", "readonly": true },
        { "name": "messageType", "type": "MediaKeyMessageType", "readonly": true }
      ]
    }, {
      "name": "MediaKeys",
      "operations": [{
        "name": "createSession", "type": "MediaKeySession",
        "arguments": [{ "name": "sessionType", "type": "MediaKeySessionType", "optional": true, "default": "\"temporary\"" }]
      }, {
        "name": "setServerCertificate", "type": "Promise<boolean>",
        "arguments": [{ "name": "serverCertificate", "type": "BufferSource" }]
      }]
    }, {
      "name": "MediaKeySession", "extends": "EventTarget",
      "operations": [
        { "name": "close", "type": "Promise<void>", "arguments": [] },
        {
          "name": "generateRequest", "type": "Promise<void>",
          "arguments": [
            { "name": "initDataType", "type": "DOMString" },
            { "name": "initData", "type": "BufferSource" }
          ]
        }, {
          "name": "load", "type": "Promise<boolean>",
          "arguments": [{ "name": "sessionId", "type": "DOMString" }]
        },
        { "name": "remove", "type": "Promise<void>", "arguments": [] },
        {
          "name": "update", "type": "Promise<void>",
          "arguments": [{ "name": "response", "type": "BufferSource" }]
        }
      ],
      "attributes": [
        { "name": "closed", "type": "Promise<void>", "readonly": true },
        { "name": "expiration", "type": "unrestricted double", "readonly": true },
        { "name": "keyStatuses", "type": "MediaKeyStatusMap", "readonly": true },
        { "name": "onkeystatuseschange", "type": "EventHandler", "eventHandler": "keystatuseschange" },
        { "name": "onmessage", "type": "EventHandler", "eventHandler": "message" },
        { "name": "sessionId", "type": "DOMString", "readonly": true }
      ],
      "events": [
        { "name": "keystatuseschange", "type": "Event" },
        { "name": "message", "type": "MediaKeyMessageEvent" }
      ]
    }, {
      "name": "MediaKeyStatusMap",
      "iterable": { "keytype": "BufferSource", "type": "MediaKeyStatus" },
      "operations": [{
        "name": "get", "type": "any",
        "arguments": [{ "name": "keyId", "type": "BufferSource" }]
      }, {
        "name": "has", "type": "boolean",
        "arguments": [{ "name": "keyId", "type": "BufferSource" }]
      }],
      "attributes": [{ "name": "size", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "MediaKeySystemAccess",
      "operations": [
        { "name": "createMediaKeys", "type": "Promise<MediaKeys>", "arguments": [] },
        { "name": "getConfiguration", "type": "MediaKeySystemConfiguration", "arguments": [] }
      ],
      "attributes": [{ "name": "keySystem", "type": "DOMString", "readonly": true }]
    }, {
      "name": "MediaList",
      "exposed": ["Window"],
      "operations": [{
        "name": "appendMedium", "type": "void",
        "arguments": [{ "name": "medium", "type": "CSSOMString" }]
      }, {
        "name": "deleteMedium", "type": "void",
        "arguments": [{ "name": "medium", "type": "CSSOMString" }]
      }, {
        "name": "item", "type": "CSSOMString", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "mediaText", "type": "CSSOMString", "stringifier": true }
      ]
    }, {
      "name": "MediaQueryList", "extends": "EventTarget",
      "operations": [{
        "name": "addListener", "type": "void",
        "arguments": [{ "name": "listener", "type": "EventListener", "nullable": true }]
      }, {
        "name": "removeListener", "type": "void",
        "arguments": [{ "name": "listener", "type": "EventListener", "nullable": true }]
      }],
      "attributes": [
        { "name": "matches", "type": "boolean", "readonly": true },
        { "name": "media", "type": "DOMString", "readonly": true },
        { "name": "onchange", "type": "EventHandler", "eventHandler": "change" }
      ],
      "events": [{ "name": "change", "type": "Event" }]
    }, {
      "name": "MediaQueryListEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "MediaQueryListEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "matches", "type": "boolean", "readonly": true },
        { "name": "media", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "MediaSource", "extends": "EventTarget",
      "constructors": [{ "arguments": [] }],
      "operations": [
        {
          "name": "addSourceBuffer", "type": "SourceBuffer",
          "arguments": [{ "name": "type", "type": "DOMString" }]
        },
        { "name": "clearLiveSeekableRange", "type": "void", "arguments": [] },
        {
          "name": "endOfStream", "type": "void",
          "arguments": [{ "name": "error", "type": "EndOfStreamError", "optional": true }]
        }, {
          "name": "isTypeSupported", "type": "boolean", "static": true,
          "arguments": [{ "name": "type", "type": "DOMString" }]
        }, {
          "name": "removeSourceBuffer", "type": "void",
          "arguments": [{ "name": "sourceBuffer", "type": "SourceBuffer" }]
        }, {
          "name": "setLiveSeekableRange", "type": "void",
          "arguments": [
            { "name": "start", "type": "double" },
            { "name": "end", "type": "double" }
          ]
        }
      ],
      "attributes": [
        { "name": "activeSourceBuffers", "type": "SourceBufferList", "readonly": true },
        { "name": "duration", "type": "unrestricted double" },
        { "name": "onsourceclose", "type": "EventHandler", "eventHandler": "sourceclose" },
        { "name": "onsourceended", "type": "EventHandler", "eventHandler": "sourceended" },
        { "name": "onsourceopen", "type": "EventHandler", "eventHandler": "sourceopen" },
        { "name": "readyState", "type": "ReadyState", "readonly": true },
        { "name": "sourceBuffers", "type": "SourceBufferList", "readonly": true }
      ],
      "events": [
        { "name": "sourceopen", "type": "Event" },
        { "name": "sourceended", "type": "Event" },
        { "name": "sourceclose", "type": "Event" }
      ]
    }, {
      "name": "MediaStream", "extends": "EventTarget",
      "exposed": ["Window"],
      "constructors": [
        { "arguments": [] },
        {
          "arguments": [{ "name": "stream", "type": "MediaStream" }]
        }, {
          "arguments": [{ "name": "tracks", "type": "sequence<MediaStreamTrack>" }]
        }
      ],
      "operations": [
        {
          "name": "addTrack", "type": "void",
          "arguments": [{ "name": "track", "type": "MediaStreamTrack" }]
        },
        { "name": "clone", "type": "MediaStream", "arguments": [] },
        { "name": "getAudioTracks", "type": "sequence<MediaStreamTrack>", "arguments": [] },
        {
          "name": "getTrackById", "type": "MediaStreamTrack", "nullable": true,
          "arguments": [{ "name": "trackId", "type": "DOMString" }]
        },
        { "name": "getTracks", "type": "sequence<MediaStreamTrack>", "arguments": [] },
        { "name": "getVideoTracks", "type": "sequence<MediaStreamTrack>", "arguments": [] },
        {
          "name": "removeTrack", "type": "void",
          "arguments": [{ "name": "track", "type": "MediaStreamTrack" }]
        }
      ],
      "attributes": [
        { "name": "active", "type": "boolean", "readonly": true },
        { "name": "id", "type": "DOMString", "readonly": true },
        { "name": "onaddtrack", "type": "EventHandler" },
        { "name": "onremovetrack", "type": "EventHandler" }
      ]
    }, {
      "name": "MediaStreamAudioDestinationNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "AudioNodeOptions", "optional": true }
        ]
      }],
      "attributes": [{ "name": "stream", "type": "MediaStream", "readonly": true }]
    }, {
      "name": "MediaStreamAudioSourceNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "MediaStreamAudioSourceOptions" }
        ]
      }],
      "attributes": [{ "name": "mediaStream", "type": "MediaStream", "readonly": true }]
    }, {
      "name": "MediaStreamTrack", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "applyConstraints", "type": "Promise<void>",
          "arguments": [{ "name": "constraints", "type": "MediaTrackConstraints", "optional": true }]
        },
        { "name": "clone", "type": "MediaStreamTrack", "arguments": [] },
        { "name": "getCapabilities", "type": "MediaTrackCapabilities", "arguments": [] },
        { "name": "getConstraints", "type": "MediaTrackConstraints", "arguments": [] },
        { "name": "getSettings", "type": "MediaTrackSettings", "arguments": [] },
        { "name": "stop", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "enabled", "type": "boolean" },
        { "name": "id", "type": "DOMString", "readonly": true },
        { "name": "isolated", "type": "boolean", "readonly": true },
        { "name": "kind", "type": "DOMString", "readonly": true },
        { "name": "label", "type": "DOMString", "readonly": true },
        { "name": "muted", "type": "boolean", "readonly": true },
        { "name": "onended", "type": "EventHandler" },
        { "name": "onisolationchange", "type": "EventHandler", "eventHandler": "isolationchange" },
        { "name": "onmute", "type": "EventHandler" },
        { "name": "onoverconstrained", "type": "EventHandler" },
        { "name": "onunmute", "type": "EventHandler" },
        { "name": "readyState", "type": "MediaStreamTrackState", "readonly": true }
      ],
      "events": [{ "name": "isolationchange", "type": "Event" }]
    }, {
      "name": "MediaStreamTrackAudioSourceNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "AudioContext" },
          { "name": "options", "type": "MediaStreamTrackAudioSourceOptions" }
        ]
      }]
    }, {
      "name": "MediaStreamTrackEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "MediaStreamTrackEventInit" }
        ]
      }],
      "attributes": [{ "name": "track", "type": "MediaStreamTrack", "readonly": true }]
    }, {
      "name": "MessageChannel",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "port1", "type": "MessagePort", "readonly": true },
        { "name": "port2", "type": "MessagePort", "readonly": true }
      ]
    }, {
      "name": "MessageEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "MessageEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker", "AudioWorklet"],
      "operations": [{
        "name": "initMessageEvent", "type": "void",
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "bubbles", "type": "boolean", "optional": true, "default": "false" },
          { "name": "cancelable", "type": "boolean", "optional": true, "default": "false" },
          { "name": "data", "type": "any", "optional": true, "default": "null" },
          { "name": "origin", "type": "USVString", "optional": true, "default": "\"\"" },
          { "name": "lastEventId", "type": "DOMString", "optional": true, "default": "\"\"" },
          { "name": "source", "type": "MessageEventSource", "nullable": true, "optional": true, "default": "null" },
          { "name": "ports", "type": "sequence<MessagePort>", "optional": true, "default": "[]" }
        ]
      }],
      "attributes": [
        { "name": "data", "type": "any", "readonly": true },
        { "name": "lastEventId", "type": "DOMString", "readonly": true },
        { "name": "origin", "type": "USVString", "readonly": true },
        { "name": "ports", "type": "FrozenArray<MessagePort>", "readonly": true },
        { "name": "source", "type": "MessageEventSource", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "MessagePort", "extends": "EventTarget",
      "exposed": ["Window", "Worker", "AudioWorklet"],
      "operations": [
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "postMessage", "type": "void",
          "arguments": [
            { "name": "message", "type": "any" },
            { "name": "transfer", "type": "sequence<object>", "optional": true, "default": "[]" }
          ]
        },
        { "name": "start", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "onmessage", "type": "EventHandler" },
        { "name": "onmessageerror", "type": "EventHandler", "eventHandler": "messageerror" }
      ],
      "events": [{ "name": "messageerror", "type": "MessageEvent" }]
    }, {
      "name": "MimeType",
      "exposed": ["Window"],
      "attributes": [
        { "name": "description", "type": "DOMString", "readonly": true },
        { "name": "enabledPlugin", "type": "Plugin", "readonly": true },
        { "name": "suffixes", "type": "DOMString", "readonly": true },
        { "name": "type", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "MimeTypeArray",
      "exposed": ["Window"],
      "operations": [{
        "name": "item", "type": "MimeType", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "namedItem", "type": "MimeType", "nullable": true, "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "MouseEvent", "extends": "UIEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "MouseEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "operations": [{
        "name": "getModifierState", "type": "boolean",
        "arguments": [{ "name": "keyArg", "type": "DOMString" }]
      }],
      "attributes": [
        { "name": "altKey", "type": "boolean", "readonly": true },
        { "name": "button", "type": "short", "readonly": true },
        { "name": "buttons", "type": "unsigned short", "readonly": true },
        { "name": "clientX", "type": "long", "readonly": true },
        { "name": "clientY", "type": "long", "readonly": true },
        { "name": "ctrlKey", "type": "boolean", "readonly": true },
        { "name": "metaKey", "type": "boolean", "readonly": true },
        { "name": "offsetX", "type": "double", "readonly": true },
        { "name": "offsetY", "type": "double", "readonly": true },
        { "name": "pageX", "type": "double", "readonly": true },
        { "name": "pageY", "type": "double", "readonly": true },
        { "name": "relatedTarget", "type": "EventTarget", "nullable": true, "readonly": true },
        { "name": "screenX", "type": "long", "readonly": true },
        { "name": "screenY", "type": "long", "readonly": true },
        { "name": "shiftKey", "type": "boolean", "readonly": true },
        { "name": "x", "type": "double", "readonly": true },
        { "name": "y", "type": "double", "readonly": true }
      ]
    }, {
      "name": "MutationObserver",
      "constructors": [{
        "arguments": [{ "name": "callback", "type": "MutationCallback" }]
      }],
      "exposed": ["Window"],
      "operations": [
        { "name": "disconnect", "type": "void", "arguments": [] },
        {
          "name": "observe", "type": "void",
          "arguments": [
            { "name": "target", "type": "Node" },
            { "name": "options", "type": "MutationObserverInit", "optional": true }
          ]
        },
        { "name": "takeRecords", "type": "sequence<MutationRecord>", "arguments": [] }
      ]
    }, {
      "name": "MutationRecord",
      "exposed": ["Window"],
      "attributes": [
        { "name": "addedNodes", "type": "NodeList", "readonly": true },
        { "name": "attributeName", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "attributeNamespace", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "nextSibling", "type": "Node", "nullable": true, "readonly": true },
        { "name": "oldValue", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "previousSibling", "type": "Node", "nullable": true, "readonly": true },
        { "name": "removedNodes", "type": "NodeList", "readonly": true },
        { "name": "target", "type": "Node", "readonly": true },
        { "name": "type", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "NamedNodeMap",
      "exposed": ["Window"],
      "operations": [{
        "name": "getNamedItem", "type": "Attr", "nullable": true, "getter": true,
        "arguments": [{ "name": "qualifiedName", "type": "DOMString" }]
      }, {
        "name": "getNamedItemNS", "type": "Attr", "nullable": true,
        "arguments": [
          { "name": "namespace", "type": "DOMString", "nullable": true },
          { "name": "localName", "type": "DOMString" }
        ]
      }, {
        "name": "item", "type": "Attr", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "removeNamedItem", "type": "Attr",
        "arguments": [{ "name": "qualifiedName", "type": "DOMString" }]
      }, {
        "name": "removeNamedItemNS", "type": "Attr",
        "arguments": [
          { "name": "namespace", "type": "DOMString", "nullable": true },
          { "name": "localName", "type": "DOMString" }
        ]
      }, {
        "name": "setNamedItem", "type": "Attr", "nullable": true,
        "arguments": [{ "name": "attr", "type": "Attr" }]
      }, {
        "name": "setNamedItemNS", "type": "Attr", "nullable": true,
        "arguments": [{ "name": "attr", "type": "Attr" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "NavigationPreloadManager",
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "disable", "type": "Promise<void>", "arguments": [] },
        { "name": "enable", "type": "Promise<void>", "arguments": [] },
        { "name": "getState", "type": "Promise<NavigationPreloadState>", "arguments": [] },
        {
          "name": "setHeaderValue", "type": "Promise<void>",
          "arguments": [{ "name": "value", "type": "ByteString" }]
        }
      ]
    }, {
      "name": "Navigator",
      "exposed": ["Window"],
      "implements": ["NavigatorID", "NavigatorLanguage", "NavigatorOnLine", "NavigatorContentUtils", "NavigatorCookies", "NavigatorPlugins", "NavigatorConcurrentHardware", "NavigatorUserMedia"],
      "operations": [
        { "name": "getGamepads", "type": "sequence<Gamepad?>", "arguments": [] },
        {
          "name": "requestMediaKeySystemAccess", "type": "Promise<MediaKeySystemAccess>",
          "arguments": [
            { "name": "keySystem", "type": "DOMString" },
            { "name": "supportedConfigurations", "type": "sequence<MediaKeySystemConfiguration>" }
          ]
        }, {
          "name": "sendBeacon", "type": "boolean",
          "arguments": [
            { "name": "url", "type": "USVString" },
            { "name": "data", "type": "BodyInit", "nullable": true, "optional": true, "default": "null" }
          ]
        }
      ],
      "attributes": [
        { "name": "clipboard", "type": "Clipboard", "readonly": true },
        { "name": "clipboard", "type": "Clipboard", "readonly": true },
        { "name": "geolocation", "type": "Geolocation", "readonly": true },
        { "name": "maxTouchPoints", "type": "long", "readonly": true },
        { "name": "serviceWorker", "type": "ServiceWorkerContainer", "readonly": true }
      ]
    }, {
      "name": "NavigatorConcurrentHardware", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [{ "name": "hardwareConcurrency", "type": "unsigned long long", "readonly": true }]
    }, {
      "name": "NavigatorContentUtils", "noInterfaceObject": true,
      "exposed": ["Window"],
      "operations": [{
        "name": "registerProtocolHandler", "type": "void",
        "arguments": [
          { "name": "scheme", "type": "DOMString" },
          { "name": "url", "type": "USVString" },
          { "name": "title", "type": "DOMString" }
        ]
      }, {
        "name": "unregisterProtocolHandler", "type": "void",
        "arguments": [
          { "name": "scheme", "type": "DOMString" },
          { "name": "url", "type": "USVString" }
        ]
      }]
    }, {
      "name": "NavigatorCookies", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [{ "name": "cookieEnabled", "type": "boolean", "readonly": true }]
    }, {
      "name": "NavigatorID", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "appCodeName", "type": "DOMString", "readonly": true },
        { "name": "appName", "type": "DOMString", "readonly": true },
        { "name": "appVersion", "type": "DOMString", "readonly": true },
        {
          "name": "oscpu", "type": "DOMString", "readonly": true,
          "exposed": ["Window"]
        },
        { "name": "platform", "type": "DOMString", "readonly": true },
        { "name": "product", "type": "DOMString", "readonly": true },
        {
          "name": "productSub", "type": "DOMString", "readonly": true,
          "exposed": ["Window"]
        },
        { "name": "userAgent", "type": "DOMString", "readonly": true },
        {
          "name": "vendor", "type": "DOMString", "readonly": true,
          "exposed": ["Window"]
        }, {
          "name": "vendorSub", "type": "DOMString", "readonly": true,
          "exposed": ["Window"]
        }
      ],
      "operations": [{
        "name": "taintEnabled", "type": "boolean", "arguments": [],
        "exposed": ["Window"]
      }]
    }, {
      "name": "NavigatorLanguage", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "language", "type": "DOMString", "readonly": true },
        { "name": "languages", "type": "FrozenArray<DOMString>", "readonly": true }
      ]
    }, {
      "name": "NavigatorOnLine", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "attributes": [{ "name": "onLine", "type": "boolean", "readonly": true }]
    }, {
      "name": "NavigatorPlugins", "noInterfaceObject": true,
      "exposed": ["Window"],
      "operations": [{ "name": "javaEnabled", "type": "boolean", "arguments": [] }],
      "attributes": [
        { "name": "mimeTypes", "type": "MimeTypeArray", "readonly": true },
        { "name": "plugins", "type": "PluginArray", "readonly": true }
      ]
    }, {
      "name": "NavigatorUserMedia", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [{ "name": "mediaDevices", "type": "MediaDevices", "readonly": true }],
      "operations": [{
        "name": "getUserMedia", "type": "void",
        "arguments": [
          { "name": "constraints", "type": "MediaStreamConstraints" },
          { "name": "successCallback", "type": "NavigatorUserMediaSuccessCallback" },
          { "name": "errorCallback", "type": "NavigatorUserMediaErrorCallback" }
        ]
      }]
    }, {
      "name": "Node", "extends": "EventTarget",
      "exposed": ["Window"],
      "constants": [
        { "name": "ATTRIBUTE_NODE", "type": "unsigned short", "value": "2" },
        { "name": "CDATA_SECTION_NODE", "type": "unsigned short", "value": "4" },
        { "name": "COMMENT_NODE", "type": "unsigned short", "value": "8" },
        { "name": "DOCUMENT_FRAGMENT_NODE", "type": "unsigned short", "value": "11" },
        { "name": "DOCUMENT_NODE", "type": "unsigned short", "value": "9" },
        { "name": "DOCUMENT_POSITION_CONTAINED_BY", "type": "unsigned short", "value": "16" },
        { "name": "DOCUMENT_POSITION_CONTAINS", "type": "unsigned short", "value": "8" },
        { "name": "DOCUMENT_POSITION_DISCONNECTED", "type": "unsigned short", "value": "1" },
        { "name": "DOCUMENT_POSITION_FOLLOWING", "type": "unsigned short", "value": "4" },
        { "name": "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC", "type": "unsigned short", "value": "32" },
        { "name": "DOCUMENT_POSITION_PRECEDING", "type": "unsigned short", "value": "2" },
        { "name": "DOCUMENT_TYPE_NODE", "type": "unsigned short", "value": "10" },
        { "name": "ELEMENT_NODE", "type": "unsigned short", "value": "1" },
        { "name": "ENTITY_NODE", "type": "unsigned short", "value": "6" },
        { "name": "ENTITY_REFERENCE_NODE", "type": "unsigned short", "value": "5" },
        { "name": "NOTATION_NODE", "type": "unsigned short", "value": "12" },
        { "name": "PROCESSING_INSTRUCTION_NODE", "type": "unsigned short", "value": "7" },
        { "name": "TEXT_NODE", "type": "unsigned short", "value": "3" }
      ],
      "operations": [
        {
          "name": "appendChild", "type": "Node",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "cloneNode", "type": "Node",
          "arguments": [{ "name": "deep", "type": "boolean", "optional": true, "default": "false" }]
        }, {
          "name": "compareDocumentPosition", "type": "unsigned short",
          "arguments": [{ "name": "other", "type": "Node" }]
        }, {
          "name": "contains", "type": "boolean",
          "arguments": [{ "name": "other", "type": "Node", "nullable": true }]
        }, {
          "name": "getRootNode", "type": "Node",
          "arguments": [{ "name": "options", "type": "GetRootNodeOptions", "optional": true }]
        },
        { "name": "hasChildNodes", "type": "boolean", "arguments": [] },
        {
          "name": "insertBefore", "type": "Node",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "child", "type": "Node", "nullable": true }
          ]
        }, {
          "name": "isDefaultNamespace", "type": "boolean",
          "arguments": [{ "name": "namespace", "type": "DOMString", "nullable": true }]
        }, {
          "name": "isEqualNode", "type": "boolean",
          "arguments": [{ "name": "otherNode", "type": "Node", "nullable": true }]
        }, {
          "name": "isSameNode", "type": "boolean",
          "arguments": [{ "name": "otherNode", "type": "Node", "nullable": true }]
        }, {
          "name": "lookupNamespaceURI", "type": "DOMString", "nullable": true,
          "arguments": [{ "name": "prefix", "type": "DOMString", "nullable": true }]
        }, {
          "name": "lookupPrefix", "type": "DOMString", "nullable": true,
          "arguments": [{ "name": "namespace", "type": "DOMString", "nullable": true }]
        },
        { "name": "normalize", "type": "void", "arguments": [] },
        {
          "name": "removeChild", "type": "Node",
          "arguments": [{ "name": "child", "type": "Node" }]
        }, {
          "name": "replaceChild", "type": "Node",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "child", "type": "Node" }
          ]
        }
      ],
      "attributes": [
        { "name": "baseURI", "type": "USVString", "readonly": true },
        { "name": "childNodes", "type": "NodeList", "readonly": true },
        { "name": "firstChild", "type": "Node", "nullable": true, "readonly": true },
        { "name": "isConnected", "type": "boolean", "readonly": true },
        { "name": "lastChild", "type": "Node", "nullable": true, "readonly": true },
        { "name": "nextSibling", "type": "Node", "nullable": true, "readonly": true },
        { "name": "nodeName", "type": "DOMString", "readonly": true },
        { "name": "nodeType", "type": "unsigned short", "readonly": true },
        { "name": "nodeValue", "type": "DOMString", "nullable": true },
        { "name": "ownerDocument", "type": "Document", "nullable": true, "readonly": true },
        { "name": "parentElement", "type": "Element", "nullable": true, "readonly": true },
        { "name": "parentNode", "type": "Node", "nullable": true, "readonly": true },
        { "name": "previousSibling", "type": "Node", "nullable": true, "readonly": true },
        { "name": "textContent", "type": "DOMString", "nullable": true }
      ]
    }, {
      "name": "NodeIterator",
      "exposed": ["Window"],
      "operations": [
        { "name": "detach", "type": "void", "arguments": [] },
        { "name": "nextNode", "type": "Node", "nullable": true, "arguments": [] },
        { "name": "previousNode", "type": "Node", "nullable": true, "arguments": [] }
      ],
      "attributes": [
        { "name": "filter", "type": "NodeFilter", "nullable": true, "readonly": true },
        { "name": "pointerBeforeReferenceNode", "type": "boolean", "readonly": true },
        { "name": "referenceNode", "type": "Node", "readonly": true },
        { "name": "root", "type": "Node", "readonly": true },
        { "name": "whatToShow", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "NodeList",
      "exposed": ["Window"],
      "iterable": { "type": "Node" },
      "operations": [{
        "name": "item", "type": "Node", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "NoncedElement", "noInterfaceObject": true,
      "attributes": [{ "name": "nonce", "type": "DOMString" }]
    }, {
      "name": "NonDocumentTypeChildNode", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [
        { "name": "nextElementSibling", "type": "Element", "nullable": true, "readonly": true },
        { "name": "previousElementSibling", "type": "Element", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "NonElementParentNode", "noInterfaceObject": true,
      "exposed": ["Window"],
      "operations": [{
        "name": "getElementById", "type": "Element", "nullable": true,
        "arguments": [{ "name": "elementId", "type": "DOMString" }]
      }]
    }, {
      "name": "Notification", "extends": "EventTarget",
      "constructors": [{
        "arguments": [
          { "name": "title", "type": "DOMString" },
          { "name": "options", "type": "NotificationOptions", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "requestPermission", "type": "Promise<NotificationPermission>", "static": true,
          "arguments": [{ "name": "deprecatedCallback", "type": "NotificationPermissionCallback", "optional": true }],
          "exposed": ["Window"]
        }
      ],
      "attributes": [
        { "name": "actions", "type": "FrozenArray<NotificationAction>", "readonly": true },
        { "name": "badge", "type": "USVString", "readonly": true },
        { "name": "body", "type": "DOMString", "readonly": true },
        { "name": "data", "type": "any", "readonly": true },
        { "name": "dir", "type": "NotificationDirection", "readonly": true },
        { "name": "icon", "type": "USVString", "readonly": true },
        { "name": "image", "type": "USVString", "readonly": true },
        { "name": "lang", "type": "DOMString", "readonly": true },
        { "name": "maxActions", "type": "unsigned long", "readonly": true, "static": true },
        { "name": "onclick", "type": "EventHandler" },
        { "name": "onerror", "type": "EventHandler" },
        { "name": "permission", "type": "NotificationPermission", "readonly": true, "static": true },
        { "name": "renotify", "type": "boolean", "readonly": true },
        { "name": "requireInteraction", "type": "boolean", "readonly": true },
        { "name": "silent", "type": "boolean", "readonly": true },
        { "name": "sound", "type": "USVString", "readonly": true },
        { "name": "tag", "type": "DOMString", "readonly": true },
        { "name": "timestamp", "type": "DOMTimeStamp", "readonly": true },
        { "name": "title", "type": "DOMString", "readonly": true },
        { "name": "vibrate", "type": "FrozenArray<unsigned long>", "readonly": true }
      ]
    }, {
      "name": "NotificationEvent", "extends": "ExtendableEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "NotificationEventInit" }
        ]
      }],
      "exposed": ["ServiceWorker"],
      "attributes": [
        { "name": "action", "type": "DOMString", "readonly": true },
        { "name": "notification", "type": "Notification", "readonly": true }
      ]
    },
    { "name": "OES_element_index_uint", "noInterfaceObject": true },
    {
      "name": "OES_standard_derivatives", "noInterfaceObject": true,
      "constants": [{ "name": "FRAGMENT_SHADER_DERIVATIVE_HINT_OES", "type": "GLenum", "value": "35723" }]
    },
    { "name": "OES_texture_float", "noInterfaceObject": true },
    { "name": "OES_texture_float_linear", "noInterfaceObject": true },
    {
      "name": "OES_texture_half_float", "noInterfaceObject": true,
      "constants": [{ "name": "HALF_FLOAT_OES", "type": "GLenum", "value": "36193" }]
    },
    { "name": "OES_texture_half_float_linear", "noInterfaceObject": true },
    {
      "name": "OfflineAudioCompletionEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "OfflineAudioCompletionEventInit" }
        ]
      }],
      "attributes": [{ "name": "renderedBuffer", "type": "AudioBuffer", "readonly": true }]
    }, {
      "name": "OfflineAudioContext", "extends": "BaseAudioContext",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [{ "name": "contextOptions", "type": "OfflineAudioContextOptions" }]
      }, {
        "arguments": [
          { "name": "numberOfChannels", "type": "unsigned long" },
          { "name": "length", "type": "unsigned long" },
          { "name": "sampleRate", "type": "float" }
        ]
      }],
      "operations": [
        { "name": "startRendering", "type": "Promise<AudioBuffer>", "arguments": [] },
        {
          "name": "suspend", "type": "Promise<void>",
          "arguments": [{ "name": "suspendTime", "type": "double" }]
        }
      ],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "oncomplete", "type": "EventHandler" }
      ]
    }, {
      "name": "OffscreenCanvas", "extends": "EventTarget",
      "constructors": [{
        "arguments": [
          { "name": "width", "type": "unsigned long long" },
          { "name": "height", "type": "unsigned long long" }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "convertToBlob", "type": "Promise<Blob>",
          "arguments": [{ "name": "options", "type": "ImageEncodeOptions", "optional": true }]
        }, {
          "name": "getContext", "type": "OffscreenRenderingContext", "nullable": true,
          "arguments": [
            { "name": "contextType", "type": "OffscreenRenderingContextType" },
            { "name": "arguments", "type": "any", "variadic": true }
          ]
        },
        { "name": "transferToImageBitmap", "type": "ImageBitmap", "arguments": [] }
      ],
      "attributes": [
        { "name": "height", "type": "unsigned long long" },
        { "name": "width", "type": "unsigned long long" }
      ]
    }, {
      "name": "OffscreenCanvasRenderingContext2D",
      "exposed": ["Window", "Worker"],
      "operations": [{ "name": "commit", "type": "void", "arguments": [] }],
      "attributes": [{ "name": "canvas", "type": "OffscreenCanvas", "readonly": true }],
      "implements": ["CanvasState", "CanvasTransform", "CanvasCompositing", "CanvasImageSmoothing", "CanvasFillStrokeStyles", "CanvasShadowStyles", "CanvasFilters", "CanvasRect", "CanvasDrawPath", "CanvasDrawImage", "CanvasImageData", "CanvasPathDrawingStyles", "CanvasPath"]
    }, {
      "name": "OscillatorNode", "extends": "AudioScheduledSourceNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "OscillatorOptions", "optional": true }
        ]
      }],
      "operations": [{
        "name": "setPeriodicWave", "type": "void",
        "arguments": [{ "name": "periodicWave", "type": "PeriodicWave" }]
      }],
      "attributes": [
        { "name": "detune", "type": "AudioParam", "readonly": true },
        { "name": "frequency", "type": "AudioParam", "readonly": true },
        { "name": "type", "type": "OscillatorType" }
      ]
    }, {
      "name": "OverconstrainedErrorEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "OverconstrainedErrorEventInit" }
        ]
      }],
      "attributes": [{ "name": "error", "type": "OverconstrainedError", "nullable": true, "readonly": true }]
    }, {
      "name": "PageTransitionEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "PageTransitionEventInit", "optional": true }
        ]
      }],
      "attributes": [{ "name": "persisted", "type": "boolean", "readonly": true }]
    }, {
      "name": "PannerNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "PannerOptions", "optional": true }
        ]
      }],
      "operations": [{
        "name": "setOrientation", "type": "void",
        "arguments": [
          { "name": "x", "type": "float" },
          { "name": "y", "type": "float" },
          { "name": "z", "type": "float" }
        ]
      }, {
        "name": "setPosition", "type": "void",
        "arguments": [
          { "name": "x", "type": "float" },
          { "name": "y", "type": "float" },
          { "name": "z", "type": "float" }
        ]
      }],
      "attributes": [
        { "name": "coneInnerAngle", "type": "double" },
        { "name": "coneOuterAngle", "type": "double" },
        { "name": "coneOuterGain", "type": "double" },
        { "name": "distanceModel", "type": "DistanceModelType" },
        { "name": "maxDistance", "type": "double" },
        { "name": "orientationX", "type": "AudioParam", "readonly": true },
        { "name": "orientationY", "type": "AudioParam", "readonly": true },
        { "name": "orientationZ", "type": "AudioParam", "readonly": true },
        { "name": "panningModel", "type": "PanningModelType" },
        { "name": "positionX", "type": "AudioParam", "readonly": true },
        { "name": "positionY", "type": "AudioParam", "readonly": true },
        { "name": "positionZ", "type": "AudioParam", "readonly": true },
        { "name": "refDistance", "type": "double" },
        { "name": "rolloffFactor", "type": "double" }
      ]
    }, {
      "name": "ParentNode", "noInterfaceObject": true,
      "exposed": ["Window"],
      "operations": [{
        "name": "append", "type": "void",
        "arguments": [{ "name": "nodes", "type": "(Node or DOMString)", "variadic": true }]
      }, {
        "name": "prepend", "type": "void",
        "arguments": [{ "name": "nodes", "type": "(Node or DOMString)", "variadic": true }]
      }, {
        "name": "querySelector", "type": "Element", "nullable": true,
        "arguments": [{ "name": "selectors", "type": "DOMString" }]
      }, {
        "name": "querySelectorAll", "type": "NodeList",
        "arguments": [{ "name": "selectors", "type": "DOMString" }]
      }],
      "attributes": [
        { "name": "childElementCount", "type": "unsigned long", "readonly": true },
        { "name": "children", "type": "HTMLCollection", "readonly": true },
        { "name": "firstElementChild", "type": "Element", "nullable": true, "readonly": true },
        { "name": "lastElementChild", "type": "Element", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "Path2D",
      "constructors": [
        { "arguments": [] },
        {
          "arguments": [{ "name": "path", "type": "Path2D" }]
        }, {
          "arguments": [
            { "name": "paths", "type": "sequence<Path2D>" },
            { "name": "fillRule", "type": "CanvasFillRule", "optional": true, "default": "\"nonzero\"" }
          ]
        }, {
          "arguments": [{ "name": "d", "type": "DOMString" }]
        }
      ],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "addPath", "type": "void",
        "arguments": [
          { "name": "path", "type": "Path2D" },
          { "name": "transform", "type": "DOMMatrix2DInit", "optional": true }
        ]
      }],
      "implements": ["CanvasPath"]
    }, {
      "name": "PaymentAddress",
      "exposed": ["Window"],
      "operations": [{ "name": "toJSON", "type": "object", "arguments": [] }],
      "attributes": [
        { "name": "addressLine", "type": "FrozenArray<DOMString>", "readonly": true },
        { "name": "city", "type": "DOMString", "readonly": true },
        { "name": "country", "type": "DOMString", "readonly": true },
        { "name": "dependentLocality", "type": "DOMString", "readonly": true },
        { "name": "languageCode", "type": "DOMString", "readonly": true },
        { "name": "organization", "type": "DOMString", "readonly": true },
        { "name": "phone", "type": "DOMString", "readonly": true },
        { "name": "postalCode", "type": "DOMString", "readonly": true },
        { "name": "recipient", "type": "DOMString", "readonly": true },
        { "name": "region", "type": "DOMString", "readonly": true },
        { "name": "sortingCode", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "PaymentRequest", "extends": "EventTarget",
      "constructors": [{
        "arguments": [
          { "name": "methodData", "type": "sequence<PaymentMethodData>" },
          { "name": "details", "type": "PaymentDetailsInit" },
          { "name": "options", "type": "PaymentOptions", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "operations": [
        { "name": "abort", "type": "Promise<void>", "arguments": [] },
        { "name": "canMakePayment", "type": "Promise<boolean>", "arguments": [] },
        { "name": "show", "type": "Promise<PaymentResponse>", "arguments": [] }
      ],
      "attributes": [
        { "name": "id", "type": "DOMString", "readonly": true },
        { "name": "onshippingaddresschange", "type": "EventHandler" },
        { "name": "onshippingoptionchange", "type": "EventHandler" },
        { "name": "shippingAddress", "type": "PaymentAddress", "nullable": true, "readonly": true },
        { "name": "shippingOption", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "shippingType", "type": "PaymentShippingType", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "PaymentRequestUpdateEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "PaymentRequestUpdateEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "operations": [{
        "name": "updateWith", "type": "void",
        "arguments": [{ "name": "detailsPromise", "type": "Promise<PaymentDetailsUpdate>" }]
      }]
    }, {
      "name": "PaymentResponse",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "complete", "type": "Promise<void>",
          "arguments": [{ "name": "result", "type": "PaymentComplete", "optional": true, "default": "\"unknown\"" }]
        },
        { "name": "toJSON", "type": "object", "arguments": [] }
      ],
      "attributes": [
        { "name": "details", "type": "object", "readonly": true },
        { "name": "methodName", "type": "DOMString", "readonly": true },
        { "name": "payerEmail", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "payerName", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "payerPhone", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "requestId", "type": "DOMString", "readonly": true },
        { "name": "shippingAddress", "type": "PaymentAddress", "nullable": true, "readonly": true },
        { "name": "shippingOption", "type": "DOMString", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "Performance", "extends": "EventTarget",
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "clearMarks", "type": "void",
          "arguments": [{ "name": "markName", "type": "DOMString", "optional": true }]
        }, {
          "name": "clearMeasures", "type": "void",
          "arguments": [{ "name": "measureName", "type": "DOMString", "optional": true }]
        },
        { "name": "clearResourceTimings", "type": "void", "arguments": [] },
        { "name": "getEntries", "type": "PerformanceEntryList", "arguments": [] },
        {
          "name": "getEntriesByName", "type": "PerformanceEntryList",
          "arguments": [
            { "name": "name", "type": "DOMString" },
            { "name": "type", "type": "DOMString", "optional": true }
          ]
        }, {
          "name": "getEntriesByType", "type": "PerformanceEntryList",
          "arguments": [{ "name": "type", "type": "DOMString" }]
        }, {
          "name": "mark", "type": "void",
          "arguments": [{ "name": "markName", "type": "DOMString" }]
        }, {
          "name": "measure", "type": "void",
          "arguments": [
            { "name": "measureName", "type": "DOMString" },
            { "name": "startMark", "type": "DOMString", "optional": true },
            { "name": "endMark", "type": "DOMString", "optional": true }
          ]
        },
        { "name": "now", "type": "DOMHighResTimeStamp", "arguments": [] },
        {
          "name": "setResourceTimingBufferSize", "type": "void",
          "arguments": [{ "name": "maxSize", "type": "unsigned long" }]
        },
        { "name": "toJSON", "type": "object", "arguments": [] }
      ],
      "attributes": [
        {
          "name": "navigation", "type": "PerformanceNavigation", "readonly": true,
          "exposed": ["Window"]
        },
        { "name": "onresourcetimingbufferfull", "type": "EventHandler", "eventHandler": "resourcetimingbufferfull" },
        { "name": "timeOrigin", "type": "DOMHighResTimeStamp", "readonly": true },
        {
          "name": "timing", "type": "PerformanceTiming", "readonly": true,
          "exposed": ["Window"]
        }
      ],
      "events": [{ "name": "resourcetimingbufferfull", "type": "Event" }]
    }, {
      "name": "PerformanceEntry",
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "duration", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "entryType", "type": "DOMString", "readonly": true },
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "startTime", "type": "DOMHighResTimeStamp", "readonly": true }
      ]
    },
    { "name": "PerformanceMark", "extends": "PerformanceEntry" },
    { "name": "PerformanceMeasure", "extends": "PerformanceEntry" },
    {
      "name": "PerformanceNavigation",
      "exposed": ["Window"],
      "constants": [
        { "name": "TYPE_BACK_FORWARD", "type": "unsigned short", "value": "2" },
        { "name": "TYPE_NAVIGATE", "type": "unsigned short", "value": "0" },
        { "name": "TYPE_RELOAD", "type": "unsigned short", "value": "1" },
        { "name": "TYPE_RESERVED", "type": "unsigned short", "value": "255" }
      ],
      "operations": [{ "name": "toJSON", "type": "object", "arguments": [] }],
      "attributes": [
        { "name": "redirectCount", "type": "unsigned short", "readonly": true },
        { "name": "type", "type": "unsigned short", "readonly": true }
      ]
    }, {
      "name": "PerformanceNavigationTiming", "extends": "PerformanceResourceTiming",
      "exposed": ["Window"],
      "operations": [{ "name": "toJSON", "type": "object", "arguments": [] }],
      "attributes": [
        { "name": "domComplete", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "domContentLoadedEventEnd", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "domContentLoadedEventStart", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "domInteractive", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "loadEventEnd", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "loadEventStart", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "redirectCount", "type": "unsigned short", "readonly": true },
        { "name": "type", "type": "NavigationType", "readonly": true },
        { "name": "unloadEventEnd", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "unloadEventStart", "type": "DOMHighResTimeStamp", "readonly": true }
      ]
    }, {
      "name": "PerformanceObserver",
      "constructors": [{
        "arguments": [{ "name": "callback", "type": "PerformanceObserverCallback" }]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "disconnect", "type": "void", "arguments": [] },
        {
          "name": "observe", "type": "void",
          "arguments": [{ "name": "options", "type": "PerformanceObserverInit" }]
        }
      ]
    }, {
      "name": "PerformanceObserverEntryList",
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "getEntries", "type": "PerformanceEntryList", "arguments": [] },
        {
          "name": "getEntriesByName", "type": "PerformanceEntryList",
          "arguments": [
            { "name": "name", "type": "DOMString" },
            { "name": "type", "type": "DOMString", "optional": true }
          ]
        }, {
          "name": "getEntriesByType", "type": "PerformanceEntryList",
          "arguments": [{ "name": "type", "type": "DOMString" }]
        }
      ]
    }, {
      "name": "PerformanceResourceTiming", "extends": "PerformanceEntry",
      "exposed": ["Window"],
      "attributes": [
        { "name": "connectEnd", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "connectStart", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "domainLookupEnd", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "domainLookupStart", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "fetchStart", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "initiatorType", "type": "DOMString", "readonly": true },
        { "name": "redirectEnd", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "redirectStart", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "requestStart", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "responseEnd", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "responseStart", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "secureConnectionStart", "type": "DOMHighResTimeStamp", "readonly": true }
      ]
    }, {
      "name": "PerformanceTiming",
      "exposed": ["Window"],
      "operations": [{ "name": "toJSON", "type": "object", "arguments": [] }],
      "attributes": [
        { "name": "connectEnd", "type": "unsigned long long", "readonly": true },
        { "name": "connectStart", "type": "unsigned long long", "readonly": true },
        { "name": "domainLookupEnd", "type": "unsigned long long", "readonly": true },
        { "name": "domainLookupStart", "type": "unsigned long long", "readonly": true },
        { "name": "domComplete", "type": "unsigned long long", "readonly": true },
        { "name": "domContentLoadedEventEnd", "type": "unsigned long long", "readonly": true },
        { "name": "domContentLoadedEventStart", "type": "unsigned long long", "readonly": true },
        { "name": "domInteractive", "type": "unsigned long long", "readonly": true },
        { "name": "domLoading", "type": "unsigned long long", "readonly": true },
        { "name": "fetchStart", "type": "unsigned long long", "readonly": true },
        { "name": "loadEventEnd", "type": "unsigned long long", "readonly": true },
        { "name": "loadEventStart", "type": "unsigned long long", "readonly": true },
        { "name": "navigationStart", "type": "unsigned long long", "readonly": true },
        { "name": "redirectEnd", "type": "unsigned long long", "readonly": true },
        { "name": "redirectStart", "type": "unsigned long long", "readonly": true },
        { "name": "requestStart", "type": "unsigned long long", "readonly": true },
        { "name": "responseEnd", "type": "unsigned long long", "readonly": true },
        { "name": "responseStart", "type": "unsigned long long", "readonly": true },
        { "name": "secureConnectionStart", "type": "unsigned long long", "readonly": true },
        { "name": "unloadEventEnd", "type": "unsigned long long", "readonly": true },
        { "name": "unloadEventStart", "type": "unsigned long long", "readonly": true }
      ]
    }, {
      "name": "PeriodicWave",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "PeriodicWaveOptions", "optional": true }
        ]
      }]
    }, {
      "name": "Plugin",
      "exposed": ["Window"],
      "operations": [{
        "name": "item", "type": "MimeType", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "namedItem", "type": "MimeType", "nullable": true, "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }],
      "attributes": [
        { "name": "description", "type": "DOMString", "readonly": true },
        { "name": "filename", "type": "DOMString", "readonly": true },
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "name", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "PluginArray",
      "exposed": ["Window"],
      "operations": [{
        "name": "item", "type": "Plugin", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "namedItem", "type": "Plugin", "nullable": true, "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }, {
        "name": "refresh", "type": "void",
        "arguments": [{ "name": "reload", "type": "boolean", "optional": true, "default": "false" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "PointerEvent", "extends": "MouseEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "PointerEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "height", "type": "double", "readonly": true },
        { "name": "isPrimary", "type": "boolean", "readonly": true },
        { "name": "pointerId", "type": "long", "readonly": true },
        { "name": "pointerType", "type": "DOMString", "readonly": true },
        { "name": "pressure", "type": "float", "readonly": true },
        { "name": "tiltX", "type": "long", "readonly": true },
        { "name": "tiltY", "type": "long", "readonly": true },
        { "name": "width", "type": "double", "readonly": true }
      ]
    }, {
      "name": "PopStateEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "PopStateEventInit", "optional": true }
        ]
      }],
      "attributes": [{ "name": "state", "type": "any", "readonly": true }]
    }, {
      "name": "Position", "noInterfaceObject": true,
      "attributes": [
        { "name": "coords", "type": "Coordinates", "readonly": true },
        { "name": "timestamp", "type": "DOMTimeStamp", "readonly": true }
      ]
    }, {
      "name": "PositionError", "noInterfaceObject": true,
      "constants": [
        { "name": "PERMISSION_DENIED", "type": "unsigned short", "value": "1" },
        { "name": "POSITION_UNAVAILABLE", "type": "unsigned short", "value": "2" },
        { "name": "TIMEOUT", "type": "unsigned short", "value": "3" }
      ],
      "attributes": [
        { "name": "code", "type": "unsigned short", "readonly": true },
        { "name": "message", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "ProcessingInstruction", "extends": "CharacterData",
      "exposed": ["Window"],
      "attributes": [{ "name": "target", "type": "DOMString", "readonly": true }],
      "implements": ["LinkStyle"]
    }, {
      "name": "ProgressEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "ProgressEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "DedicatedWorker", "SharedWorker"],
      "attributes": [
        { "name": "lengthComputable", "type": "boolean", "readonly": true },
        { "name": "loaded", "type": "unsigned long long", "readonly": true },
        { "name": "total", "type": "unsigned long long", "readonly": true }
      ]
    }, {
      "name": "PromiseRejectionEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "PromiseRejectionEventInit" }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "promise", "type": "Promise<any>", "readonly": true },
        { "name": "reason", "type": "any", "readonly": true }
      ]
    }, {
      "name": "PushEvent", "extends": "ExtendableEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "PushEventInit", "optional": true }
        ]
      }],
      "exposed": ["ServiceWorker"],
      "attributes": [{ "name": "data", "type": "PushMessageData", "nullable": true, "readonly": true }]
    }, {
      "name": "PushManager",
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "getSubscription", "type": "Promise<PushSubscription?>", "arguments": [] },
        {
          "name": "permissionState", "type": "Promise<PushPermissionState>",
          "arguments": [{ "name": "options", "type": "PushSubscriptionOptionsInit", "optional": true }]
        }, {
          "name": "subscribe", "type": "Promise<PushSubscription>",
          "arguments": [{ "name": "options", "type": "PushSubscriptionOptionsInit", "optional": true }]
        }
      ],
      "attributes": [{ "name": "supportedContentEncodings", "type": "FrozenArray<DOMString>", "readonly": true, "static": true }]
    }, {
      "name": "PushMessageData",
      "exposed": ["ServiceWorker"],
      "operations": [
        { "name": "arrayBuffer", "type": "ArrayBuffer", "arguments": [] },
        { "name": "blob", "type": "Blob", "arguments": [] },
        { "name": "json", "type": "any", "arguments": [] },
        { "name": "text", "type": "USVString", "arguments": [] }
      ]
    }, {
      "name": "PushSubscription",
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "getKey", "type": "ArrayBuffer", "nullable": true,
          "arguments": [{ "name": "name", "type": "PushEncryptionKeyName" }]
        },
        { "name": "toJSON", "type": "PushSubscriptionJSON", "arguments": [] },
        { "name": "unsubscribe", "type": "Promise<boolean>", "arguments": [] }
      ],
      "attributes": [
        { "name": "endpoint", "type": "USVString", "readonly": true },
        { "name": "expirationTime", "type": "DOMTimeStamp", "nullable": true, "readonly": true },
        { "name": "options", "type": "PushSubscriptionOptions", "readonly": true }
      ]
    }, {
      "name": "PushSubscriptionChangeEvent", "extends": "ExtendableEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "PushSubscriptionChangeInit", "optional": true }
        ]
      }],
      "exposed": ["ServiceWorker"],
      "attributes": [
        { "name": "newSubscription", "type": "PushSubscription", "nullable": true, "readonly": true },
        { "name": "oldSubscription", "type": "PushSubscription", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "PushSubscriptionOptions",
      "exposed": ["Window", "Worker"],
      "attributes": [
        { "name": "applicationServerKey", "type": "ArrayBuffer", "nullable": true, "readonly": true },
        { "name": "userVisibleOnly", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "RadioNodeList", "extends": "NodeList",
      "exposed": ["Window"],
      "attributes": [{ "name": "value", "type": "DOMString" }]
    }, {
      "name": "Range",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window"],
      "anonymousOperations": [{ "type": "DOMString", "stringifier": true }],
      "constants": [
        { "name": "END_TO_END", "type": "unsigned short", "value": "2" },
        { "name": "END_TO_START", "type": "unsigned short", "value": "3" },
        { "name": "START_TO_END", "type": "unsigned short", "value": "1" },
        { "name": "START_TO_START", "type": "unsigned short", "value": "0" }
      ],
      "operations": [
        { "name": "cloneContents", "type": "DocumentFragment", "arguments": [] },
        { "name": "cloneRange", "type": "Range", "arguments": [] },
        {
          "name": "collapse", "type": "void",
          "arguments": [{ "name": "toStart", "type": "boolean", "optional": true, "default": "false" }]
        }, {
          "name": "compareBoundaryPoints", "type": "short",
          "arguments": [
            { "name": "how", "type": "unsigned short" },
            { "name": "sourceRange", "type": "Range" }
          ]
        }, {
          "name": "comparePoint", "type": "short",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "offset", "type": "unsigned long" }
          ]
        }, {
          "name": "createContextualFragment", "type": "DocumentFragment",
          "arguments": [{ "name": "fragment", "type": "DOMString" }]
        },
        { "name": "deleteContents", "type": "void", "arguments": [] },
        { "name": "detach", "type": "void", "arguments": [] },
        { "name": "extractContents", "type": "DocumentFragment", "arguments": [] },
        { "name": "getBoundingClientRect", "type": "DOMRect", "arguments": [] },
        { "name": "getClientRects", "type": "sequence<DOMRect>", "arguments": [] },
        {
          "name": "insertNode", "type": "void",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "intersectsNode", "type": "boolean",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "isPointInRange", "type": "boolean",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "offset", "type": "unsigned long" }
          ]
        }, {
          "name": "selectNode", "type": "void",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "selectNodeContents", "type": "void",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "setEnd", "type": "void",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "offset", "type": "unsigned long" }
          ]
        }, {
          "name": "setEndAfter", "type": "void",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "setEndBefore", "type": "void",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "setStart", "type": "void",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "offset", "type": "unsigned long" }
          ]
        }, {
          "name": "setStartAfter", "type": "void",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "setStartBefore", "type": "void",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "surroundContents", "type": "void",
          "arguments": [{ "name": "newParent", "type": "Node" }]
        }
      ],
      "attributes": [
        { "name": "collapsed", "type": "boolean", "readonly": true },
        { "name": "commonAncestorContainer", "type": "Node", "readonly": true },
        { "name": "endContainer", "type": "Node", "readonly": true },
        { "name": "endOffset", "type": "unsigned long", "readonly": true },
        { "name": "startContainer", "type": "Node", "readonly": true },
        { "name": "startOffset", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "ReadableStream",
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "cancel", "type": "Promise<void>", "arguments": [] },
        { "name": "getReader", "type": "ReadableStreamDefaultReader", "arguments": [] }
      ],
      "attributes": [{ "name": "locked", "type": "boolean", "readonly": true }]
    }, {
      "name": "ReadableStreamDefaultReader",
      "constructors": [{
        "arguments": [{ "name": "stream", "type": "ReadableStream" }]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "cancel", "type": "Promise<void>", "arguments": [] },
        { "name": "read", "type": "Promise<any>", "arguments": [] },
        { "name": "releaseLock", "type": "void", "arguments": [] }
      ],
      "attributes": [{ "name": "closed", "type": "boolean", "readonly": true }]
    }, {
      "name": "Request",
      "constructors": [{
        "arguments": [
          { "name": "input", "type": "RequestInfo" },
          { "name": "init", "type": "RequestInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [{ "name": "clone", "type": "Request", "arguments": [] }],
      "attributes": [
        { "name": "cache", "type": "RequestCache", "readonly": true },
        { "name": "credentials", "type": "RequestCredentials", "readonly": true },
        { "name": "destination", "type": "RequestDestination", "readonly": true },
        { "name": "headers", "type": "Headers", "readonly": true },
        { "name": "integrity", "type": "DOMString", "readonly": true },
        { "name": "keepalive", "type": "boolean", "readonly": true },
        { "name": "method", "type": "ByteString", "readonly": true },
        { "name": "mode", "type": "RequestMode", "readonly": true },
        { "name": "redirect", "type": "RequestRedirect", "readonly": true },
        { "name": "referrer", "type": "USVString", "readonly": true },
        { "name": "referrerPolicy", "type": "ReferrerPolicy", "readonly": true },
        { "name": "signal", "type": "AbortSignal", "readonly": true },
        { "name": "url", "type": "USVString", "readonly": true }
      ],
      "implements": ["Body"]
    }, {
      "name": "Response",
      "constructors": [{
        "arguments": [
          { "name": "body", "type": "BodyInit", "nullable": true, "optional": true, "default": "null" },
          { "name": "init", "type": "ResponseInit", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "clone", "type": "Response", "arguments": [] },
        { "name": "error", "type": "Response", "arguments": [], "static": true },
        {
          "name": "redirect", "type": "Response", "static": true,
          "arguments": [
            { "name": "url", "type": "USVString" },
            { "name": "status", "type": "unsigned short", "optional": true, "default": "302" }
          ]
        }
      ],
      "attributes": [
        { "name": "headers", "type": "Headers", "readonly": true },
        { "name": "ok", "type": "boolean", "readonly": true },
        { "name": "redirected", "type": "boolean", "readonly": true },
        { "name": "status", "type": "unsigned short", "readonly": true },
        { "name": "statusText", "type": "ByteString", "readonly": true },
        { "name": "trailer", "type": "Promise<Headers>", "readonly": true },
        { "name": "type", "type": "ResponseType", "readonly": true },
        { "name": "url", "type": "USVString", "readonly": true }
      ],
      "implements": ["Body"]
    }, {
      "name": "RTCCertificate",
      "exposed": ["Window"],
      "operations": [
        { "name": "getFingerprints", "type": "sequence<RTCDtlsFingerprint>", "arguments": [] },
        { "name": "getSupportedAlgorithms", "type": "sequence<AlgorithmIdentifier>", "arguments": [], "static": true }
      ],
      "attributes": [{ "name": "expires", "type": "DOMTimeStamp", "readonly": true }]
    }, {
      "name": "RTCDataChannel", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "send", "type": "void",
          "arguments": [{ "name": "data", "type": "USVString" }]
        }, {
          "name": "send", "type": "void",
          "arguments": [{ "name": "data", "type": "Blob" }]
        }, {
          "name": "send", "type": "void",
          "arguments": [{ "name": "data", "type": "ArrayBuffer" }]
        }, {
          "name": "send", "type": "void",
          "arguments": [{ "name": "data", "type": "ArrayBufferView" }]
        }
      ],
      "attributes": [
        { "name": "binaryType", "type": "DOMString" },
        { "name": "bufferedAmount", "type": "unsigned long", "readonly": true },
        { "name": "bufferedAmountLowThreshold", "type": "unsigned long" },
        { "name": "id", "type": "unsigned short", "nullable": true, "readonly": true },
        { "name": "label", "type": "USVString", "readonly": true },
        { "name": "maxPacketLifeTime", "type": "unsigned short", "nullable": true, "readonly": true },
        { "name": "maxRetransmits", "type": "unsigned short", "nullable": true, "readonly": true },
        { "name": "negotiated", "type": "boolean", "readonly": true },
        { "name": "onbufferedamountlow", "type": "EventHandler", "eventHandler": "bufferedamountlow" },
        { "name": "onclose", "type": "EventHandler", "eventHandler": "close" },
        { "name": "onerror", "type": "EventHandler", "eventHandler": "error" },
        { "name": "onmessage", "type": "EventHandler", "eventHandler": "message" },
        { "name": "onopen", "type": "EventHandler", "eventHandler": "open" },
        { "name": "ordered", "type": "boolean", "readonly": true },
        { "name": "priority", "type": "RTCPriorityType", "readonly": true },
        { "name": "protocol", "type": "USVString", "readonly": true },
        { "name": "readyState", "type": "RTCDataChannelState", "readonly": true }
      ],
      "events": [
        { "name": "open", "type": "Event" },
        { "name": "bufferedamountlow", "type": "Event" },
        { "name": "error", "type": "ErrorEvent" },
        { "name": "close", "type": "Event" },
        { "name": "message", "type": "MessageEvent" }
      ]
    }, {
      "name": "RTCDataChannelEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "RTCDataChannelEventInit" }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [{ "name": "channel", "type": "RTCDataChannel", "readonly": true }]
    }, {
      "name": "RTCDtlsTransport", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [{ "name": "getRemoteCertificates", "type": "sequence<ArrayBuffer>", "arguments": [] }],
      "attributes": [
        { "name": "onerror", "type": "EventHandler" },
        { "name": "onstatechange", "type": "EventHandler", "eventHandler": "statechange" },
        { "name": "state", "type": "RTCDtlsTransportState", "readonly": true },
        { "name": "transport", "type": "RTCIceTransport", "readonly": true }
      ],
      "events": [{ "name": "statechange", "type": "Event" }]
    }, {
      "name": "RTCDTMFSender", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [{
        "name": "insertDTMF", "type": "void",
        "arguments": [
          { "name": "tones", "type": "DOMString" },
          { "name": "duration", "type": "unsigned long", "optional": true, "default": "100" },
          { "name": "interToneGap", "type": "unsigned long", "optional": true, "default": "70" }
        ]
      }],
      "attributes": [
        { "name": "canInsertDTMF", "type": "boolean", "readonly": true },
        { "name": "ontonechange", "type": "EventHandler", "eventHandler": "tonechange" },
        { "name": "toneBuffer", "type": "DOMString", "readonly": true }
      ],
      "events": [{ "name": "tonechange", "type": "RTCDTMFToneChangeEvent" }]
    }, {
      "name": "RTCDTMFToneChangeEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "RTCDTMFToneChangeEventInit" }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [{ "name": "tone", "type": "DOMString", "readonly": true }]
    }, {
      "name": "RTCErrorEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "RTCErrorEventInit" }
        ]
      }],
      "attributes": [{ "name": "error", "type": "RTCError", "nullable": true, "readonly": true }]
    }, {
      "name": "RTCIceCandidate",
      "constructors": [{
        "arguments": [{ "name": "candidateInitDict", "type": "RTCIceCandidateInit", "optional": true }]
      }],
      "exposed": ["Window"],
      "operations": [{ "name": "toJSON", "type": "RTCIceCandidateInit", "arguments": [] }],
      "attributes": [
        { "name": "candidate", "type": "DOMString", "readonly": true },
        { "name": "component", "type": "RTCIceComponent", "nullable": true, "readonly": true },
        { "name": "foundation", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "ip", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "port", "type": "unsigned short", "nullable": true, "readonly": true },
        { "name": "priority", "type": "unsigned long", "nullable": true, "readonly": true },
        { "name": "protocol", "type": "RTCIceProtocol", "nullable": true, "readonly": true },
        { "name": "relatedAddress", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "relatedPort", "type": "unsigned short", "nullable": true, "readonly": true },
        { "name": "sdpMid", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "sdpMLineIndex", "type": "unsigned short", "nullable": true, "readonly": true },
        { "name": "tcpType", "type": "RTCIceTcpCandidateType", "nullable": true, "readonly": true },
        { "name": "type", "type": "RTCIceCandidateType", "nullable": true, "readonly": true },
        { "name": "usernameFragment", "type": "DOMString", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "RTCIceTransport", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [
        { "name": "getLocalCandidates", "type": "sequence<RTCIceCandidate>", "arguments": [] },
        { "name": "getLocalParameters", "type": "RTCIceParameters", "nullable": true, "arguments": [] },
        { "name": "getRemoteCandidates", "type": "sequence<RTCIceCandidate>", "arguments": [] },
        { "name": "getRemoteParameters", "type": "RTCIceParameters", "nullable": true, "arguments": [] },
        { "name": "getSelectedCandidatePair", "type": "RTCIceCandidatePair", "nullable": true, "arguments": [] }
      ],
      "attributes": [
        { "name": "component", "type": "RTCIceComponent", "readonly": true },
        { "name": "gatheringState", "type": "RTCIceGathererState", "readonly": true },
        { "name": "ongatheringstatechange", "type": "EventHandler", "eventHandler": "gatheringstatechange" },
        { "name": "onselectedcandidatepairchange", "type": "EventHandler", "eventHandler": "selectedcandidatepairchange" },
        { "name": "onstatechange", "type": "EventHandler", "eventHandler": "statechange" },
        { "name": "role", "type": "RTCIceRole", "readonly": true },
        { "name": "state", "type": "RTCIceTransportState", "readonly": true }
      ],
      "events": [
        { "name": "statechange", "type": "Event" },
        { "name": "gatheringstatechange", "type": "Event" },
        { "name": "selectedcandidatepairchange", "type": "Event" }
      ]
    }, {
      "name": "RTCIdentityAssertion",
      "constructors": [{
        "arguments": [
          { "name": "idp", "type": "DOMString" },
          { "name": "name", "type": "DOMString" }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [
        { "name": "idp", "type": "DOMString" },
        { "name": "name", "type": "DOMString" }
      ]
    }, {
      "name": "RTCIdentityProviderGlobalScope", "extends": "WorkerGlobalScope", "global": "RTCIdentityProviderGlobalScope",
      "exposed": ["RTCIdentityProviderGlobalScope"],
      "attributes": [{ "name": "rtcIdentityProvider", "type": "RTCIdentityProviderRegistrar", "readonly": true }]
    }, {
      "name": "RTCIdentityProviderRegistrar",
      "exposed": ["RTCIdentityProviderGlobalScope"],
      "operations": [{
        "name": "register", "type": "void",
        "arguments": [{ "name": "idp", "type": "RTCIdentityProvider" }]
      }]
    }, {
      "name": "RTCPeerConnection", "extends": "EventTarget",
      "constructors": [{
        "arguments": [{ "name": "configuration", "type": "RTCConfiguration", "optional": true }]
      }],
      "exposed": ["Window"],
      "operations": [
        {
          "name": "addIceCandidate", "type": "Promise<void>",
          "arguments": [
            { "name": "candidate", "type": "(RTCIceCandidateInit or RTCIceCandidate)" },
            { "name": "successCallback", "type": "VoidFunction" },
            { "name": "failureCallback", "type": "RTCPeerConnectionErrorCallback" }
          ]
        }, {
          "name": "addIceCandidate", "type": "Promise<void>",
          "arguments": [{ "name": "candidate", "type": "(RTCIceCandidateInit or RTCIceCandidate)" }]
        }, {
          "name": "addTrack", "type": "RTCRtpSender",
          "arguments": [
            { "name": "track", "type": "MediaStreamTrack" },
            { "name": "streams", "type": "MediaStream", "variadic": true }
          ]
        }, {
          "name": "addTransceiver", "type": "RTCRtpTransceiver",
          "arguments": [
            { "name": "trackOrKind", "type": "(MediaStreamTrack or DOMString)" },
            { "name": "init", "type": "RTCRtpTransceiverInit", "optional": true }
          ]
        },
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "createAnswer", "type": "Promise<void>",
          "arguments": [
            { "name": "successCallback", "type": "RTCSessionDescriptionCallback" },
            { "name": "failureCallback", "type": "RTCPeerConnectionErrorCallback" }
          ]
        }, {
          "name": "createAnswer", "type": "Promise<RTCSessionDescriptionInit>",
          "arguments": [{ "name": "options", "type": "RTCAnswerOptions", "optional": true }]
        }, {
          "name": "createDataChannel", "type": "RTCDataChannel",
          "arguments": [
            { "name": "label", "type": "USVString" },
            { "name": "dataChannelDict", "type": "RTCDataChannelInit", "optional": true }
          ]
        }, {
          "name": "createOffer", "type": "Promise<void>",
          "arguments": [
            { "name": "successCallback", "type": "RTCSessionDescriptionCallback" },
            { "name": "failureCallback", "type": "RTCPeerConnectionErrorCallback" },
            { "name": "options", "type": "RTCOfferOptions", "optional": true }
          ]
        }, {
          "name": "createOffer", "type": "Promise<RTCSessionDescriptionInit>",
          "arguments": [{ "name": "options", "type": "RTCOfferOptions", "optional": true }]
        }, {
          "name": "generateCertificate", "type": "Promise<RTCCertificate>", "static": true,
          "arguments": [{ "name": "keygenAlgorithm", "type": "AlgorithmIdentifier" }]
        },
        { "name": "getConfiguration", "type": "RTCConfiguration", "arguments": [] },
        { "name": "getDefaultIceServers", "type": "sequence<RTCIceServer>", "arguments": [], "static": true },
        { "name": "getIdentityAssertion", "type": "Promise<DOMString>", "arguments": [] },
        { "name": "getReceivers", "type": "sequence<RTCRtpReceiver>", "arguments": [] },
        { "name": "getSenders", "type": "sequence<RTCRtpSender>", "arguments": [] },
        {
          "name": "getStats", "type": "Promise<RTCStatsReport>",
          "arguments": [{ "name": "selector", "type": "MediaStreamTrack", "nullable": true, "optional": true, "default": "null" }]
        },
        { "name": "getTransceivers", "type": "sequence<RTCRtpTransceiver>", "arguments": [] },
        {
          "name": "removeTrack", "type": "void",
          "arguments": [{ "name": "sender", "type": "RTCRtpSender" }]
        }, {
          "name": "setConfiguration", "type": "void",
          "arguments": [{ "name": "configuration", "type": "RTCConfiguration" }]
        }, {
          "name": "setIdentityProvider", "type": "void",
          "arguments": [
            { "name": "provider", "type": "DOMString" },
            { "name": "options", "type": "RTCIdentityProviderOptions", "optional": true }
          ]
        }, {
          "name": "setLocalDescription", "type": "Promise<void>",
          "arguments": [{ "name": "description", "type": "RTCSessionDescriptionInit" }]
        }, {
          "name": "setLocalDescription", "type": "Promise<void>",
          "arguments": [
            { "name": "description", "type": "RTCSessionDescriptionInit" },
            { "name": "successCallback", "type": "VoidFunction" },
            { "name": "failureCallback", "type": "RTCPeerConnectionErrorCallback" }
          ]
        }, {
          "name": "setRemoteDescription", "type": "Promise<void>",
          "arguments": [{ "name": "description", "type": "RTCSessionDescriptionInit" }]
        }, {
          "name": "setRemoteDescription", "type": "Promise<void>",
          "arguments": [
            { "name": "description", "type": "RTCSessionDescriptionInit" },
            { "name": "successCallback", "type": "VoidFunction" },
            { "name": "failureCallback", "type": "RTCPeerConnectionErrorCallback" }
          ]
        }
      ],
      "attributes": [
        { "name": "canTrickleIceCandidates", "type": "boolean", "nullable": true, "readonly": true },
        { "name": "connectionState", "type": "RTCPeerConnectionState", "readonly": true },
        { "name": "currentLocalDescription", "type": "RTCSessionDescription", "nullable": true, "readonly": true },
        { "name": "currentRemoteDescription", "type": "RTCSessionDescription", "nullable": true, "readonly": true },
        { "name": "iceConnectionState", "type": "RTCIceConnectionState", "readonly": true },
        { "name": "iceGatheringState", "type": "RTCIceGatheringState", "readonly": true },
        { "name": "idpErrorInfo", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "idpLoginUrl", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "localDescription", "type": "RTCSessionDescription", "nullable": true, "readonly": true },
        { "name": "onconnectionstatechange", "type": "EventHandler", "eventHandler": "connectionstatechange" },
        { "name": "ondatachannel", "type": "EventHandler", "eventHandler": "datachannel" },
        { "name": "onicecandidate", "type": "EventHandler", "eventHandler": "icecandidate" },
        { "name": "onicecandidateerror", "type": "EventHandler", "eventHandler": "icecandidateerror" },
        { "name": "oniceconnectionstatechange", "type": "EventHandler", "eventHandler": "iceconnectionstatechange" },
        { "name": "onicegatheringstatechange", "type": "EventHandler", "eventHandler": "icegatheringstatechange" },
        { "name": "onnegotiationneeded", "type": "EventHandler", "eventHandler": "negotiationneeded" },
        { "name": "onsignalingstatechange", "type": "EventHandler", "eventHandler": "signalingstatechange" },
        { "name": "ontrack", "type": "EventHandler", "eventHandler": "track" },
        { "name": "peerIdentity", "type": "Promise<RTCIdentityAssertion>", "readonly": true },
        { "name": "pendingLocalDescription", "type": "RTCSessionDescription", "nullable": true, "readonly": true },
        { "name": "pendingRemoteDescription", "type": "RTCSessionDescription", "nullable": true, "readonly": true },
        { "name": "remoteDescription", "type": "RTCSessionDescription", "nullable": true, "readonly": true },
        { "name": "sctp", "type": "RTCSctpTransport", "nullable": true, "readonly": true },
        { "name": "signalingState", "type": "RTCSignalingState", "readonly": true }
      ],
      "events": [
        { "name": "negotiationneeded", "type": "Event" },
        { "name": "icecandidate", "type": "RTCPeerConnectionIceEvent" },
        { "name": "icecandidateerror", "type": "RTCPeerConnectionIceErrorEvent" },
        { "name": "signalingstatechange", "type": "Event" },
        { "name": "iceconnectionstatechange", "type": "Event" },
        { "name": "icegatheringstatechange", "type": "Event" },
        { "name": "connectionstatechange", "type": "Event" },
        { "name": "track", "type": "RTCTrackEvent" },
        { "name": "datachannel", "type": "RTCDataChannelEvent" }
      ]
    }, {
      "name": "RTCPeerConnectionIceErrorEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "RTCPeerConnectionIceErrorEventInit" }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [
        { "name": "errorCode", "type": "unsigned short", "readonly": true },
        { "name": "errorText", "type": "USVString", "readonly": true },
        { "name": "hostCandidate", "type": "DOMString", "readonly": true },
        { "name": "url", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "RTCPeerConnectionIceEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "RTCPeerConnectionIceEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [
        { "name": "candidate", "type": "RTCIceCandidate", "nullable": true, "readonly": true },
        { "name": "url", "type": "DOMString", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "RTCRtpContributingSource",
      "exposed": ["Window"],
      "attributes": [
        { "name": "audioLevel", "type": "byte", "nullable": true, "readonly": true },
        { "name": "source", "type": "unsigned long", "readonly": true },
        { "name": "timestamp", "type": "DOMHighResTimeStamp", "readonly": true }
      ]
    }, {
      "name": "RTCRtpReceiver",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "getCapabilities", "type": "RTCRtpCapabilities", "static": true,
          "arguments": [{ "name": "kind", "type": "DOMString" }]
        },
        { "name": "getContributingSources", "type": "sequence<RTCRtpContributingSource>", "arguments": [] },
        { "name": "getParameters", "type": "RTCRtpParameters", "arguments": [] },
        { "name": "getStats", "type": "Promise<RTCStatsReport>", "arguments": [] },
        { "name": "getSynchronizationSources", "type": "sequence<RTCRtpSynchronizationSource>", "arguments": [] }
      ],
      "attributes": [
        { "name": "rtcpTransport", "type": "RTCDtlsTransport", "nullable": true, "readonly": true },
        { "name": "track", "type": "MediaStreamTrack", "readonly": true },
        { "name": "transport", "type": "RTCDtlsTransport", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "RTCRtpSender",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "getCapabilities", "type": "RTCRtpCapabilities", "static": true,
          "arguments": [{ "name": "kind", "type": "DOMString" }]
        },
        { "name": "getParameters", "type": "RTCRtpParameters", "arguments": [] },
        { "name": "getStats", "type": "Promise<RTCStatsReport>", "arguments": [] },
        {
          "name": "replaceTrack", "type": "Promise<void>",
          "arguments": [{ "name": "withTrack", "type": "MediaStreamTrack", "nullable": true }]
        }, {
          "name": "setParameters", "type": "Promise<void>",
          "arguments": [{ "name": "parameters", "type": "RTCRtpParameters", "optional": true }]
        }
      ],
      "attributes": [
        { "name": "dtmf", "type": "RTCDTMFSender", "nullable": true, "readonly": true },
        { "name": "rtcpTransport", "type": "RTCDtlsTransport", "nullable": true, "readonly": true },
        { "name": "track", "type": "MediaStreamTrack", "nullable": true, "readonly": true },
        { "name": "transport", "type": "RTCDtlsTransport", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "RTCRtpSynchronizationSource",
      "exposed": ["Window"],
      "attributes": [
        { "name": "audioLevel", "type": "byte", "readonly": true },
        { "name": "source", "type": "unsigned long", "readonly": true },
        { "name": "timestamp", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "voiceActivityFlag", "type": "boolean", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "RTCRtpTransceiver",
      "exposed": ["Window"],
      "operations": [
        {
          "name": "setCodecPreferences", "type": "void",
          "arguments": [{ "name": "codecs", "type": "sequence<RTCRtpCodecCapability>" }]
        }, {
          "name": "setDirection", "type": "void",
          "arguments": [{ "name": "direction", "type": "RTCRtpTransceiverDirection" }]
        },
        { "name": "stop", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "currentDirection", "type": "RTCRtpTransceiverDirection", "nullable": true, "readonly": true },
        { "name": "direction", "type": "RTCRtpTransceiverDirection", "readonly": true },
        { "name": "mid", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "receiver", "type": "RTCRtpReceiver", "readonly": true },
        { "name": "sender", "type": "RTCRtpSender", "readonly": true },
        { "name": "stopped", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "RTCSctpTransport",
      "exposed": ["Window"],
      "attributes": [
        { "name": "maxMessageSize", "type": "unsigned long", "readonly": true },
        { "name": "onstatechange", "type": "EventHandler" },
        { "name": "state", "type": "RTCSctpTransportState", "readonly": true },
        { "name": "transport", "type": "RTCDtlsTransport", "readonly": true }
      ]
    }, {
      "name": "RTCSessionDescription",
      "constructors": [{
        "arguments": [{ "name": "descriptionInitDict", "type": "RTCSessionDescriptionInit" }]
      }],
      "exposed": ["Window"],
      "operations": [{ "name": "toJSON", "type": "object", "arguments": [] }],
      "attributes": [
        { "name": "sdp", "type": "DOMString", "readonly": true },
        { "name": "type", "type": "RTCSdpType", "readonly": true }
      ]
    }, {
      "name": "RTCStatsReport",
      "exposed": ["Window"]
    }, {
      "name": "RTCTrackEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "RTCTrackEventInit" }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [
        { "name": "receiver", "type": "RTCRtpReceiver", "readonly": true },
        { "name": "streams", "type": "FrozenArray<MediaStream>", "readonly": true },
        { "name": "track", "type": "MediaStreamTrack", "readonly": true },
        { "name": "transceiver", "type": "RTCRtpTransceiver", "readonly": true }
      ]
    }, {
      "name": "Screen",
      "attributes": [
        { "name": "availHeight", "type": "long", "readonly": true },
        { "name": "availWidth", "type": "long", "readonly": true },
        { "name": "colorDepth", "type": "unsigned long", "readonly": true },
        { "name": "height", "type": "long", "readonly": true },
        { "name": "pixelDepth", "type": "unsigned long", "readonly": true },
        { "name": "width", "type": "long", "readonly": true }
      ]
    }, {
      "name": "ScriptProcessorNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "attributes": [
        { "name": "bufferSize", "type": "long", "readonly": true },
        { "name": "onaudioprocess", "type": "EventHandler" }
      ]
    }, {
      "name": "Selection",
      "anonymousOperations": [{ "type": "DOMString", "arguments": [], "stringifier": true }],
      "operations": [
        {
          "name": "addRange", "type": "void",
          "arguments": [{ "name": "range", "type": "Range" }]
        }, {
          "name": "collapse", "type": "void",
          "arguments": [
            { "name": "node", "type": "Node", "nullable": true },
            { "name": "offset", "type": "unsigned long", "optional": true, "default": "0" }
          ]
        },
        { "name": "collapseToEnd", "type": "void", "arguments": [] },
        { "name": "collapseToStart", "type": "void", "arguments": [] },
        {
          "name": "containsNode", "type": "boolean",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "allowPartialContainment", "type": "boolean", "optional": true, "default": "false" }
          ]
        },
        { "name": "deleteFromDocument", "type": "void", "arguments": [] },
        { "name": "empty", "type": "void", "arguments": [] },
        {
          "name": "extend", "type": "void",
          "arguments": [
            { "name": "node", "type": "Node" },
            { "name": "offset", "type": "unsigned long", "optional": true, "default": "0" }
          ]
        }, {
          "name": "getRangeAt", "type": "Range",
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        },
        { "name": "removeAllRanges", "type": "void", "arguments": [] },
        {
          "name": "removeRange", "type": "void",
          "arguments": [{ "name": "range", "type": "Range" }]
        }, {
          "name": "selectAllChildren", "type": "void",
          "arguments": [{ "name": "node", "type": "Node" }]
        }, {
          "name": "setBaseAndExtent", "type": "void",
          "arguments": [
            { "name": "anchorNode", "type": "Node" },
            { "name": "anchorOffset", "type": "unsigned long" },
            { "name": "focusNode", "type": "Node" },
            { "name": "focusOffset", "type": "unsigned long" }
          ]
        }, {
          "name": "setPosition", "type": "void",
          "arguments": [
            { "name": "node", "type": "Node", "nullable": true },
            { "name": "offset", "type": "unsigned long", "optional": true, "default": "0" }
          ]
        }
      ],
      "attributes": [
        { "name": "anchorNode", "type": "Node", "nullable": true, "readonly": true },
        { "name": "anchorOffset", "type": "unsigned long", "readonly": true },
        { "name": "focusNode", "type": "Node", "nullable": true, "readonly": true },
        { "name": "focusOffset", "type": "unsigned long", "readonly": true },
        { "name": "isCollapsed", "type": "boolean", "readonly": true },
        { "name": "rangeCount", "type": "unsigned long", "readonly": true },
        { "name": "type", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "ServiceWorker", "extends": "EventTarget",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "postMessage", "type": "void",
        "arguments": [
          { "name": "message", "type": "any" },
          { "name": "transfer", "type": "sequence<object>", "optional": true, "default": "[]" }
        ]
      }],
      "attributes": [
        { "name": "onstatechange", "type": "EventHandler" },
        { "name": "scriptURL", "type": "USVString", "readonly": true },
        { "name": "state", "type": "ServiceWorkerState", "readonly": true }
      ],
      "implements": ["AbstractWorker"]
    }, {
      "name": "ServiceWorkerContainer", "extends": "EventTarget",
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "getRegistration", "type": "Promise<any>",
          "arguments": [{ "name": "clientURL", "type": "USVString", "optional": true, "default": "\"\"" }]
        },
        { "name": "getRegistrations", "type": "Promise<sequence<ServiceWorkerRegistration>>", "arguments": [] },
        {
          "name": "register", "type": "Promise<ServiceWorkerRegistration>",
          "arguments": [
            { "name": "scriptURL", "type": "USVString" },
            { "name": "options", "type": "RegistrationOptions", "optional": true }
          ]
        },
        { "name": "startMessages", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "controller", "type": "ServiceWorker", "nullable": true, "readonly": true },
        { "name": "oncontrollerchange", "type": "EventHandler" },
        { "name": "onmessage", "type": "EventHandler" },
        { "name": "onmessageerror", "type": "EventHandler" },
        { "name": "ready", "type": "Promise<ServiceWorkerRegistration>", "readonly": true }
      ]
    }, {
      "name": "ServiceWorkerGlobalScope", "extends": "WorkerGlobalScope", "global": "Worker ServiceWorker",
      "exposed": ["ServiceWorker"],
      "operations": [{ "name": "skipWaiting", "type": "Promise<void>", "arguments": [] }],
      "attributes": [
        { "name": "clients", "type": "Clients", "readonly": true },
        { "name": "onactivate", "type": "EventHandler", "eventHandler": "activate" },
        { "name": "onfetch", "type": "EventHandler", "eventHandler": "fetch" },
        { "name": "oninstall", "type": "EventHandler", "eventHandler": "install" },
        { "name": "onmessage", "type": "EventHandler", "eventHandler": "message" },
        { "name": "onmessageerror", "type": "EventHandler" },
        { "name": "onnotificationclick", "type": "EventHandler", "eventHandler": "notificationclick" },
        { "name": "onnotificationclose", "type": "EventHandler", "eventHandler": "notificationclose" },
        {
          "name": "onpush", "type": "EventHandler", "eventHandler": "push",
          "exposed": ["ServiceWorker"]
        }, {
          "name": "onpushsubscriptionchange", "type": "EventHandler", "eventHandler": "pushsubscriptionchange",
          "exposed": ["ServiceWorker"]
        },
        { "name": "onsync", "type": "EventHandler", "eventHandler": "sync" },
        { "name": "registration", "type": "ServiceWorkerRegistration", "readonly": true }
      ],
      "events": [
        { "name": "install", "type": "InstallEvent" },
        { "name": "activate", "type": "ExtendableEvent" },
        { "name": "fetch", "type": "FetchEvent" },
        { "name": "message", "type": "ExtendableMessageEvent" },
        { "name": "notificationclick", "type": "NotificationEvent" },
        { "name": "notificationclose", "type": "NotificationEvent" },
        {
          "name": "push", "type": "PushEvent",
          "exposed": ["ServiceWorker"]
        }, {
          "name": "pushsubscriptionchange", "type": "PushSubscriptionChangeEvent",
          "exposed": ["ServiceWorker"]
        },
        { "name": "sync", "type": "SyncEvent" }
      ]
    }, {
      "name": "ServiceWorkerRegistration", "extends": "EventTarget",
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "getNotifications", "type": "Promise<sequence<Notification>>",
          "arguments": [{ "name": "filter", "type": "GetNotificationOptions", "optional": true }]
        }, {
          "name": "showNotification", "type": "Promise<void>",
          "arguments": [
            { "name": "title", "type": "DOMString" },
            { "name": "options", "type": "NotificationOptions", "optional": true }
          ]
        },
        { "name": "unregister", "type": "Promise<boolean>", "arguments": [] },
        { "name": "update", "type": "Promise<void>", "arguments": [] }
      ],
      "attributes": [
        { "name": "active", "type": "ServiceWorker", "nullable": true, "readonly": true },
        { "name": "installing", "type": "ServiceWorker", "nullable": true, "readonly": true },
        { "name": "navigationPreload", "type": "NavigationPreloadManager", "readonly": true },
        { "name": "onupdatefound", "type": "EventHandler" },
        { "name": "pushManager", "type": "PushManager", "readonly": true },
        { "name": "scope", "type": "USVString", "readonly": true },
        { "name": "sync", "type": "SyncManager", "readonly": true },
        { "name": "updateViaCache", "type": "ServiceWorkerUpdateViaCache", "readonly": true },
        { "name": "waiting", "type": "ServiceWorker", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "ShadowAnimation", "extends": "Animation",
      "constructors": [{
        "arguments": [
          { "name": "source", "type": "Animation" },
          { "name": "newTarget", "type": "Animatable" }
        ]
      }],
      "attributes": [{ "name": "sourceAnimation", "type": "Animation", "readonly": true }]
    }, {
      "name": "ShadowRoot", "extends": "DocumentFragment",
      "exposed": ["Window"],
      "attributes": [
        { "name": "host", "type": "Element", "readonly": true },
        { "name": "mode", "type": "ShadowRootMode", "readonly": true }
      ],
      "implements": ["DocumentOrShadowRoot"]
    }, {
      "name": "SharedWorker", "extends": "EventTarget",
      "constructors": [{
        "arguments": [
          { "name": "scriptURL", "type": "USVString" },
          { "name": "options", "type": "(DOMString or WorkerOptions)", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "attributes": [{ "name": "port", "type": "MessagePort", "readonly": true }],
      "implements": ["AbstractWorker"]
    }, {
      "name": "SharedWorkerGlobalScope", "extends": "WorkerGlobalScope", "global": "Worker SharedWorker",
      "exposed": ["SharedWorker"],
      "operations": [{ "name": "close", "type": "void", "arguments": [] }],
      "attributes": [
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "onconnect", "type": "EventHandler", "eventHandler": "connect" }
      ],
      "events": [{ "name": "connect", "type": "MessageEvent" }]
    }, {
      "name": "Slotable", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [{ "name": "assignedSlot", "type": "HTMLSlotElement", "nullable": true, "readonly": true }]
    }, {
      "name": "SourceBuffer", "extends": "EventTarget",
      "operations": [
        { "name": "abort", "type": "void", "arguments": [] },
        {
          "name": "appendBuffer", "type": "void",
          "arguments": [{ "name": "data", "type": "BufferSource" }]
        }, {
          "name": "remove", "type": "void",
          "arguments": [
            { "name": "start", "type": "double" },
            { "name": "end", "type": "unrestricted double" }
          ]
        }
      ],
      "attributes": [
        { "name": "appendWindowEnd", "type": "unrestricted double" },
        { "name": "appendWindowStart", "type": "double" },
        { "name": "audioTracks", "type": "AudioTrackList", "readonly": true },
        { "name": "buffered", "type": "TimeRanges", "readonly": true },
        { "name": "mode", "type": "AppendMode" },
        { "name": "onabort", "type": "EventHandler", "eventHandler": "abort" },
        { "name": "onerror", "type": "EventHandler", "eventHandler": "error" },
        { "name": "onupdate", "type": "EventHandler", "eventHandler": "update" },
        { "name": "onupdateend", "type": "EventHandler", "eventHandler": "updateend" },
        { "name": "onupdatestart", "type": "EventHandler", "eventHandler": "updatestart" },
        { "name": "textTracks", "type": "TextTrackList", "readonly": true },
        { "name": "timestampOffset", "type": "double" },
        { "name": "updating", "type": "boolean", "readonly": true },
        { "name": "videoTracks", "type": "VideoTrackList", "readonly": true }
      ],
      "events": [
        { "name": "updatestart", "type": "Event" },
        { "name": "update", "type": "Event" },
        { "name": "updateend", "type": "Event" },
        { "name": "error", "type": "Event" },
        { "name": "abort", "type": "Event" }
      ]
    }, {
      "name": "SourceBufferList", "extends": "EventTarget",
      "anonymousOperations": [{
        "type": "SourceBuffer", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "onaddsourcebuffer", "type": "EventHandler", "eventHandler": "addsourcebuffer" },
        { "name": "onremovesourcebuffer", "type": "EventHandler", "eventHandler": "removesourcebuffer" }
      ],
      "events": [
        { "name": "addsourcebuffer", "type": "Event" },
        { "name": "removesourcebuffer", "type": "Event" }
      ]
    }, {
      "name": "SpeechGrammar",
      "constructors": [{ "arguments": [] }],
      "attributes": [
        { "name": "src", "type": "DOMString" },
        { "name": "weight", "type": "float" }
      ]
    }, {
      "name": "SpeechGrammarList",
      "constructors": [{ "arguments": [] }],
      "operations": [{
        "name": "addFromString", "type": "void",
        "arguments": [
          { "name": "string", "type": "DOMString" },
          { "name": "weight", "type": "float", "optional": true }
        ]
      }, {
        "name": "addFromURI", "type": "void",
        "arguments": [
          { "name": "src", "type": "DOMString" },
          { "name": "weight", "type": "float", "optional": true }
        ]
      }, {
        "name": "item", "type": "SpeechGrammar", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "SpeechRecognition", "extends": "EventTarget",
      "constructors": [{ "arguments": [] }],
      "operations": [
        { "name": "abort", "type": "void", "arguments": [] },
        { "name": "start", "type": "void", "arguments": [] },
        { "name": "stop", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "continuous", "type": "boolean" },
        { "name": "grammars", "type": "SpeechGrammarList" },
        { "name": "interimResults", "type": "boolean" },
        { "name": "lang", "type": "DOMString" },
        { "name": "maxAlternatives", "type": "unsigned long" },
        { "name": "onaudioend", "type": "EventHandler", "eventHandler": "audioend" },
        { "name": "onaudiostart", "type": "EventHandler", "eventHandler": "audiostart" },
        { "name": "onend", "type": "EventHandler", "eventHandler": "end" },
        { "name": "onerror", "type": "EventHandler", "eventHandler": "error" },
        { "name": "onnomatch", "type": "EventHandler", "eventHandler": "nomatch" },
        { "name": "onresult", "type": "EventHandler", "eventHandler": "result" },
        { "name": "onsoundend", "type": "EventHandler", "eventHandler": "soundend" },
        { "name": "onsoundstart", "type": "EventHandler", "eventHandler": "soundstart" },
        { "name": "onspeechend", "type": "EventHandler", "eventHandler": "speechend" },
        { "name": "onspeechstart", "type": "EventHandler", "eventHandler": "speechstart" },
        { "name": "onstart", "type": "EventHandler", "eventHandler": "start" },
        { "name": "serviceURI", "type": "DOMString" }
      ],
      "events": [
        { "name": "audiostart", "type": "Event" },
        { "name": "soundstart", "type": "Event" },
        { "name": "speechstart", "type": "Event" },
        { "name": "speechend", "type": "Event" },
        { "name": "soundend", "type": "Event" },
        { "name": "audioend", "type": "Event" },
        { "name": "result", "type": "SpeechRecognitionEvent" },
        { "name": "nomatch", "type": "SpeechRecognitionEvent" },
        { "name": "error", "type": "SpeechRecognitionError" },
        { "name": "start", "type": "Event" },
        { "name": "end", "type": "Event" }
      ]
    }, {
      "name": "SpeechRecognitionAlternative",
      "attributes": [
        { "name": "confidence", "type": "float", "readonly": true },
        { "name": "transcript", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "SpeechRecognitionError", "extends": "Event",
      "attributes": [
        { "name": "error", "type": "SpeechRecognitionErrorCode", "readonly": true },
        { "name": "message", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "SpeechRecognitionEvent", "extends": "Event",
      "attributes": [
        { "name": "emma", "type": "Document", "readonly": true },
        { "name": "interpretation", "type": "any", "readonly": true },
        { "name": "resultIndex", "type": "unsigned long", "readonly": true },
        { "name": "results", "type": "SpeechRecognitionResultList", "readonly": true }
      ]
    }, {
      "name": "SpeechRecognitionResult",
      "operations": [{
        "name": "item", "type": "SpeechRecognitionAlternative", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [
        { "name": "isFinal", "type": "boolean", "readonly": true },
        { "name": "length", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "SpeechRecognitionResultList",
      "operations": [{
        "name": "item", "type": "SpeechRecognitionResult", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "SpeechSynthesis", "extends": "EventTarget",
      "operations": [
        { "name": "cancel", "type": "void", "arguments": [] },
        { "name": "getVoices", "type": "sequence<SpeechSynthesisVoice>", "arguments": [] },
        { "name": "pause", "type": "void", "arguments": [] },
        { "name": "resume", "type": "void", "arguments": [] },
        {
          "name": "speak", "type": "void",
          "arguments": [{ "name": "utterance", "type": "SpeechSynthesisUtterance" }]
        }
      ],
      "attributes": [
        { "name": "onvoiceschanged", "type": "EventHandler" },
        { "name": "paused", "type": "boolean", "readonly": true },
        { "name": "pending", "type": "boolean", "readonly": true },
        { "name": "speaking", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "SpeechSynthesisErrorEvent", "extends": "SpeechSynthesisEvent",
      "attributes": [{ "name": "error", "type": "SpeechSynthesisErrorCode", "readonly": true }]
    }, {
      "name": "SpeechSynthesisEvent", "extends": "Event",
      "attributes": [
        { "name": "charIndex", "type": "unsigned long", "readonly": true },
        { "name": "elapsedTime", "type": "float", "readonly": true },
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "utterance", "type": "SpeechSynthesisUtterance", "readonly": true }
      ]
    }, {
      "name": "SpeechSynthesisGetter", "noInterfaceObject": true,
      "attributes": [{ "name": "speechSynthesis", "type": "SpeechSynthesis", "readonly": true }]
    }, {
      "name": "SpeechSynthesisUtterance", "extends": "EventTarget",
      "constructors": [
        { "arguments": [] },
        {
          "arguments": [{ "name": "text", "type": "DOMString" }]
        }
      ],
      "attributes": [
        { "name": "lang", "type": "DOMString" },
        { "name": "onboundary", "type": "EventHandler" },
        { "name": "onend", "type": "EventHandler" },
        { "name": "onerror", "type": "EventHandler" },
        { "name": "onmark", "type": "EventHandler" },
        { "name": "onpause", "type": "EventHandler" },
        { "name": "onresume", "type": "EventHandler" },
        { "name": "onstart", "type": "EventHandler" },
        { "name": "pitch", "type": "float" },
        { "name": "rate", "type": "float" },
        { "name": "text", "type": "DOMString" },
        { "name": "voice", "type": "SpeechSynthesisVoice" },
        { "name": "volume", "type": "float" }
      ]
    }, {
      "name": "SpeechSynthesisVoice",
      "attributes": [
        { "name": "default", "type": "boolean", "readonly": true },
        { "name": "lang", "type": "DOMString", "readonly": true },
        { "name": "localService", "type": "boolean", "readonly": true },
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "voiceURI", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "StereoPannerNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "StereoPannerOptions", "optional": true }
        ]
      }],
      "attributes": [{ "name": "pan", "type": "AudioParam", "readonly": true }]
    }, {
      "name": "Storage",
      "exposed": ["Window"],
      "operations": [
        { "name": "clear", "type": "void", "arguments": [] },
        {
          "name": "getItem", "type": "DOMString", "nullable": true, "getter": true,
          "arguments": [{ "name": "key", "type": "DOMString" }]
        }, {
          "name": "key", "type": "DOMString", "nullable": true,
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "removeItem", "type": "void", "deleter": true,
          "arguments": [{ "name": "key", "type": "DOMString" }]
        }, {
          "name": "setItem", "type": "void", "setter": true,
          "arguments": [
            { "name": "key", "type": "DOMString" },
            { "name": "value", "type": "DOMString" }
          ]
        }
      ],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "StorageEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "StorageEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "key", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "newValue", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "oldValue", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "storageArea", "type": "Storage", "nullable": true, "readonly": true },
        { "name": "url", "type": "USVString", "readonly": true }
      ]
    }, {
      "name": "StyleSheet",
      "exposed": ["Window"],
      "attributes": [
        { "name": "disabled", "type": "boolean" },
        { "name": "href", "type": "USVString", "nullable": true, "readonly": true },
        { "name": "media", "type": "MediaList", "readonly": true },
        { "name": "ownerNode", "type": "(Element or ProcessingInstruction)", "nullable": true, "readonly": true },
        { "name": "parentStyleSheet", "type": "StyleSheet", "nullable": true, "readonly": true },
        { "name": "title", "type": "DOMString", "nullable": true, "readonly": true },
        { "name": "type", "type": "CSSOMString", "readonly": true }
      ]
    }, {
      "name": "StyleSheetList",
      "exposed": ["Window"],
      "operations": [{
        "name": "item", "type": "StyleSheet", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "SubtleCrypto",
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "decrypt", "type": "Promise<any>",
        "arguments": [
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "key", "type": "CryptoKey" },
          { "name": "data", "type": "BufferSource" }
        ]
      }, {
        "name": "deriveBits", "type": "Promise<ArrayBuffer>",
        "arguments": [
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "baseKey", "type": "CryptoKey" },
          { "name": "length", "type": "unsigned long" }
        ]
      }, {
        "name": "deriveKey", "type": "Promise<any>",
        "arguments": [
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "baseKey", "type": "CryptoKey" },
          { "name": "derivedKeyType", "type": "AlgorithmIdentifier" },
          { "name": "extractable", "type": "boolean" },
          { "name": "keyUsages", "type": "sequence<KeyUsage>" }
        ]
      }, {
        "name": "digest", "type": "Promise<any>",
        "arguments": [
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "data", "type": "BufferSource" }
        ]
      }, {
        "name": "encrypt", "type": "Promise<any>",
        "arguments": [
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "key", "type": "CryptoKey" },
          { "name": "data", "type": "BufferSource" }
        ]
      }, {
        "name": "exportKey", "type": "Promise<any>",
        "arguments": [
          { "name": "format", "type": "KeyFormat" },
          { "name": "key", "type": "CryptoKey" }
        ]
      }, {
        "name": "generateKey", "type": "Promise<any>",
        "arguments": [
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "extractable", "type": "boolean" },
          { "name": "keyUsages", "type": "sequence<KeyUsage>" }
        ]
      }, {
        "name": "importKey", "type": "Promise<CryptoKey>",
        "arguments": [
          { "name": "format", "type": "KeyFormat" },
          { "name": "keyData", "type": "(BufferSource or JsonWebKey)" },
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "extractable", "type": "boolean" },
          { "name": "keyUsages", "type": "sequence<KeyUsage>" }
        ]
      }, {
        "name": "sign", "type": "Promise<any>",
        "arguments": [
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "key", "type": "CryptoKey" },
          { "name": "data", "type": "BufferSource" }
        ]
      }, {
        "name": "unwrapKey", "type": "Promise<CryptoKey>",
        "arguments": [
          { "name": "format", "type": "KeyFormat" },
          { "name": "wrappedKey", "type": "BufferSource" },
          { "name": "unwrappingKey", "type": "CryptoKey" },
          { "name": "unwrapAlgorithm", "type": "AlgorithmIdentifier" },
          { "name": "unwrappedKeyAlgorithm", "type": "AlgorithmIdentifier" },
          { "name": "extractable", "type": "boolean" },
          { "name": "keyUsages", "type": "sequence<KeyUsage>" }
        ]
      }, {
        "name": "verify", "type": "Promise<any>",
        "arguments": [
          { "name": "algorithm", "type": "AlgorithmIdentifier" },
          { "name": "key", "type": "CryptoKey" },
          { "name": "signature", "type": "BufferSource" },
          { "name": "data", "type": "BufferSource" }
        ]
      }, {
        "name": "wrapKey", "type": "Promise<any>",
        "arguments": [
          { "name": "format", "type": "KeyFormat" },
          { "name": "key", "type": "CryptoKey" },
          { "name": "wrappingKey", "type": "CryptoKey" },
          { "name": "wrapAlgorithm", "type": "AlgorithmIdentifier" }
        ]
      }]
    }, {
      "name": "SVGAElement", "extends": "SVGGraphicsElement",
      "attributes": [
        { "name": "download", "type": "SVGAnimatedString", "readonly": true },
        { "name": "hreflang", "type": "SVGAnimatedString", "readonly": true },
        { "name": "rel", "type": "SVGAnimatedString", "readonly": true },
        { "name": "relList", "type": "SVGAnimatedString", "readonly": true },
        { "name": "target", "type": "SVGAnimatedString", "readonly": true },
        { "name": "type", "type": "SVGAnimatedString", "readonly": true }
      ],
      "implements": ["SVGURIReference", "HTMLHyperlinkElementUtils"]
    }, {
      "name": "SVGAngle",
      "constants": [
        { "name": "SVG_ANGLETYPE_DEG", "type": "unsigned short", "value": "2" },
        { "name": "SVG_ANGLETYPE_GRAD", "type": "unsigned short", "value": "4" },
        { "name": "SVG_ANGLETYPE_RAD", "type": "unsigned short", "value": "3" },
        { "name": "SVG_ANGLETYPE_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_ANGLETYPE_UNSPECIFIED", "type": "unsigned short", "value": "1" }
      ],
      "operations": [{
        "name": "convertToSpecifiedUnits", "type": "void",
        "arguments": [{ "name": "unitType", "type": "unsigned short" }]
      }, {
        "name": "newValueSpecifiedUnits", "type": "void",
        "arguments": [
          { "name": "unitType", "type": "unsigned short" },
          { "name": "valueInSpecifiedUnits", "type": "float" }
        ]
      }],
      "attributes": [
        { "name": "unitType", "type": "unsigned short", "readonly": true },
        { "name": "value", "type": "float" },
        { "name": "valueAsString", "type": "DOMString" },
        { "name": "valueInSpecifiedUnits", "type": "float" }
      ]
    }, {
      "name": "SVGAnimatedAngle",
      "attributes": [
        { "name": "animVal", "type": "SVGAngle", "readonly": true },
        { "name": "baseVal", "type": "SVGAngle", "readonly": true }
      ]
    }, {
      "name": "SVGAnimatedBoolean",
      "attributes": [
        { "name": "animVal", "type": "boolean", "readonly": true },
        { "name": "baseVal", "type": "boolean" }
      ]
    }, {
      "name": "SVGAnimatedEnumeration",
      "attributes": [
        { "name": "animVal", "type": "unsigned short", "readonly": true },
        { "name": "baseVal", "type": "unsigned short" }
      ]
    }, {
      "name": "SVGAnimatedInteger",
      "attributes": [
        { "name": "animVal", "type": "long", "readonly": true },
        { "name": "baseVal", "type": "long" }
      ]
    }, {
      "name": "SVGAnimatedLength",
      "attributes": [
        { "name": "animVal", "type": "SVGLength", "readonly": true },
        { "name": "baseVal", "type": "SVGLength", "readonly": true }
      ]
    }, {
      "name": "SVGAnimatedLengthList",
      "attributes": [
        { "name": "animVal", "type": "SVGLengthList", "readonly": true },
        { "name": "baseVal", "type": "SVGLengthList", "readonly": true }
      ]
    }, {
      "name": "SVGAnimatedNumber",
      "attributes": [
        { "name": "animVal", "type": "float", "readonly": true },
        { "name": "baseVal", "type": "float" }
      ]
    }, {
      "name": "SVGAnimatedNumberList",
      "attributes": [
        { "name": "animVal", "type": "SVGNumberList", "readonly": true },
        { "name": "baseVal", "type": "SVGNumberList", "readonly": true }
      ]
    }, {
      "name": "SVGAnimatedPoints", "noInterfaceObject": true,
      "attributes": [
        { "name": "animatedPoints", "type": "SVGPointList", "readonly": true },
        { "name": "points", "type": "SVGPointList", "readonly": true }
      ]
    }, {
      "name": "SVGAnimatedPreserveAspectRatio",
      "attributes": [
        { "name": "animVal", "type": "SVGPreserveAspectRatio", "readonly": true },
        { "name": "baseVal", "type": "SVGPreserveAspectRatio", "readonly": true }
      ]
    }, {
      "name": "SVGAnimatedRect",
      "attributes": [
        { "name": "animVal", "type": "DOMRectReadOnly", "readonly": true },
        { "name": "baseVal", "type": "DOMRect", "readonly": true }
      ]
    }, {
      "name": "SVGAnimatedString",
      "attributes": [
        { "name": "animVal", "type": "DOMString", "readonly": true },
        { "name": "baseVal", "type": "DOMString" }
      ]
    }, {
      "name": "SVGAnimatedTransformList",
      "attributes": [
        { "name": "animVal", "type": "SVGTransformList", "readonly": true },
        { "name": "baseVal", "type": "SVGTransformList", "readonly": true }
      ]
    }, {
      "name": "SVGCircleElement", "extends": "SVGGeometryElement",
      "attributes": [
        { "name": "cx", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "cy", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "r", "type": "SVGAnimatedLength", "readonly": true }
      ]
    }, {
      "name": "SVGClipPathElement", "extends": "SVGElement",
      "attributes": [
        { "name": "clipPathUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "transform", "type": "SVGAnimatedTransformList", "readonly": true }
      ],
      "implements": ["SVGUnitTypes"]
    }, {
      "name": "SVGComponentTransferFunctionElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE", "type": "unsigned short", "value": "3" },
        { "name": "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA", "type": "unsigned short", "value": "5" },
        { "name": "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY", "type": "unsigned short", "value": "1" },
        { "name": "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR", "type": "unsigned short", "value": "4" },
        { "name": "SVG_FECOMPONENTTRANSFER_TYPE_TABLE", "type": "unsigned short", "value": "2" },
        { "name": "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "amplitude", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "exponent", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "intercept", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "offset", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "slope", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "tableValues", "type": "SVGAnimatedNumberList", "readonly": true },
        { "name": "type", "type": "SVGAnimatedEnumeration", "readonly": true }
      ]
    }, {
      "name": "SVGCursorElement", "extends": "SVGElement",
      "attributes": [
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGURIReference"]
    },
    { "name": "SVGDefsElement", "extends": "SVGGraphicsElement" },
    { "name": "SVGDescElement", "extends": "SVGElement" },
    {
      "name": "SVGElement", "extends": "Element",
      "operations": [
        { "name": "blur", "type": "void", "arguments": [] },
        { "name": "focus", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "className", "type": "SVGAnimatedString", "readonly": true },
        { "name": "dataset", "type": "DOMStringMap", "readonly": true },
        { "name": "ownerSVGElement", "type": "SVGSVGElement", "nullable": true, "readonly": true },
        { "name": "tabIndex", "type": "long" },
        { "name": "viewportElement", "type": "SVGElement", "nullable": true, "readonly": true }
      ],
      "implements": ["GlobalEventHandlers", "SVGElementInstance", "ElementCSSInlineStyle"]
    }, {
      "name": "SVGElementInstance", "noInterfaceObject": true,
      "attributes": [
        { "name": "correspondingElement", "type": "SVGElement", "nullable": true, "readonly": true },
        { "name": "correspondingUseElement", "type": "SVGUseElement", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "SVGEllipseElement", "extends": "SVGGeometryElement",
      "attributes": [
        { "name": "cx", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "cy", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "rx", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "ry", "type": "SVGAnimatedLength", "readonly": true }
      ]
    }, {
      "name": "SVGFEBlendElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_FEBLEND_MODE_DARKEN", "type": "unsigned short", "value": "4" },
        { "name": "SVG_FEBLEND_MODE_LIGHTEN", "type": "unsigned short", "value": "5" },
        { "name": "SVG_FEBLEND_MODE_MULTIPLY", "type": "unsigned short", "value": "2" },
        { "name": "SVG_FEBLEND_MODE_NORMAL", "type": "unsigned short", "value": "1" },
        { "name": "SVG_FEBLEND_MODE_SCREEN", "type": "unsigned short", "value": "3" },
        { "name": "SVG_FEBLEND_MODE_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "in2", "type": "SVGAnimatedString", "readonly": true },
        { "name": "mode", "type": "SVGAnimatedEnumeration", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEColorMatrixElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_FECOLORMATRIX_TYPE_HUEROTATE", "type": "unsigned short", "value": "3" },
        { "name": "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA", "type": "unsigned short", "value": "4" },
        { "name": "SVG_FECOLORMATRIX_TYPE_MATRIX", "type": "unsigned short", "value": "1" },
        { "name": "SVG_FECOLORMATRIX_TYPE_SATURATE", "type": "unsigned short", "value": "2" },
        { "name": "SVG_FECOLORMATRIX_TYPE_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "type", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "values", "type": "SVGAnimatedNumberList", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEComponentTransferElement", "extends": "SVGElement",
      "attributes": [{ "name": "in1", "type": "SVGAnimatedString", "readonly": true }],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFECompositeElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC", "type": "unsigned short", "value": "6" },
        { "name": "SVG_FECOMPOSITE_OPERATOR_ATOP", "type": "unsigned short", "value": "4" },
        { "name": "SVG_FECOMPOSITE_OPERATOR_IN", "type": "unsigned short", "value": "2" },
        { "name": "SVG_FECOMPOSITE_OPERATOR_OUT", "type": "unsigned short", "value": "3" },
        { "name": "SVG_FECOMPOSITE_OPERATOR_OVER", "type": "unsigned short", "value": "1" },
        { "name": "SVG_FECOMPOSITE_OPERATOR_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_FECOMPOSITE_OPERATOR_XOR", "type": "unsigned short", "value": "5" }
      ],
      "attributes": [
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "in2", "type": "SVGAnimatedString", "readonly": true },
        { "name": "k1", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "k2", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "k3", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "k4", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "operator", "type": "SVGAnimatedEnumeration", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEConvolveMatrixElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_EDGEMODE_DUPLICATE", "type": "unsigned short", "value": "1" },
        { "name": "SVG_EDGEMODE_NONE", "type": "unsigned short", "value": "3" },
        { "name": "SVG_EDGEMODE_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_EDGEMODE_WRAP", "type": "unsigned short", "value": "2" }
      ],
      "attributes": [
        { "name": "bias", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "divisor", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "edgeMode", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "kernelMatrix", "type": "SVGAnimatedNumberList", "readonly": true },
        { "name": "kernelUnitLengthX", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "kernelUnitLengthY", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "orderX", "type": "SVGAnimatedInteger", "readonly": true },
        { "name": "orderY", "type": "SVGAnimatedInteger", "readonly": true },
        { "name": "targetX", "type": "SVGAnimatedInteger", "readonly": true },
        { "name": "targetY", "type": "SVGAnimatedInteger", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEDiffuseLightingElement", "extends": "SVGElement",
      "attributes": [
        { "name": "diffuseConstant", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "kernelUnitLengthX", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "kernelUnitLengthY", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "surfaceScale", "type": "SVGAnimatedNumber", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEDisplacementMapElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_CHANNEL_A", "type": "unsigned short", "value": "4" },
        { "name": "SVG_CHANNEL_B", "type": "unsigned short", "value": "3" },
        { "name": "SVG_CHANNEL_G", "type": "unsigned short", "value": "2" },
        { "name": "SVG_CHANNEL_R", "type": "unsigned short", "value": "1" },
        { "name": "SVG_CHANNEL_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "in2", "type": "SVGAnimatedString", "readonly": true },
        { "name": "scale", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "xChannelSelector", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "yChannelSelector", "type": "SVGAnimatedEnumeration", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEDistantLightElement", "extends": "SVGElement",
      "attributes": [
        { "name": "azimuth", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "elevation", "type": "SVGAnimatedNumber", "readonly": true }
      ]
    }, {
      "name": "SVGFEDropShadowElement", "extends": "SVGElement",
      "operations": [{
        "name": "setStdDeviation", "type": "void",
        "arguments": [
          { "name": "stdDeviationX", "type": "float" },
          { "name": "stdDeviationY", "type": "float" }
        ]
      }],
      "attributes": [
        { "name": "dx", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "dy", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "stdDeviationX", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "stdDeviationY", "type": "SVGAnimatedNumber", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEFloodElement", "extends": "SVGElement",
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    },
    { "name": "SVGFEFuncAElement", "extends": "SVGComponentTransferFunctionElement" },
    { "name": "SVGFEFuncBElement", "extends": "SVGComponentTransferFunctionElement" },
    { "name": "SVGFEFuncGElement", "extends": "SVGComponentTransferFunctionElement" },
    { "name": "SVGFEFuncRElement", "extends": "SVGComponentTransferFunctionElement" },
    {
      "name": "SVGFEGaussianBlurElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_EDGEMODE_DUPLICATE", "type": "unsigned short", "value": "1" },
        { "name": "SVG_EDGEMODE_NONE", "type": "unsigned short", "value": "3" },
        { "name": "SVG_EDGEMODE_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_EDGEMODE_WRAP", "type": "unsigned short", "value": "2" }
      ],
      "operations": [{
        "name": "setStdDeviation", "type": "void",
        "arguments": [
          { "name": "stdDeviationX", "type": "float" },
          { "name": "stdDeviationY", "type": "float" }
        ]
      }],
      "attributes": [
        { "name": "edgeMode", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "stdDeviationX", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "stdDeviationY", "type": "SVGAnimatedNumber", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEImageElement", "extends": "SVGElement",
      "attributes": [
        { "name": "crossOrigin", "type": "SVGAnimatedString", "readonly": true },
        { "name": "preserveAspectRatio", "type": "SVGAnimatedPreserveAspectRatio", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes", "SVGURIReference"]
    }, {
      "name": "SVGFEMergeElement", "extends": "SVGElement",
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEMergeNodeElement", "extends": "SVGElement",
      "attributes": [{ "name": "in1", "type": "SVGAnimatedString", "readonly": true }]
    }, {
      "name": "SVGFEMorphologyElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_MORPHOLOGY_OPERATOR_DILATE", "type": "unsigned short", "value": "2" },
        { "name": "SVG_MORPHOLOGY_OPERATOR_ERODE", "type": "unsigned short", "value": "1" },
        { "name": "SVG_MORPHOLOGY_OPERATOR_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "operator", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "radiusX", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "radiusY", "type": "SVGAnimatedNumber", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEOffsetElement", "extends": "SVGElement",
      "attributes": [
        { "name": "dx", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "dy", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFEPointLightElement", "extends": "SVGElement",
      "attributes": [
        { "name": "x", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "y", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "z", "type": "SVGAnimatedNumber", "readonly": true }
      ]
    }, {
      "name": "SVGFESpecularLightingElement", "extends": "SVGElement",
      "attributes": [
        { "name": "in1", "type": "SVGAnimatedString", "readonly": true },
        { "name": "kernelUnitLengthX", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "kernelUnitLengthY", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "specularConstant", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "specularExponent", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "surfaceScale", "type": "SVGAnimatedNumber", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFESpotLightElement", "extends": "SVGElement",
      "attributes": [
        { "name": "limitingConeAngle", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "pointsAtX", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "pointsAtY", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "pointsAtZ", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "specularExponent", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "x", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "y", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "z", "type": "SVGAnimatedNumber", "readonly": true }
      ]
    }, {
      "name": "SVGFETileElement", "extends": "SVGElement",
      "attributes": [{ "name": "in1", "type": "SVGAnimatedString", "readonly": true }],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFETurbulenceElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_STITCHTYPE_NOSTITCH", "type": "unsigned short", "value": "2" },
        { "name": "SVG_STITCHTYPE_STITCH", "type": "unsigned short", "value": "1" },
        { "name": "SVG_STITCHTYPE_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_TURBULENCE_TYPE_FRACTALNOISE", "type": "unsigned short", "value": "1" },
        { "name": "SVG_TURBULENCE_TYPE_TURBULENCE", "type": "unsigned short", "value": "2" },
        { "name": "SVG_TURBULENCE_TYPE_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "baseFrequencyX", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "baseFrequencyY", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "numOctaves", "type": "SVGAnimatedInteger", "readonly": true },
        { "name": "seed", "type": "SVGAnimatedNumber", "readonly": true },
        { "name": "stitchTiles", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "type", "type": "SVGAnimatedEnumeration", "readonly": true }
      ],
      "implements": ["SVGFilterPrimitiveStandardAttributes"]
    }, {
      "name": "SVGFilterElement", "extends": "SVGElement",
      "attributes": [
        { "name": "filterUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "primitiveUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGURIReference", "SVGUnitTypes"]
    }, {
      "name": "SVGFilterPrimitiveStandardAttributes", "noInterfaceObject": true,
      "attributes": [
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "result", "type": "SVGAnimatedString", "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ]
    }, {
      "name": "SVGFitToViewBox", "noInterfaceObject": true,
      "attributes": [
        { "name": "preserveAspectRatio", "type": "SVGAnimatedPreserveAspectRatio", "readonly": true },
        { "name": "viewBox", "type": "SVGAnimatedRect", "readonly": true }
      ]
    }, {
      "name": "SVGForeignObjectElement", "extends": "SVGGraphicsElement",
      "attributes": [
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ]
    },
    { "name": "SVGGElement", "extends": "SVGGraphicsElement" },
    {
      "name": "SVGGeometryElement", "extends": "SVGGraphicsElement",
      "operations": [
        {
          "name": "getPointAtLength", "type": "DOMPoint",
          "arguments": [{ "name": "distance", "type": "float" }]
        },
        { "name": "getTotalLength", "type": "float", "arguments": [] },
        {
          "name": "isPointInFill", "type": "boolean",
          "arguments": [{ "name": "point", "type": "DOMPoint" }]
        }, {
          "name": "isPointInStroke", "type": "boolean",
          "arguments": [{ "name": "point", "type": "DOMPoint" }]
        }
      ],
      "attributes": [{ "name": "pathLength", "type": "SVGAnimatedNumber", "readonly": true }]
    }, {
      "name": "SVGGradientElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_SPREADMETHOD_PAD", "type": "unsigned short", "value": "1" },
        { "name": "SVG_SPREADMETHOD_REFLECT", "type": "unsigned short", "value": "2" },
        { "name": "SVG_SPREADMETHOD_REPEAT", "type": "unsigned short", "value": "3" },
        { "name": "SVG_SPREADMETHOD_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "gradientTransform", "type": "SVGAnimatedTransformList", "readonly": true },
        { "name": "gradientUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "spreadMethod", "type": "SVGAnimatedEnumeration", "readonly": true }
      ],
      "implements": ["SVGURIReference"]
    }, {
      "name": "SVGGraphicsElement", "extends": "SVGElement",
      "operations": [
        {
          "name": "getBBox", "type": "DOMRect",
          "arguments": [{ "name": "options", "type": "SVGBoundingBoxOptions", "optional": true }]
        },
        { "name": "getCTM", "type": "DOMMatrix", "nullable": true, "arguments": [] },
        { "name": "getScreenCTM", "type": "DOMMatrix", "nullable": true, "arguments": [] }
      ],
      "attributes": [{ "name": "transform", "type": "SVGAnimatedTransformList", "readonly": true }],
      "implements": ["SVGTests"]
    },
    { "name": "SVGHatchElement", "extends": "SVGElement" },
    { "name": "SVGHatchpathElement", "extends": "SVGElement" },
    {
      "name": "SVGImageElement", "extends": "SVGGraphicsElement",
      "attributes": [
        { "name": "crossOrigin", "type": "DOMString", "nullable": true },
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "preserveAspectRatio", "type": "SVGAnimatedPreserveAspectRatio", "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGURIReference"]
    }, {
      "name": "SVGLength",
      "constants": [
        { "name": "SVG_LENGTHTYPE_CM", "type": "unsigned short", "value": "6" },
        { "name": "SVG_LENGTHTYPE_EMS", "type": "unsigned short", "value": "3" },
        { "name": "SVG_LENGTHTYPE_EXS", "type": "unsigned short", "value": "4" },
        { "name": "SVG_LENGTHTYPE_IN", "type": "unsigned short", "value": "8" },
        { "name": "SVG_LENGTHTYPE_MM", "type": "unsigned short", "value": "7" },
        { "name": "SVG_LENGTHTYPE_NUMBER", "type": "unsigned short", "value": "1" },
        { "name": "SVG_LENGTHTYPE_PC", "type": "unsigned short", "value": "10" },
        { "name": "SVG_LENGTHTYPE_PERCENTAGE", "type": "unsigned short", "value": "2" },
        { "name": "SVG_LENGTHTYPE_PT", "type": "unsigned short", "value": "9" },
        { "name": "SVG_LENGTHTYPE_PX", "type": "unsigned short", "value": "5" },
        { "name": "SVG_LENGTHTYPE_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "operations": [{
        "name": "convertToSpecifiedUnits", "type": "void",
        "arguments": [{ "name": "unitType", "type": "unsigned short" }]
      }, {
        "name": "newValueSpecifiedUnits", "type": "void",
        "arguments": [
          { "name": "unitType", "type": "unsigned short" },
          { "name": "valueInSpecifiedUnits", "type": "float" }
        ]
      }],
      "attributes": [
        { "name": "unitType", "type": "unsigned short", "readonly": true },
        { "name": "value", "type": "float" },
        { "name": "valueAsString", "type": "DOMString" },
        { "name": "valueInSpecifiedUnits", "type": "float" }
      ]
    }, {
      "name": "SVGLengthList",
      "anonymousOperations": [{
        "type": "void", "setter": true,
        "arguments": [
          { "name": "index", "type": "unsigned long" },
          { "name": "newItem", "type": "SVGLength" }
        ]
      }],
      "operations": [
        {
          "name": "appendItem", "type": "SVGLength",
          "arguments": [{ "name": "newItem", "type": "SVGLength" }]
        },
        { "name": "clear", "type": "void", "arguments": [] },
        {
          "name": "getItem", "type": "SVGLength", "getter": true,
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "initialize", "type": "SVGLength",
          "arguments": [{ "name": "newItem", "type": "SVGLength" }]
        }, {
          "name": "insertItemBefore", "type": "SVGLength",
          "arguments": [
            { "name": "newItem", "type": "SVGLength" },
            { "name": "index", "type": "unsigned long" }
          ]
        }, {
          "name": "removeItem", "type": "SVGLength",
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "replaceItem", "type": "SVGLength",
          "arguments": [
            { "name": "newItem", "type": "SVGLength" },
            { "name": "index", "type": "unsigned long" }
          ]
        }
      ],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "numberOfItems", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "SVGLinearGradientElement", "extends": "SVGGradientElement",
      "attributes": [
        { "name": "x1", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x2", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y1", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y2", "type": "SVGAnimatedLength", "readonly": true }
      ]
    }, {
      "name": "SVGLineElement", "extends": "SVGGeometryElement",
      "attributes": [
        { "name": "x1", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x2", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y1", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y2", "type": "SVGAnimatedLength", "readonly": true }
      ]
    }, {
      "name": "SVGMarkerElement", "extends": "SVGElement",
      "constants": [
        { "name": "SVG_MARKER_ORIENT_ANGLE", "type": "unsigned short", "value": "2" },
        { "name": "SVG_MARKER_ORIENT_AUTO", "type": "unsigned short", "value": "1" },
        { "name": "SVG_MARKER_ORIENT_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_MARKERUNITS_STROKEWIDTH", "type": "unsigned short", "value": "2" },
        { "name": "SVG_MARKERUNITS_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_MARKERUNITS_USERSPACEONUSE", "type": "unsigned short", "value": "1" }
      ],
      "operations": [
        {
          "name": "setOrientToAngle", "type": "void",
          "arguments": [{ "name": "angle", "type": "SVGAngle" }]
        },
        { "name": "setOrientToAuto", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "markerHeight", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "markerUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "markerWidth", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "orient", "type": "DOMString" },
        { "name": "orientAngle", "type": "SVGAnimatedAngle", "readonly": true },
        { "name": "orientType", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "refX", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "refY", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGFitToViewBox"]
    }, {
      "name": "SVGMaskElement", "extends": "SVGElement",
      "attributes": [
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "maskContentUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "maskUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGUnitTypes"]
    }, {
      "name": "SVGMeshElement", "extends": "SVGGeometryElement",
      "implements": ["SVGURIReference"]
    },
    { "name": "SVGMeshGradientElement", "extends": "SVGGradientElement" },
    { "name": "SVGMeshpatchElement", "extends": "SVGElement" },
    { "name": "SVGMeshrowElement", "extends": "SVGElement" },
    { "name": "SVGMetadataElement", "extends": "SVGElement" },
    {
      "name": "SVGNameList",
      "anonymousOperations": [{
        "type": "void", "setter": true,
        "arguments": [
          { "name": "index", "type": "unsigned long" },
          { "name": "newItem", "type": "Type" }
        ]
      }],
      "operations": [
        {
          "name": "appendItem", "type": "Type",
          "arguments": [{ "name": "newItem", "type": "Type" }]
        },
        { "name": "clear", "type": "void", "arguments": [] },
        {
          "name": "getItem", "type": "Type", "getter": true,
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "initialize", "type": "Type",
          "arguments": [{ "name": "newItem", "type": "Type" }]
        }, {
          "name": "insertItemBefore", "type": "Type",
          "arguments": [
            { "name": "newItem", "type": "Type" },
            { "name": "index", "type": "unsigned long" }
          ]
        }, {
          "name": "removeItem", "type": "Type",
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "replaceItem", "type": "Type",
          "arguments": [
            { "name": "newItem", "type": "Type" },
            { "name": "index", "type": "unsigned long" }
          ]
        }
      ],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "numberOfItems", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "SVGNumber",
      "attributes": [{ "name": "value", "type": "float" }]
    }, {
      "name": "SVGNumberList",
      "anonymousOperations": [{
        "type": "void", "setter": true,
        "arguments": [
          { "name": "index", "type": "unsigned long" },
          { "name": "newItem", "type": "SVGNumber" }
        ]
      }],
      "operations": [
        {
          "name": "appendItem", "type": "SVGNumber",
          "arguments": [{ "name": "newItem", "type": "SVGNumber" }]
        },
        { "name": "clear", "type": "void", "arguments": [] },
        {
          "name": "getItem", "type": "SVGNumber", "getter": true,
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "initialize", "type": "SVGNumber",
          "arguments": [{ "name": "newItem", "type": "SVGNumber" }]
        }, {
          "name": "insertItemBefore", "type": "SVGNumber",
          "arguments": [
            { "name": "newItem", "type": "SVGNumber" },
            { "name": "index", "type": "unsigned long" }
          ]
        }, {
          "name": "removeItem", "type": "SVGNumber",
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "replaceItem", "type": "SVGNumber",
          "arguments": [
            { "name": "newItem", "type": "SVGNumber" },
            { "name": "index", "type": "unsigned long" }
          ]
        }
      ],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "numberOfItems", "type": "unsigned long", "readonly": true }
      ]
    },
    { "name": "SVGPathElement", "extends": "SVGGeometryElement" },
    {
      "name": "SVGPatternElement", "extends": "SVGElement",
      "attributes": [
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "patternContentUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "patternTransform", "type": "SVGAnimatedTransformList", "readonly": true },
        { "name": "patternUnits", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGFitToViewBox", "SVGURIReference"]
    }, {
      "name": "SVGPointList",
      "anonymousOperations": [{
        "type": "void", "setter": true,
        "arguments": [
          { "name": "index", "type": "unsigned long" },
          { "name": "newItem", "type": "DOMPoint" }
        ]
      }],
      "operations": [
        {
          "name": "appendItem", "type": "DOMPoint",
          "arguments": [{ "name": "newItem", "type": "DOMPoint" }]
        },
        { "name": "clear", "type": "void", "arguments": [] },
        {
          "name": "getItem", "type": "DOMPoint", "getter": true,
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "initialize", "type": "DOMPoint",
          "arguments": [{ "name": "newItem", "type": "DOMPoint" }]
        }, {
          "name": "insertItemBefore", "type": "DOMPoint",
          "arguments": [
            { "name": "newItem", "type": "DOMPoint" },
            { "name": "index", "type": "unsigned long" }
          ]
        }, {
          "name": "removeItem", "type": "DOMPoint",
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "replaceItem", "type": "DOMPoint",
          "arguments": [
            { "name": "newItem", "type": "DOMPoint" },
            { "name": "index", "type": "unsigned long" }
          ]
        }
      ],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "numberOfItems", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "SVGPolygonElement", "extends": "SVGGeometryElement",
      "implements": ["SVGAnimatedPoints"]
    }, {
      "name": "SVGPolylineElement", "extends": "SVGGeometryElement",
      "implements": ["SVGAnimatedPoints"]
    }, {
      "name": "SVGPreserveAspectRatio",
      "constants": [
        { "name": "SVG_MEETORSLICE_MEET", "type": "unsigned short", "value": "1" },
        { "name": "SVG_MEETORSLICE_SLICE", "type": "unsigned short", "value": "2" },
        { "name": "SVG_MEETORSLICE_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_PRESERVEASPECTRATIO_NONE", "type": "unsigned short", "value": "1" },
        { "name": "SVG_PRESERVEASPECTRATIO_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMAXYMAX", "type": "unsigned short", "value": "10" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMAXYMID", "type": "unsigned short", "value": "7" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMAXYMIN", "type": "unsigned short", "value": "4" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMIDYMAX", "type": "unsigned short", "value": "9" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMIDYMID", "type": "unsigned short", "value": "6" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMIDYMIN", "type": "unsigned short", "value": "3" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMINYMAX", "type": "unsigned short", "value": "8" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMINYMID", "type": "unsigned short", "value": "5" },
        { "name": "SVG_PRESERVEASPECTRATIO_XMINYMIN", "type": "unsigned short", "value": "2" }
      ],
      "attributes": [
        { "name": "align", "type": "unsigned short" },
        { "name": "meetOrSlice", "type": "unsigned short" }
      ]
    }, {
      "name": "SVGRadialGradientElement", "extends": "SVGGradientElement",
      "attributes": [
        { "name": "cx", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "cy", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "fr", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "fx", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "fy", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "r", "type": "SVGAnimatedLength", "readonly": true }
      ]
    }, {
      "name": "SVGRectElement", "extends": "SVGGeometryElement",
      "attributes": [
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "rx", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "ry", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ]
    }, {
      "name": "SVGScriptElement", "extends": "SVGElement",
      "attributes": [
        { "name": "crossOrigin", "type": "DOMString", "nullable": true },
        { "name": "type", "type": "DOMString" }
      ],
      "implements": ["SVGURIReference"]
    },
    { "name": "SVGSolidcolorElement", "extends": "SVGElement" },
    {
      "name": "SVGStopElement", "extends": "SVGElement",
      "attributes": [{ "name": "offset", "type": "SVGAnimatedNumber", "readonly": true }]
    }, {
      "name": "SVGStringList",
      "anonymousOperations": [{
        "type": "void", "setter": true,
        "arguments": [
          { "name": "index", "type": "unsigned long" },
          { "name": "newItem", "type": "DOMString" }
        ]
      }],
      "operations": [
        {
          "name": "appendItem", "type": "DOMString",
          "arguments": [{ "name": "newItem", "type": "DOMString" }]
        },
        { "name": "clear", "type": "void", "arguments": [] },
        {
          "name": "getItem", "type": "DOMString", "getter": true,
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "initialize", "type": "DOMString",
          "arguments": [{ "name": "newItem", "type": "DOMString" }]
        }, {
          "name": "insertItemBefore", "type": "DOMString",
          "arguments": [
            { "name": "newItem", "type": "DOMString" },
            { "name": "index", "type": "unsigned long" }
          ]
        }, {
          "name": "removeItem", "type": "DOMString",
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "replaceItem", "type": "DOMString",
          "arguments": [
            { "name": "newItem", "type": "DOMString" },
            { "name": "index", "type": "unsigned long" }
          ]
        }
      ],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "numberOfItems", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "SVGStyleElement", "extends": "SVGElement",
      "attributes": [
        { "name": "media", "type": "DOMString" },
        { "name": "title", "type": "DOMString" },
        { "name": "type", "type": "DOMString" }
      ],
      "implements": ["LinkStyle"]
    }, {
      "name": "SVGSVGElement", "extends": "SVGGraphicsElement",
      "operations": [
        {
          "name": "checkEnclosure", "type": "boolean",
          "arguments": [
            { "name": "element", "type": "SVGElement" },
            { "name": "rect", "type": "DOMRectReadOnly" }
          ]
        }, {
          "name": "checkIntersection", "type": "boolean",
          "arguments": [
            { "name": "element", "type": "SVGElement" },
            { "name": "rect", "type": "DOMRectReadOnly" }
          ]
        },
        { "name": "createSVGAngle", "type": "SVGAngle", "arguments": [] },
        { "name": "createSVGLength", "type": "SVGLength", "arguments": [] },
        { "name": "createSVGMatrix", "type": "DOMMatrix", "arguments": [] },
        { "name": "createSVGNumber", "type": "SVGNumber", "arguments": [] },
        { "name": "createSVGPoint", "type": "DOMPoint", "arguments": [] },
        { "name": "createSVGRect", "type": "DOMRect", "arguments": [] },
        { "name": "createSVGTransform", "type": "SVGTransform", "arguments": [] },
        {
          "name": "createSVGTransformFromMatrix", "type": "SVGTransform",
          "arguments": [{ "name": "matrix", "type": "DOMMatrixReadOnly" }]
        },
        { "name": "deselectAll", "type": "void", "arguments": [] },
        { "name": "forceRedraw", "type": "void", "arguments": [] },
        {
          "name": "getElementById", "type": "Element",
          "arguments": [{ "name": "elementId", "type": "DOMString" }]
        }, {
          "name": "getEnclosureList", "type": "NodeList",
          "arguments": [
            { "name": "rect", "type": "DOMRectReadOnly" },
            { "name": "referenceElement", "type": "SVGElement", "nullable": true }
          ]
        }, {
          "name": "getIntersectionList", "type": "NodeList",
          "arguments": [
            { "name": "rect", "type": "DOMRectReadOnly" },
            { "name": "referenceElement", "type": "SVGElement", "nullable": true }
          ]
        }, {
          "name": "suspendRedraw", "type": "unsigned long",
          "arguments": [{ "name": "maxWaitMilliseconds", "type": "unsigned long" }]
        }, {
          "name": "unsuspendRedraw", "type": "void",
          "arguments": [{ "name": "suspendHandleID", "type": "unsigned long" }]
        },
        { "name": "unsuspendRedrawAll", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "currentScale", "type": "float" },
        { "name": "currentTranslate", "type": "DOMPointReadOnly", "readonly": true },
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGFitToViewBox", "SVGZoomAndPan", "WindowEventHandlers"]
    },
    { "name": "SVGSwitchElement", "extends": "SVGGraphicsElement" },
    {
      "name": "SVGSymbolElement", "extends": "SVGGraphicsElement",
      "implements": ["SVGFitToViewBox"]
    }, {
      "name": "SVGTests", "noInterfaceObject": true,
      "attributes": [
        { "name": "requiredExtensions", "type": "SVGStringList", "readonly": true },
        { "name": "systemLanguage", "type": "SVGStringList", "readonly": true }
      ]
    }, {
      "name": "SVGTextContentElement", "extends": "SVGGraphicsElement",
      "constants": [
        { "name": "LENGTHADJUST_SPACING", "type": "unsigned short", "value": "1" },
        { "name": "LENGTHADJUST_SPACINGANDGLYPHS", "type": "unsigned short", "value": "2" },
        { "name": "LENGTHADJUST_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "operations": [
        {
          "name": "getCharNumAtPosition", "type": "long",
          "arguments": [{ "name": "point", "type": "DOMPoint" }]
        },
        { "name": "getComputedTextLength", "type": "float", "arguments": [] },
        {
          "name": "getEndPositionOfChar", "type": "DOMPoint",
          "arguments": [{ "name": "charnum", "type": "unsigned long" }]
        }, {
          "name": "getExtentOfChar", "type": "DOMRect",
          "arguments": [{ "name": "charnum", "type": "unsigned long" }]
        },
        { "name": "getNumberOfChars", "type": "long", "arguments": [] },
        {
          "name": "getRotationOfChar", "type": "float",
          "arguments": [{ "name": "charnum", "type": "unsigned long" }]
        }, {
          "name": "getStartPositionOfChar", "type": "DOMPoint",
          "arguments": [{ "name": "charnum", "type": "unsigned long" }]
        }, {
          "name": "getSubStringLength", "type": "float",
          "arguments": [
            { "name": "charnum", "type": "unsigned long" },
            { "name": "nchars", "type": "unsigned long" }
          ]
        }, {
          "name": "selectSubString", "type": "void",
          "arguments": [
            { "name": "charnum", "type": "unsigned long" },
            { "name": "nchars", "type": "unsigned long" }
          ]
        }
      ],
      "attributes": [
        { "name": "lengthAdjust", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "textLength", "type": "SVGAnimatedLength", "readonly": true }
      ]
    },
    { "name": "SVGTextElement", "extends": "SVGTextPositioningElement" },
    {
      "name": "SVGTextPathElement", "extends": "SVGTextContentElement",
      "constants": [
        { "name": "TEXTPATH_METHODTYPE_ALIGN", "type": "unsigned short", "value": "1" },
        { "name": "TEXTPATH_METHODTYPE_STRETCH", "type": "unsigned short", "value": "2" },
        { "name": "TEXTPATH_METHODTYPE_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "TEXTPATH_SPACINGTYPE_AUTO", "type": "unsigned short", "value": "1" },
        { "name": "TEXTPATH_SPACINGTYPE_EXACT", "type": "unsigned short", "value": "2" },
        { "name": "TEXTPATH_SPACINGTYPE_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [
        { "name": "method", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "spacing", "type": "SVGAnimatedEnumeration", "readonly": true },
        { "name": "startOffset", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGURIReference"]
    }, {
      "name": "SVGTextPositioningElement", "extends": "SVGTextContentElement",
      "attributes": [
        { "name": "dx", "type": "SVGAnimatedLengthList", "readonly": true },
        { "name": "dy", "type": "SVGAnimatedLengthList", "readonly": true },
        { "name": "rotate", "type": "SVGAnimatedNumberList", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLengthList", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLengthList", "readonly": true }
      ]
    },
    { "name": "SVGTitleElement", "extends": "SVGElement" },
    {
      "name": "SVGTransform",
      "constants": [
        { "name": "SVG_TRANSFORM_MATRIX", "type": "unsigned short", "value": "1" },
        { "name": "SVG_TRANSFORM_ROTATE", "type": "unsigned short", "value": "4" },
        { "name": "SVG_TRANSFORM_SCALE", "type": "unsigned short", "value": "3" },
        { "name": "SVG_TRANSFORM_SKEWX", "type": "unsigned short", "value": "5" },
        { "name": "SVG_TRANSFORM_SKEWY", "type": "unsigned short", "value": "6" },
        { "name": "SVG_TRANSFORM_TRANSLATE", "type": "unsigned short", "value": "2" },
        { "name": "SVG_TRANSFORM_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "operations": [{
        "name": "setMatrix", "type": "void",
        "arguments": [{ "name": "matrix", "type": "DOMMatrixReadOnly" }]
      }, {
        "name": "setRotate", "type": "void",
        "arguments": [
          { "name": "angle", "type": "float" },
          { "name": "cx", "type": "float" },
          { "name": "cy", "type": "float" }
        ]
      }, {
        "name": "setScale", "type": "void",
        "arguments": [
          { "name": "sx", "type": "float" },
          { "name": "sy", "type": "float" }
        ]
      }, {
        "name": "setSkewX", "type": "void",
        "arguments": [{ "name": "angle", "type": "float" }]
      }, {
        "name": "setSkewY", "type": "void",
        "arguments": [{ "name": "angle", "type": "float" }]
      }, {
        "name": "setTranslate", "type": "void",
        "arguments": [
          { "name": "tx", "type": "float" },
          { "name": "ty", "type": "float" }
        ]
      }],
      "attributes": [
        { "name": "angle", "type": "float", "readonly": true },
        { "name": "matrix", "type": "DOMMatrix", "readonly": true },
        { "name": "type", "type": "unsigned short", "readonly": true }
      ]
    }, {
      "name": "SVGTransformList",
      "anonymousOperations": [{
        "type": "void", "setter": true,
        "arguments": [
          { "name": "index", "type": "unsigned long" },
          { "name": "newItem", "type": "SVGTransform" }
        ]
      }],
      "operations": [
        {
          "name": "appendItem", "type": "SVGTransform",
          "arguments": [{ "name": "newItem", "type": "SVGTransform" }]
        },
        { "name": "clear", "type": "void", "arguments": [] },
        { "name": "consolidate", "type": "SVGTransform", "nullable": true, "arguments": [] },
        {
          "name": "createSVGTransformFromMatrix", "type": "SVGTransform",
          "arguments": [{ "name": "matrix", "type": "DOMMatrixReadOnly" }]
        }, {
          "name": "getItem", "type": "SVGTransform", "getter": true,
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "initialize", "type": "SVGTransform",
          "arguments": [{ "name": "newItem", "type": "SVGTransform" }]
        }, {
          "name": "insertItemBefore", "type": "SVGTransform",
          "arguments": [
            { "name": "newItem", "type": "SVGTransform" },
            { "name": "index", "type": "unsigned long" }
          ]
        }, {
          "name": "removeItem", "type": "SVGTransform",
          "arguments": [{ "name": "index", "type": "unsigned long" }]
        }, {
          "name": "replaceItem", "type": "SVGTransform",
          "arguments": [
            { "name": "newItem", "type": "SVGTransform" },
            { "name": "index", "type": "unsigned long" }
          ]
        }
      ],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "numberOfItems", "type": "unsigned long", "readonly": true }
      ]
    },
    { "name": "SVGTSpanElement", "extends": "SVGTextPositioningElement" },
    {
      "name": "SVGUnitTypes",
      "constants": [
        { "name": "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX", "type": "unsigned short", "value": "2" },
        { "name": "SVG_UNIT_TYPE_UNKNOWN", "type": "unsigned short", "value": "0" },
        { "name": "SVG_UNIT_TYPE_USERSPACEONUSE", "type": "unsigned short", "value": "1" }
      ]
    },
    { "name": "SVGUnknownElement", "extends": "SVGGraphicsElement" },
    {
      "name": "SVGURIReference", "noInterfaceObject": true,
      "attributes": [{ "name": "href", "type": "SVGAnimatedString", "readonly": true }]
    }, {
      "name": "SVGUseElement", "extends": "SVGGraphicsElement",
      "attributes": [
        { "name": "animatedInstanceRoot", "type": "SVGElement", "nullable": true, "readonly": true },
        { "name": "height", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "instanceRoot", "type": "SVGElement", "nullable": true, "readonly": true },
        { "name": "width", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "x", "type": "SVGAnimatedLength", "readonly": true },
        { "name": "y", "type": "SVGAnimatedLength", "readonly": true }
      ],
      "implements": ["SVGURIReference"]
    },
    { "name": "SVGUseElementShadowRoot", "extends": "ShadowRoot" },
    {
      "name": "SVGViewElement", "extends": "SVGElement",
      "implements": ["SVGFitToViewBox", "SVGZoomAndPan"]
    }, {
      "name": "SVGZoomAndPan", "noInterfaceObject": true,
      "constants": [
        { "name": "SVG_ZOOMANDPAN_DISABLE", "type": "unsigned short", "value": "1" },
        { "name": "SVG_ZOOMANDPAN_MAGNIFY", "type": "unsigned short", "value": "2" },
        { "name": "SVG_ZOOMANDPAN_UNKNOWN", "type": "unsigned short", "value": "0" }
      ],
      "attributes": [{ "name": "zoomAndPan", "type": "unsigned short" }]
    }, {
      "name": "SyncEvent", "extends": "ExtendableEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "init", "type": "SyncEventInit" }
        ]
      }],
      "exposed": ["ServiceWorker"],
      "attributes": [
        { "name": "lastChance", "type": "boolean", "readonly": true },
        { "name": "tag", "type": "DOMString", "readonly": true }
      ]
    }, {
      "name": "SyncManager",
      "exposed": ["Window", "Worker"],
      "operations": [
        { "name": "getTags", "type": "Promise<sequence<DOMString>>", "arguments": [] },
        {
          "name": "register", "type": "Promise<void>",
          "arguments": [{ "name": "tag", "type": "DOMString" }]
        }
      ]
    }, {
      "name": "Text", "extends": "CharacterData",
      "constructors": [{
        "arguments": [{ "name": "data", "type": "DOMString", "optional": true, "default": "\"\"" }]
      }],
      "exposed": ["Window"],
      "operations": [{
        "name": "splitText", "type": "Text",
        "arguments": [{ "name": "offset", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "wholeText", "type": "DOMString", "readonly": true }],
      "implements": ["Slotable", "GeometryUtils"]
    }, {
      "name": "TextDecoder",
      "constructors": [{
        "arguments": [
          { "name": "label", "type": "DOMString", "optional": true, "default": "\"utf-8\"" },
          { "name": "options", "type": "TextDecoderOptions", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "decode", "type": "USVString",
        "arguments": [
          { "name": "input", "type": "BufferSource", "optional": true },
          { "name": "options", "type": "TextDecodeOptions", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "encoding", "type": "DOMString", "readonly": true },
        { "name": "fatal", "type": "boolean", "readonly": true },
        { "name": "ignoreBOM", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "TextEncoder",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "encode", "type": "Uint8Array",
        "arguments": [{ "name": "input", "type": "USVString", "optional": true, "default": "\"\"" }]
      }],
      "attributes": [{ "name": "encoding", "type": "DOMString", "readonly": true }]
    }, {
      "name": "TextMetrics",
      "exposed": ["Window"],
      "attributes": [
        { "name": "actualBoundingBoxAscent", "type": "double", "readonly": true },
        { "name": "actualBoundingBoxDescent", "type": "double", "readonly": true },
        { "name": "actualBoundingBoxLeft", "type": "double", "readonly": true },
        { "name": "actualBoundingBoxRight", "type": "double", "readonly": true },
        { "name": "alphabeticBaseline", "type": "double", "readonly": true },
        { "name": "emHeightAscent", "type": "double", "readonly": true },
        { "name": "emHeightDescent", "type": "double", "readonly": true },
        { "name": "fontBoundingBoxAscent", "type": "double", "readonly": true },
        { "name": "fontBoundingBoxDescent", "type": "double", "readonly": true },
        { "name": "hangingBaseline", "type": "double", "readonly": true },
        { "name": "ideographicBaseline", "type": "double", "readonly": true },
        { "name": "width", "type": "double", "readonly": true }
      ]
    }, {
      "name": "TextTrack", "extends": "EventTarget",
      "exposed": ["Window"],
      "operations": [{
        "name": "addCue", "type": "void",
        "arguments": [{ "name": "cue", "type": "TextTrackCue" }]
      }, {
        "name": "removeCue", "type": "void",
        "arguments": [{ "name": "cue", "type": "TextTrackCue" }]
      }],
      "attributes": [
        { "name": "activeCues", "type": "TextTrackCueList", "nullable": true, "readonly": true },
        { "name": "cues", "type": "TextTrackCueList", "nullable": true, "readonly": true },
        { "name": "id", "type": "DOMString", "readonly": true },
        { "name": "inBandMetadataTrackDispatchType", "type": "DOMString", "readonly": true },
        { "name": "kind", "type": "TextTrackKind", "readonly": true },
        { "name": "label", "type": "DOMString", "readonly": true },
        { "name": "language", "type": "DOMString", "readonly": true },
        { "name": "mode", "type": "TextTrackMode" },
        { "name": "oncuechange", "type": "EventHandler" },
        { "name": "sourceBuffer", "type": "SourceBuffer", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "TextTrackCue", "extends": "EventTarget",
      "exposed": ["Window"],
      "attributes": [
        { "name": "endTime", "type": "double" },
        { "name": "id", "type": "DOMString" },
        { "name": "onenter", "type": "EventHandler" },
        { "name": "onexit", "type": "EventHandler" },
        { "name": "pauseOnExit", "type": "boolean" },
        { "name": "startTime", "type": "double" },
        { "name": "track", "type": "TextTrack", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "TextTrackCueList",
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "TextTrackCue", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "operations": [{
        "name": "getCueById", "type": "TextTrackCue", "nullable": true,
        "arguments": [{ "name": "id", "type": "DOMString" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "TextTrackList", "extends": "EventTarget",
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "TextTrack", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "operations": [{
        "name": "getTrackById", "type": "TextTrack", "nullable": true,
        "arguments": [{ "name": "id", "type": "DOMString" }]
      }],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "onaddtrack", "type": "EventHandler", "eventHandler": "addtrack" },
        { "name": "onchange", "type": "EventHandler", "eventHandler": "change" },
        { "name": "onremovetrack", "type": "EventHandler", "eventHandler": "removetrack" }
      ],
      "events": [
        { "name": "change", "type": "Event" },
        { "name": "addtrack", "type": "TrackEvent" },
        { "name": "removetrack", "type": "TrackEvent" }
      ]
    }, {
      "name": "TimeRanges",
      "exposed": ["Window"],
      "operations": [{
        "name": "end", "type": "double",
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }, {
        "name": "start", "type": "double",
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "Touch",
      "constructors": [{
        "arguments": [{ "name": "touchInitDict", "type": "TouchInit" }]
      }],
      "exposed": ["Window"],
      "attributes": [
        { "name": "altitudeAngle", "type": "float", "readonly": true },
        { "name": "azimuthAngle", "type": "float", "readonly": true },
        { "name": "clientX", "type": "double", "readonly": true },
        { "name": "clientY", "type": "double", "readonly": true },
        { "name": "force", "type": "float", "readonly": true },
        { "name": "identifier", "type": "long", "readonly": true },
        { "name": "pageX", "type": "double", "readonly": true },
        { "name": "pageY", "type": "double", "readonly": true },
        { "name": "radiusX", "type": "float", "readonly": true },
        { "name": "radiusY", "type": "float", "readonly": true },
        { "name": "rotationAngle", "type": "float", "readonly": true },
        { "name": "screenX", "type": "double", "readonly": true },
        { "name": "screenY", "type": "double", "readonly": true },
        { "name": "target", "type": "EventTarget", "readonly": true },
        { "name": "touchType", "type": "TouchType", "readonly": true }
      ]
    }, {
      "name": "TouchEvent", "extends": "UIEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "TouchEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [
        { "name": "altKey", "type": "boolean", "readonly": true },
        { "name": "changedTouches", "type": "TouchList", "readonly": true },
        { "name": "ctrlKey", "type": "boolean", "readonly": true },
        { "name": "metaKey", "type": "boolean", "readonly": true },
        { "name": "shiftKey", "type": "boolean", "readonly": true },
        { "name": "targetTouches", "type": "TouchList", "readonly": true },
        { "name": "touches", "type": "TouchList", "readonly": true }
      ]
    }, {
      "name": "TouchList",
      "operations": [{
        "name": "item", "type": "Touch", "nullable": true, "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "attributes": [{ "name": "length", "type": "unsigned long", "readonly": true }]
    }, {
      "name": "TrackEvent", "extends": "Event",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "TrackEventInit", "optional": true }
        ]
      }],
      "attributes": [{ "name": "track", "type": "(VideoTrack or AudioTrack or TextTrack)", "nullable": true, "readonly": true }]
    }, {
      "name": "TransitionEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "CSSOMString" },
          { "name": "transitionEventInitDict", "type": "TransitionEventInit", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "elapsedTime", "type": "float", "readonly": true },
        { "name": "propertyName", "type": "CSSOMString", "readonly": true },
        { "name": "pseudoElement", "type": "CSSOMString", "readonly": true }
      ]
    }, {
      "name": "TreeWalker",
      "exposed": ["Window"],
      "operations": [
        { "name": "firstChild", "type": "Node", "nullable": true, "arguments": [] },
        { "name": "lastChild", "type": "Node", "nullable": true, "arguments": [] },
        { "name": "nextNode", "type": "Node", "nullable": true, "arguments": [] },
        { "name": "nextSibling", "type": "Node", "nullable": true, "arguments": [] },
        { "name": "parentNode", "type": "Node", "nullable": true, "arguments": [] },
        { "name": "previousNode", "type": "Node", "nullable": true, "arguments": [] },
        { "name": "previousSibling", "type": "Node", "nullable": true, "arguments": [] }
      ],
      "attributes": [
        { "name": "currentNode", "type": "Node" },
        { "name": "filter", "type": "NodeFilter", "nullable": true, "readonly": true },
        { "name": "root", "type": "Node", "readonly": true },
        { "name": "whatToShow", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "UIEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "UIEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "attributes": [
        { "name": "detail", "type": "long", "readonly": true },
        { "name": "view", "type": "Window", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "URL",
      "constructors": [{
        "arguments": [
          { "name": "url", "type": "USVString" },
          { "name": "base", "type": "USVString", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "createObjectURL", "type": "DOMString", "static": true,
          "arguments": [{ "name": "blob", "type": "Blob" }],
          "exposed": ["Window", "DedicatedWorker", "SharedWorker"]
        }, {
          "name": "createObjectURL", "type": "DOMString", "static": true,
          "arguments": [{ "name": "mediaSource", "type": "MediaSource" }],
          "exposed": ["Window"]
        }, {
          "name": "revokeObjectURL", "type": "void", "static": true,
          "arguments": [{ "name": "url", "type": "DOMString" }],
          "exposed": ["Window", "DedicatedWorker", "SharedWorker"]
        },
        { "name": "toJSON", "type": "USVString", "arguments": [] }
      ],
      "attributes": [
        { "name": "hash", "type": "USVString" },
        { "name": "host", "type": "USVString" },
        { "name": "hostname", "type": "USVString" },
        { "name": "href", "type": "USVString", "stringifier": true },
        { "name": "origin", "type": "USVString", "readonly": true },
        { "name": "password", "type": "USVString" },
        { "name": "pathname", "type": "USVString" },
        { "name": "port", "type": "USVString" },
        { "name": "protocol", "type": "USVString" },
        { "name": "search", "type": "USVString" },
        { "name": "searchParams", "type": "URLSearchParams", "readonly": true },
        { "name": "username", "type": "USVString" }
      ]
    }, {
      "name": "URLSearchParams",
      "constructors": [{
        "arguments": [{ "name": "init", "type": "(sequence<sequence<USVString>> or record<USVString, USVString> or USVString)", "optional": true, "default": "\"\"" }]
      }],
      "exposed": ["Window", "Worker"],
      "iterable": { "keytype": "USVString", "type": "USVString" },
      "anonymousOperations": [{ "type": "DOMString", "stringifier": true }],
      "operations": [
        {
          "name": "append", "type": "void",
          "arguments": [
            { "name": "name", "type": "USVString" },
            { "name": "value", "type": "USVString" }
          ]
        }, {
          "name": "delete", "type": "void",
          "arguments": [{ "name": "name", "type": "USVString" }]
        }, {
          "name": "get", "type": "USVString", "nullable": true,
          "arguments": [{ "name": "name", "type": "USVString" }]
        }, {
          "name": "getAll", "type": "sequence<USVString>",
          "arguments": [{ "name": "name", "type": "USVString" }]
        }, {
          "name": "has", "type": "boolean",
          "arguments": [{ "name": "name", "type": "USVString" }]
        }, {
          "name": "set", "type": "void",
          "arguments": [
            { "name": "name", "type": "USVString" },
            { "name": "value", "type": "USVString" }
          ]
        },
        { "name": "sort", "type": "void", "arguments": [] }
      ]
    }, {
      "name": "ValidityState",
      "exposed": ["Window"],
      "attributes": [
        { "name": "badInput", "type": "boolean", "readonly": true },
        { "name": "customError", "type": "boolean", "readonly": true },
        { "name": "patternMismatch", "type": "boolean", "readonly": true },
        { "name": "rangeOverflow", "type": "boolean", "readonly": true },
        { "name": "rangeUnderflow", "type": "boolean", "readonly": true },
        { "name": "stepMismatch", "type": "boolean", "readonly": true },
        { "name": "tooLong", "type": "boolean", "readonly": true },
        { "name": "tooShort", "type": "boolean", "readonly": true },
        { "name": "typeMismatch", "type": "boolean", "readonly": true },
        { "name": "valid", "type": "boolean", "readonly": true },
        { "name": "valueMissing", "type": "boolean", "readonly": true }
      ]
    }, {
      "name": "VideoPlaybackQuality",
      "attributes": [
        { "name": "corruptedVideoFrames", "type": "unsigned long", "readonly": true },
        { "name": "creationTime", "type": "DOMHighResTimeStamp", "readonly": true },
        { "name": "droppedVideoFrames", "type": "unsigned long", "readonly": true },
        { "name": "totalVideoFrames", "type": "unsigned long", "readonly": true }
      ]
    }, {
      "name": "VideoTrack",
      "exposed": ["Window"],
      "attributes": [
        { "name": "id", "type": "DOMString", "readonly": true },
        { "name": "kind", "type": "DOMString", "readonly": true },
        { "name": "label", "type": "DOMString", "readonly": true },
        { "name": "language", "type": "DOMString", "readonly": true },
        { "name": "selected", "type": "boolean" },
        { "name": "sourceBuffer", "type": "SourceBuffer", "nullable": true, "readonly": true }
      ]
    }, {
      "name": "VideoTrackList", "extends": "EventTarget",
      "exposed": ["Window"],
      "anonymousOperations": [{
        "type": "VideoTrack", "getter": true,
        "arguments": [{ "name": "index", "type": "unsigned long" }]
      }],
      "operations": [{
        "name": "getTrackById", "type": "VideoTrack", "nullable": true,
        "arguments": [{ "name": "id", "type": "DOMString" }]
      }],
      "attributes": [
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "onaddtrack", "type": "EventHandler" },
        { "name": "onchange", "type": "EventHandler" },
        { "name": "onremovetrack", "type": "EventHandler" },
        { "name": "selectedIndex", "type": "long", "readonly": true }
      ]
    }, {
      "name": "WaveShaperNode", "extends": "AudioNode",
      "exposed": ["Window"],
      "constructors": [{
        "arguments": [
          { "name": "context", "type": "BaseAudioContext" },
          { "name": "options", "type": "WaveShaperOptions", "optional": true }
        ]
      }],
      "attributes": [
        { "name": "curve", "type": "Float32Array", "nullable": true },
        { "name": "oversample", "type": "OverSampleType" }
      ]
    }, {
      "name": "WEBGL_compressed_texture_s3tc", "noInterfaceObject": true,
      "constants": [
        { "name": "COMPRESSED_RGB_S3TC_DXT1_EXT", "type": "GLenum", "value": "33776" },
        { "name": "COMPRESSED_RGBA_S3TC_DXT1_EXT", "type": "GLenum", "value": "33777" },
        { "name": "COMPRESSED_RGBA_S3TC_DXT3_EXT", "type": "GLenum", "value": "33778" },
        { "name": "COMPRESSED_RGBA_S3TC_DXT5_EXT", "type": "GLenum", "value": "33779" }
      ]
    }, {
      "name": "WEBGL_debug_renderer_info", "noInterfaceObject": true,
      "constants": [
        { "name": "UNMASKED_RENDERER_WEBGL", "type": "GLenum", "value": "37446" },
        { "name": "UNMASKED_VENDOR_WEBGL", "type": "GLenum", "value": "37445" }
      ]
    }, {
      "name": "WEBGL_depth_texture", "noInterfaceObject": true,
      "constants": [{ "name": "UNSIGNED_INT_24_8_WEBGL", "type": "GLenum", "value": "34042" }]
    }, {
      "name": "WebGLActiveInfo",
      "attributes": [
        { "name": "name", "type": "DOMString", "readonly": true },
        { "name": "size", "type": "GLint", "readonly": true },
        { "name": "type", "type": "GLenum", "readonly": true }
      ]
    },
    { "name": "WebGLBuffer", "extends": "WebGLObject" },
    {
      "name": "WebGLContextEvent", "extends": "Event",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInit", "type": "WebGLContextEventInit", "optional": true }
        ]
      }],
      "attributes": [{ "name": "statusMessage", "type": "DOMString", "readonly": true }]
    },
    { "name": "WebGLFramebuffer", "extends": "WebGLObject" },
    { "name": "WebGLObject" },
    { "name": "WebGLProgram", "extends": "WebGLObject" },
    { "name": "WebGLRenderbuffer", "extends": "WebGLObject" },
    {
      "name": "WebGLRenderingContext",
      "implements": ["WebGLRenderingContextBase"]
    }, {
      "name": "WebGLRenderingContextBase", "noInterfaceObject": true,
      "constants": [
        { "name": "ACTIVE_ATTRIBUTES", "type": "GLenum", "value": "35721" },
        { "name": "ACTIVE_TEXTURE", "type": "GLenum", "value": "34016" },
        { "name": "ACTIVE_UNIFORMS", "type": "GLenum", "value": "35718" },
        { "name": "ALIASED_LINE_WIDTH_RANGE", "type": "GLenum", "value": "33902" },
        { "name": "ALIASED_POINT_SIZE_RANGE", "type": "GLenum", "value": "33901" },
        { "name": "ALPHA", "type": "GLenum", "value": "6406" },
        { "name": "ALPHA_BITS", "type": "GLenum", "value": "3413" },
        { "name": "ALWAYS", "type": "GLenum", "value": "519" },
        { "name": "ARRAY_BUFFER", "type": "GLenum", "value": "34962" },
        { "name": "ARRAY_BUFFER_BINDING", "type": "GLenum", "value": "34964" },
        { "name": "ATTACHED_SHADERS", "type": "GLenum", "value": "35717" },
        { "name": "BACK", "type": "GLenum", "value": "1029" },
        { "name": "BLEND", "type": "GLenum", "value": "3042" },
        { "name": "BLEND_COLOR", "type": "GLenum", "value": "32773" },
        { "name": "BLEND_DST_ALPHA", "type": "GLenum", "value": "32970" },
        { "name": "BLEND_DST_RGB", "type": "GLenum", "value": "32968" },
        { "name": "BLEND_EQUATION", "type": "GLenum", "value": "32777" },
        { "name": "BLEND_EQUATION_ALPHA", "type": "GLenum", "value": "34877" },
        { "name": "BLEND_EQUATION_RGB", "type": "GLenum", "value": "32777" },
        { "name": "BLEND_SRC_ALPHA", "type": "GLenum", "value": "32971" },
        { "name": "BLEND_SRC_RGB", "type": "GLenum", "value": "32969" },
        { "name": "BLUE_BITS", "type": "GLenum", "value": "3412" },
        { "name": "BOOL", "type": "GLenum", "value": "35670" },
        { "name": "BOOL_VEC2", "type": "GLenum", "value": "35671" },
        { "name": "BOOL_VEC3", "type": "GLenum", "value": "35672" },
        { "name": "BOOL_VEC4", "type": "GLenum", "value": "35673" },
        { "name": "BROWSER_DEFAULT_WEBGL", "type": "GLenum", "value": "37444" },
        { "name": "BUFFER_SIZE", "type": "GLenum", "value": "34660" },
        { "name": "BUFFER_USAGE", "type": "GLenum", "value": "34661" },
        { "name": "BYTE", "type": "GLenum", "value": "5120" },
        { "name": "CCW", "type": "GLenum", "value": "2305" },
        { "name": "CLAMP_TO_EDGE", "type": "GLenum", "value": "33071" },
        { "name": "COLOR_ATTACHMENT0", "type": "GLenum", "value": "36064" },
        { "name": "COLOR_BUFFER_BIT", "type": "GLenum", "value": "16384" },
        { "name": "COLOR_CLEAR_VALUE", "type": "GLenum", "value": "3106" },
        { "name": "COLOR_WRITEMASK", "type": "GLenum", "value": "3107" },
        { "name": "COMPILE_STATUS", "type": "GLenum", "value": "35713" },
        { "name": "COMPRESSED_TEXTURE_FORMATS", "type": "GLenum", "value": "34467" },
        { "name": "CONSTANT_ALPHA", "type": "GLenum", "value": "32771" },
        { "name": "CONSTANT_COLOR", "type": "GLenum", "value": "32769" },
        { "name": "CONTEXT_LOST_WEBGL", "type": "GLenum", "value": "37442" },
        { "name": "CULL_FACE", "type": "GLenum", "value": "2884" },
        { "name": "CULL_FACE_MODE", "type": "GLenum", "value": "2885" },
        { "name": "CURRENT_PROGRAM", "type": "GLenum", "value": "35725" },
        { "name": "CURRENT_VERTEX_ATTRIB", "type": "GLenum", "value": "34342" },
        { "name": "CW", "type": "GLenum", "value": "2304" },
        { "name": "DECR", "type": "GLenum", "value": "7683" },
        { "name": "DECR_WRAP", "type": "GLenum", "value": "34056" },
        { "name": "DELETE_STATUS", "type": "GLenum", "value": "35712" },
        { "name": "DEPTH_ATTACHMENT", "type": "GLenum", "value": "36096" },
        { "name": "DEPTH_BITS", "type": "GLenum", "value": "3414" },
        { "name": "DEPTH_BUFFER_BIT", "type": "GLenum", "value": "256" },
        { "name": "DEPTH_CLEAR_VALUE", "type": "GLenum", "value": "2931" },
        { "name": "DEPTH_COMPONENT", "type": "GLenum", "value": "6402" },
        { "name": "DEPTH_COMPONENT16", "type": "GLenum", "value": "33189" },
        { "name": "DEPTH_FUNC", "type": "GLenum", "value": "2932" },
        { "name": "DEPTH_RANGE", "type": "GLenum", "value": "2928" },
        { "name": "DEPTH_STENCIL", "type": "GLenum", "value": "34041" },
        { "name": "DEPTH_STENCIL_ATTACHMENT", "type": "GLenum", "value": "33306" },
        { "name": "DEPTH_TEST", "type": "GLenum", "value": "2929" },
        { "name": "DEPTH_WRITEMASK", "type": "GLenum", "value": "2930" },
        { "name": "DITHER", "type": "GLenum", "value": "3024" },
        { "name": "DONT_CARE", "type": "GLenum", "value": "4352" },
        { "name": "DST_ALPHA", "type": "GLenum", "value": "772" },
        { "name": "DST_COLOR", "type": "GLenum", "value": "774" },
        { "name": "DYNAMIC_DRAW", "type": "GLenum", "value": "35048" },
        { "name": "ELEMENT_ARRAY_BUFFER", "type": "GLenum", "value": "34963" },
        { "name": "ELEMENT_ARRAY_BUFFER_BINDING", "type": "GLenum", "value": "34965" },
        { "name": "EQUAL", "type": "GLenum", "value": "514" },
        { "name": "FASTEST", "type": "GLenum", "value": "4353" },
        { "name": "FLOAT", "type": "GLenum", "value": "5126" },
        { "name": "FLOAT_MAT2", "type": "GLenum", "value": "35674" },
        { "name": "FLOAT_MAT3", "type": "GLenum", "value": "35675" },
        { "name": "FLOAT_MAT4", "type": "GLenum", "value": "35676" },
        { "name": "FLOAT_VEC2", "type": "GLenum", "value": "35664" },
        { "name": "FLOAT_VEC3", "type": "GLenum", "value": "35665" },
        { "name": "FLOAT_VEC4", "type": "GLenum", "value": "35666" },
        { "name": "FRAGMENT_SHADER", "type": "GLenum", "value": "35632" },
        { "name": "FRAMEBUFFER", "type": "GLenum", "value": "36160" },
        { "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_NAME", "type": "GLenum", "value": "36049" },
        { "name": "FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE", "type": "GLenum", "value": "36048" },
        { "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE", "type": "GLenum", "value": "36051" },
        { "name": "FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL", "type": "GLenum", "value": "36050" },
        { "name": "FRAMEBUFFER_BINDING", "type": "GLenum", "value": "36006" },
        { "name": "FRAMEBUFFER_COMPLETE", "type": "GLenum", "value": "36053" },
        { "name": "FRAMEBUFFER_INCOMPLETE_ATTACHMENT", "type": "GLenum", "value": "36054" },
        { "name": "FRAMEBUFFER_INCOMPLETE_DIMENSIONS", "type": "GLenum", "value": "36057" },
        { "name": "FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT", "type": "GLenum", "value": "36055" },
        { "name": "FRAMEBUFFER_UNSUPPORTED", "type": "GLenum", "value": "36061" },
        { "name": "FRONT", "type": "GLenum", "value": "1028" },
        { "name": "FRONT_AND_BACK", "type": "GLenum", "value": "1032" },
        { "name": "FRONT_FACE", "type": "GLenum", "value": "2886" },
        { "name": "FUNC_ADD", "type": "GLenum", "value": "32774" },
        { "name": "FUNC_REVERSE_SUBTRACT", "type": "GLenum", "value": "32779" },
        { "name": "FUNC_SUBTRACT", "type": "GLenum", "value": "32778" },
        { "name": "GENERATE_MIPMAP_HINT", "type": "GLenum", "value": "33170" },
        { "name": "GEQUAL", "type": "GLenum", "value": "518" },
        { "name": "GREATER", "type": "GLenum", "value": "516" },
        { "name": "GREEN_BITS", "type": "GLenum", "value": "3411" },
        { "name": "HIGH_FLOAT", "type": "GLenum", "value": "36338" },
        { "name": "HIGH_INT", "type": "GLenum", "value": "36341" },
        { "name": "IMPLEMENTATION_COLOR_READ_FORMAT", "type": "GLenum", "value": "35739" },
        { "name": "IMPLEMENTATION_COLOR_READ_TYPE", "type": "GLenum", "value": "35738" },
        { "name": "INCR", "type": "GLenum", "value": "7682" },
        { "name": "INCR_WRAP", "type": "GLenum", "value": "34055" },
        { "name": "INT", "type": "GLenum", "value": "5124" },
        { "name": "INT_VEC2", "type": "GLenum", "value": "35667" },
        { "name": "INT_VEC3", "type": "GLenum", "value": "35668" },
        { "name": "INT_VEC4", "type": "GLenum", "value": "35669" },
        { "name": "INVALID_ENUM", "type": "GLenum", "value": "1280" },
        { "name": "INVALID_FRAMEBUFFER_OPERATION", "type": "GLenum", "value": "1286" },
        { "name": "INVALID_OPERATION", "type": "GLenum", "value": "1282" },
        { "name": "INVALID_VALUE", "type": "GLenum", "value": "1281" },
        { "name": "INVERT", "type": "GLenum", "value": "5386" },
        { "name": "KEEP", "type": "GLenum", "value": "7680" },
        { "name": "LEQUAL", "type": "GLenum", "value": "515" },
        { "name": "LESS", "type": "GLenum", "value": "513" },
        { "name": "LINE_LOOP", "type": "GLenum", "value": "2" },
        { "name": "LINE_STRIP", "type": "GLenum", "value": "3" },
        { "name": "LINE_WIDTH", "type": "GLenum", "value": "2849" },
        { "name": "LINEAR", "type": "GLenum", "value": "9729" },
        { "name": "LINEAR_MIPMAP_LINEAR", "type": "GLenum", "value": "9987" },
        { "name": "LINEAR_MIPMAP_NEAREST", "type": "GLenum", "value": "9985" },
        { "name": "LINES", "type": "GLenum", "value": "1" },
        { "name": "LINK_STATUS", "type": "GLenum", "value": "35714" },
        { "name": "LOW_FLOAT", "type": "GLenum", "value": "36336" },
        { "name": "LOW_INT", "type": "GLenum", "value": "36339" },
        { "name": "LUMINANCE", "type": "GLenum", "value": "6409" },
        { "name": "LUMINANCE_ALPHA", "type": "GLenum", "value": "6410" },
        { "name": "MAX_COMBINED_TEXTURE_IMAGE_UNITS", "type": "GLenum", "value": "35661" },
        { "name": "MAX_CUBE_MAP_TEXTURE_SIZE", "type": "GLenum", "value": "34076" },
        { "name": "MAX_FRAGMENT_UNIFORM_VECTORS", "type": "GLenum", "value": "36349" },
        { "name": "MAX_RENDERBUFFER_SIZE", "type": "GLenum", "value": "34024" },
        { "name": "MAX_TEXTURE_IMAGE_UNITS", "type": "GLenum", "value": "34930" },
        { "name": "MAX_TEXTURE_SIZE", "type": "GLenum", "value": "3379" },
        { "name": "MAX_VARYING_VECTORS", "type": "GLenum", "value": "36348" },
        { "name": "MAX_VERTEX_ATTRIBS", "type": "GLenum", "value": "34921" },
        { "name": "MAX_VERTEX_TEXTURE_IMAGE_UNITS", "type": "GLenum", "value": "35660" },
        { "name": "MAX_VERTEX_UNIFORM_VECTORS", "type": "GLenum", "value": "36347" },
        { "name": "MAX_VIEWPORT_DIMS", "type": "GLenum", "value": "3386" },
        { "name": "MEDIUM_FLOAT", "type": "GLenum", "value": "36337" },
        { "name": "MEDIUM_INT", "type": "GLenum", "value": "36340" },
        { "name": "MIRRORED_REPEAT", "type": "GLenum", "value": "33648" },
        { "name": "NEAREST", "type": "GLenum", "value": "9728" },
        { "name": "NEAREST_MIPMAP_LINEAR", "type": "GLenum", "value": "9986" },
        { "name": "NEAREST_MIPMAP_NEAREST", "type": "GLenum", "value": "9984" },
        { "name": "NEVER", "type": "GLenum", "value": "512" },
        { "name": "NICEST", "type": "GLenum", "value": "4354" },
        { "name": "NO_ERROR", "type": "GLenum", "value": "0" },
        { "name": "NONE", "type": "GLenum", "value": "0" },
        { "name": "NOTEQUAL", "type": "GLenum", "value": "517" },
        { "name": "ONE", "type": "GLenum", "value": "1" },
        { "name": "ONE_MINUS_CONSTANT_ALPHA", "type": "GLenum", "value": "32772" },
        { "name": "ONE_MINUS_CONSTANT_COLOR", "type": "GLenum", "value": "32770" },
        { "name": "ONE_MINUS_DST_ALPHA", "type": "GLenum", "value": "773" },
        { "name": "ONE_MINUS_DST_COLOR", "type": "GLenum", "value": "775" },
        { "name": "ONE_MINUS_SRC_ALPHA", "type": "GLenum", "value": "771" },
        { "name": "ONE_MINUS_SRC_COLOR", "type": "GLenum", "value": "769" },
        { "name": "OUT_OF_MEMORY", "type": "GLenum", "value": "1285" },
        { "name": "PACK_ALIGNMENT", "type": "GLenum", "value": "3333" },
        { "name": "POINTS", "type": "GLenum", "value": "0" },
        { "name": "POLYGON_OFFSET_FACTOR", "type": "GLenum", "value": "32824" },
        { "name": "POLYGON_OFFSET_FILL", "type": "GLenum", "value": "32823" },
        { "name": "POLYGON_OFFSET_UNITS", "type": "GLenum", "value": "10752" },
        { "name": "RED_BITS", "type": "GLenum", "value": "3410" },
        { "name": "RENDERBUFFER", "type": "GLenum", "value": "36161" },
        { "name": "RENDERBUFFER_ALPHA_SIZE", "type": "GLenum", "value": "36179" },
        { "name": "RENDERBUFFER_BINDING", "type": "GLenum", "value": "36007" },
        { "name": "RENDERBUFFER_BLUE_SIZE", "type": "GLenum", "value": "36178" },
        { "name": "RENDERBUFFER_DEPTH_SIZE", "type": "GLenum", "value": "36180" },
        { "name": "RENDERBUFFER_GREEN_SIZE", "type": "GLenum", "value": "36177" },
        { "name": "RENDERBUFFER_HEIGHT", "type": "GLenum", "value": "36163" },
        { "name": "RENDERBUFFER_INTERNAL_FORMAT", "type": "GLenum", "value": "36164" },
        { "name": "RENDERBUFFER_RED_SIZE", "type": "GLenum", "value": "36176" },
        { "name": "RENDERBUFFER_STENCIL_SIZE", "type": "GLenum", "value": "36181" },
        { "name": "RENDERBUFFER_WIDTH", "type": "GLenum", "value": "36162" },
        { "name": "RENDERER", "type": "GLenum", "value": "7937" },
        { "name": "REPEAT", "type": "GLenum", "value": "10497" },
        { "name": "REPLACE", "type": "GLenum", "value": "7681" },
        { "name": "RGB", "type": "GLenum", "value": "6407" },
        { "name": "RGB5_A1", "type": "GLenum", "value": "32855" },
        { "name": "RGB565", "type": "GLenum", "value": "36194" },
        { "name": "RGBA", "type": "GLenum", "value": "6408" },
        { "name": "RGBA4", "type": "GLenum", "value": "32854" },
        { "name": "SAMPLE_ALPHA_TO_COVERAGE", "type": "GLenum", "value": "32926" },
        { "name": "SAMPLE_BUFFERS", "type": "GLenum", "value": "32936" },
        { "name": "SAMPLE_COVERAGE", "type": "GLenum", "value": "32928" },
        { "name": "SAMPLE_COVERAGE_INVERT", "type": "GLenum", "value": "32939" },
        { "name": "SAMPLE_COVERAGE_VALUE", "type": "GLenum", "value": "32938" },
        { "name": "SAMPLER_2D", "type": "GLenum", "value": "35678" },
        { "name": "SAMPLER_CUBE", "type": "GLenum", "value": "35680" },
        { "name": "SAMPLES", "type": "GLenum", "value": "32937" },
        { "name": "SCISSOR_BOX", "type": "GLenum", "value": "3088" },
        { "name": "SCISSOR_TEST", "type": "GLenum", "value": "3089" },
        { "name": "SHADER_TYPE", "type": "GLenum", "value": "35663" },
        { "name": "SHADING_LANGUAGE_VERSION", "type": "GLenum", "value": "35724" },
        { "name": "SHORT", "type": "GLenum", "value": "5122" },
        { "name": "SRC_ALPHA", "type": "GLenum", "value": "770" },
        { "name": "SRC_ALPHA_SATURATE", "type": "GLenum", "value": "776" },
        { "name": "SRC_COLOR", "type": "GLenum", "value": "768" },
        { "name": "STATIC_DRAW", "type": "GLenum", "value": "35044" },
        { "name": "STENCIL_ATTACHMENT", "type": "GLenum", "value": "36128" },
        { "name": "STENCIL_BACK_FAIL", "type": "GLenum", "value": "34817" },
        { "name": "STENCIL_BACK_FUNC", "type": "GLenum", "value": "34816" },
        { "name": "STENCIL_BACK_PASS_DEPTH_FAIL", "type": "GLenum", "value": "34818" },
        { "name": "STENCIL_BACK_PASS_DEPTH_PASS", "type": "GLenum", "value": "34819" },
        { "name": "STENCIL_BACK_REF", "type": "GLenum", "value": "36003" },
        { "name": "STENCIL_BACK_VALUE_MASK", "type": "GLenum", "value": "36004" },
        { "name": "STENCIL_BACK_WRITEMASK", "type": "GLenum", "value": "36005" },
        { "name": "STENCIL_BITS", "type": "GLenum", "value": "3415" },
        { "name": "STENCIL_BUFFER_BIT", "type": "GLenum", "value": "1024" },
        { "name": "STENCIL_CLEAR_VALUE", "type": "GLenum", "value": "2961" },
        { "name": "STENCIL_FAIL", "type": "GLenum", "value": "2964" },
        { "name": "STENCIL_FUNC", "type": "GLenum", "value": "2962" },
        { "name": "STENCIL_INDEX8", "type": "GLenum", "value": "36168" },
        { "name": "STENCIL_PASS_DEPTH_FAIL", "type": "GLenum", "value": "2965" },
        { "name": "STENCIL_PASS_DEPTH_PASS", "type": "GLenum", "value": "2966" },
        { "name": "STENCIL_REF", "type": "GLenum", "value": "2967" },
        { "name": "STENCIL_TEST", "type": "GLenum", "value": "2960" },
        { "name": "STENCIL_VALUE_MASK", "type": "GLenum", "value": "2963" },
        { "name": "STENCIL_WRITEMASK", "type": "GLenum", "value": "2968" },
        { "name": "STREAM_DRAW", "type": "GLenum", "value": "35040" },
        { "name": "SUBPIXEL_BITS", "type": "GLenum", "value": "3408" },
        { "name": "TEXTURE", "type": "GLenum", "value": "5890" },
        { "name": "TEXTURE_2D", "type": "GLenum", "value": "3553" },
        { "name": "TEXTURE_BINDING_2D", "type": "GLenum", "value": "32873" },
        { "name": "TEXTURE_BINDING_CUBE_MAP", "type": "GLenum", "value": "34068" },
        { "name": "TEXTURE_CUBE_MAP", "type": "GLenum", "value": "34067" },
        { "name": "TEXTURE_CUBE_MAP_NEGATIVE_X", "type": "GLenum", "value": "34070" },
        { "name": "TEXTURE_CUBE_MAP_NEGATIVE_Y", "type": "GLenum", "value": "34072" },
        { "name": "TEXTURE_CUBE_MAP_NEGATIVE_Z", "type": "GLenum", "value": "34074" },
        { "name": "TEXTURE_CUBE_MAP_POSITIVE_X", "type": "GLenum", "value": "34069" },
        { "name": "TEXTURE_CUBE_MAP_POSITIVE_Y", "type": "GLenum", "value": "34071" },
        { "name": "TEXTURE_CUBE_MAP_POSITIVE_Z", "type": "GLenum", "value": "34073" },
        { "name": "TEXTURE_MAG_FILTER", "type": "GLenum", "value": "10240" },
        { "name": "TEXTURE_MIN_FILTER", "type": "GLenum", "value": "10241" },
        { "name": "TEXTURE_WRAP_S", "type": "GLenum", "value": "10242" },
        { "name": "TEXTURE_WRAP_T", "type": "GLenum", "value": "10243" },
        { "name": "TEXTURE0", "type": "GLenum", "value": "33984" },
        { "name": "TEXTURE1", "type": "GLenum", "value": "33985" },
        { "name": "TEXTURE10", "type": "GLenum", "value": "33994" },
        { "name": "TEXTURE11", "type": "GLenum", "value": "33995" },
        { "name": "TEXTURE12", "type": "GLenum", "value": "33996" },
        { "name": "TEXTURE13", "type": "GLenum", "value": "33997" },
        { "name": "TEXTURE14", "type": "GLenum", "value": "33998" },
        { "name": "TEXTURE15", "type": "GLenum", "value": "33999" },
        { "name": "TEXTURE16", "type": "GLenum", "value": "34000" },
        { "name": "TEXTURE17", "type": "GLenum", "value": "34001" },
        { "name": "TEXTURE18", "type": "GLenum", "value": "34002" },
        { "name": "TEXTURE19", "type": "GLenum", "value": "34003" },
        { "name": "TEXTURE2", "type": "GLenum", "value": "33986" },
        { "name": "TEXTURE20", "type": "GLenum", "value": "34004" },
        { "name": "TEXTURE21", "type": "GLenum", "value": "34005" },
        { "name": "TEXTURE22", "type": "GLenum", "value": "34006" },
        { "name": "TEXTURE23", "type": "GLenum", "value": "34007" },
        { "name": "TEXTURE24", "type": "GLenum", "value": "34008" },
        { "name": "TEXTURE25", "type": "GLenum", "value": "34009" },
        { "name": "TEXTURE26", "type": "GLenum", "value": "34010" },
        { "name": "TEXTURE27", "type": "GLenum", "value": "34011" },
        { "name": "TEXTURE28", "type": "GLenum", "value": "34012" },
        { "name": "TEXTURE29", "type": "GLenum", "value": "34013" },
        { "name": "TEXTURE3", "type": "GLenum", "value": "33987" },
        { "name": "TEXTURE30", "type": "GLenum", "value": "34014" },
        { "name": "TEXTURE31", "type": "GLenum", "value": "34015" },
        { "name": "TEXTURE4", "type": "GLenum", "value": "33988" },
        { "name": "TEXTURE5", "type": "GLenum", "value": "33989" },
        { "name": "TEXTURE6", "type": "GLenum", "value": "33990" },
        { "name": "TEXTURE7", "type": "GLenum", "value": "33991" },
        { "name": "TEXTURE8", "type": "GLenum", "value": "33992" },
        { "name": "TEXTURE9", "type": "GLenum", "value": "33993" },
        { "name": "TRIANGLE_FAN", "type": "GLenum", "value": "6" },
        { "name": "TRIANGLE_STRIP", "type": "GLenum", "value": "5" },
        { "name": "TRIANGLES", "type": "GLenum", "value": "4" },
        { "name": "UNPACK_ALIGNMENT", "type": "GLenum", "value": "3317" },
        { "name": "UNPACK_COLORSPACE_CONVERSION_WEBGL", "type": "GLenum", "value": "37443" },
        { "name": "UNPACK_FLIP_Y_WEBGL", "type": "GLenum", "value": "37440" },
        { "name": "UNPACK_PREMULTIPLY_ALPHA_WEBGL", "type": "GLenum", "value": "37441" },
        { "name": "UNSIGNED_BYTE", "type": "GLenum", "value": "5121" },
        { "name": "UNSIGNED_INT", "type": "GLenum", "value": "5125" },
        { "name": "UNSIGNED_SHORT", "type": "GLenum", "value": "5123" },
        { "name": "UNSIGNED_SHORT_4_4_4_4", "type": "GLenum", "value": "32819" },
        { "name": "UNSIGNED_SHORT_5_5_5_1", "type": "GLenum", "value": "32820" },
        { "name": "UNSIGNED_SHORT_5_6_5", "type": "GLenum", "value": "33635" },
        { "name": "VALIDATE_STATUS", "type": "GLenum", "value": "35715" },
        { "name": "VENDOR", "type": "GLenum", "value": "7936" },
        { "name": "VERSION", "type": "GLenum", "value": "7938" },
        { "name": "VERTEX_ATTRIB_ARRAY_BUFFER_BINDING", "type": "GLenum", "value": "34975" },
        { "name": "VERTEX_ATTRIB_ARRAY_ENABLED", "type": "GLenum", "value": "34338" },
        { "name": "VERTEX_ATTRIB_ARRAY_NORMALIZED", "type": "GLenum", "value": "34922" },
        { "name": "VERTEX_ATTRIB_ARRAY_POINTER", "type": "GLenum", "value": "34373" },
        { "name": "VERTEX_ATTRIB_ARRAY_SIZE", "type": "GLenum", "value": "34339" },
        { "name": "VERTEX_ATTRIB_ARRAY_STRIDE", "type": "GLenum", "value": "34340" },
        { "name": "VERTEX_ATTRIB_ARRAY_TYPE", "type": "GLenum", "value": "34341" },
        { "name": "VERTEX_SHADER", "type": "GLenum", "value": "35633" },
        { "name": "VIEWPORT", "type": "GLenum", "value": "2978" },
        { "name": "ZERO", "type": "GLenum", "value": "0" }
      ],
      "operations": [
        {
          "name": "activeTexture", "type": "void",
          "arguments": [{ "name": "texture", "type": "GLenum" }]
        }, {
          "name": "attachShader", "type": "void",
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "shader", "type": "WebGLShader" }
          ]
        }, {
          "name": "bindAttribLocation", "type": "void",
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "index", "type": "GLuint" },
            { "name": "name", "type": "DOMString" }
          ]
        }, {
          "name": "bindBuffer", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "buffer", "type": "WebGLBuffer", "nullable": true }
          ]
        }, {
          "name": "bindFramebuffer", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "framebuffer", "type": "WebGLFramebuffer", "nullable": true }
          ]
        }, {
          "name": "bindRenderbuffer", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "renderbuffer", "type": "WebGLRenderbuffer", "nullable": true }
          ]
        }, {
          "name": "bindTexture", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "texture", "type": "WebGLTexture", "nullable": true }
          ]
        }, {
          "name": "blendColor", "type": "void",
          "arguments": [
            { "name": "red", "type": "GLclampf" },
            { "name": "green", "type": "GLclampf" },
            { "name": "blue", "type": "GLclampf" },
            { "name": "alpha", "type": "GLclampf" }
          ]
        }, {
          "name": "blendEquation", "type": "void",
          "arguments": [{ "name": "mode", "type": "GLenum" }]
        }, {
          "name": "blendEquationSeparate", "type": "void",
          "arguments": [
            { "name": "modeRGB", "type": "GLenum" },
            { "name": "modeAlpha", "type": "GLenum" }
          ]
        }, {
          "name": "blendFunc", "type": "void",
          "arguments": [
            { "name": "sfactor", "type": "GLenum" },
            { "name": "dfactor", "type": "GLenum" }
          ]
        }, {
          "name": "blendFuncSeparate", "type": "void",
          "arguments": [
            { "name": "srcRGB", "type": "GLenum" },
            { "name": "dstRGB", "type": "GLenum" },
            { "name": "srcAlpha", "type": "GLenum" },
            { "name": "dstAlpha", "type": "GLenum" }
          ]
        }, {
          "name": "bufferData", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "size", "type": "GLsizeiptr" },
            { "name": "usage", "type": "GLenum" }
          ]
        }, {
          "name": "bufferData", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "data", "type": "BufferSource", "nullable": true },
            { "name": "usage", "type": "GLenum" }
          ]
        }, {
          "name": "bufferSubData", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "offset", "type": "GLintptr" },
            { "name": "data", "type": "BufferSource" }
          ]
        }, {
          "name": "checkFramebufferStatus", "type": "GLenum",
          "arguments": [{ "name": "target", "type": "GLenum" }]
        }, {
          "name": "clear", "type": "void",
          "arguments": [{ "name": "mask", "type": "GLbitfield" }]
        }, {
          "name": "clearColor", "type": "void",
          "arguments": [
            { "name": "red", "type": "GLclampf" },
            { "name": "green", "type": "GLclampf" },
            { "name": "blue", "type": "GLclampf" },
            { "name": "alpha", "type": "GLclampf" }
          ]
        }, {
          "name": "clearDepth", "type": "void",
          "arguments": [{ "name": "depth", "type": "GLclampf" }]
        }, {
          "name": "clearStencil", "type": "void",
          "arguments": [{ "name": "s", "type": "GLint" }]
        }, {
          "name": "colorMask", "type": "void",
          "arguments": [
            { "name": "red", "type": "GLboolean" },
            { "name": "green", "type": "GLboolean" },
            { "name": "blue", "type": "GLboolean" },
            { "name": "alpha", "type": "GLboolean" }
          ]
        }, {
          "name": "compileShader", "type": "void",
          "arguments": [{ "name": "shader", "type": "WebGLShader" }]
        }, {
          "name": "compressedTexImage2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "level", "type": "GLint" },
            { "name": "internalformat", "type": "GLenum" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" },
            { "name": "border", "type": "GLint" },
            { "name": "data", "type": "ArrayBufferView" }
          ]
        }, {
          "name": "compressedTexSubImage2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "level", "type": "GLint" },
            { "name": "xoffset", "type": "GLint" },
            { "name": "yoffset", "type": "GLint" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" },
            { "name": "format", "type": "GLenum" },
            { "name": "data", "type": "ArrayBufferView" }
          ]
        }, {
          "name": "copyTexImage2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "level", "type": "GLint" },
            { "name": "internalformat", "type": "GLenum" },
            { "name": "x", "type": "GLint" },
            { "name": "y", "type": "GLint" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" },
            { "name": "border", "type": "GLint" }
          ]
        }, {
          "name": "copyTexSubImage2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "level", "type": "GLint" },
            { "name": "xoffset", "type": "GLint" },
            { "name": "yoffset", "type": "GLint" },
            { "name": "x", "type": "GLint" },
            { "name": "y", "type": "GLint" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" }
          ]
        },
        { "name": "createBuffer", "type": "WebGLBuffer", "nullable": true, "arguments": [] },
        { "name": "createFramebuffer", "type": "WebGLFramebuffer", "nullable": true, "arguments": [] },
        { "name": "createProgram", "type": "WebGLProgram", "nullable": true, "arguments": [] },
        { "name": "createRenderbuffer", "type": "WebGLRenderbuffer", "nullable": true, "arguments": [] },
        {
          "name": "createShader", "type": "WebGLShader", "nullable": true,
          "arguments": [{ "name": "type", "type": "GLenum" }]
        },
        { "name": "createTexture", "type": "WebGLTexture", "nullable": true, "arguments": [] },
        {
          "name": "cullFace", "type": "void",
          "arguments": [{ "name": "mode", "type": "GLenum" }]
        }, {
          "name": "deleteBuffer", "type": "void",
          "arguments": [{ "name": "buffer", "type": "WebGLBuffer", "nullable": true }]
        }, {
          "name": "deleteFramebuffer", "type": "void",
          "arguments": [{ "name": "framebuffer", "type": "WebGLFramebuffer", "nullable": true }]
        }, {
          "name": "deleteProgram", "type": "void",
          "arguments": [{ "name": "program", "type": "WebGLProgram", "nullable": true }]
        }, {
          "name": "deleteRenderbuffer", "type": "void",
          "arguments": [{ "name": "renderbuffer", "type": "WebGLRenderbuffer", "nullable": true }]
        }, {
          "name": "deleteShader", "type": "void",
          "arguments": [{ "name": "shader", "type": "WebGLShader", "nullable": true }]
        }, {
          "name": "deleteTexture", "type": "void",
          "arguments": [{ "name": "texture", "type": "WebGLTexture", "nullable": true }]
        }, {
          "name": "depthFunc", "type": "void",
          "arguments": [{ "name": "func", "type": "GLenum" }]
        }, {
          "name": "depthMask", "type": "void",
          "arguments": [{ "name": "flag", "type": "GLboolean" }]
        }, {
          "name": "depthRange", "type": "void",
          "arguments": [
            { "name": "zNear", "type": "GLclampf" },
            { "name": "zFar", "type": "GLclampf" }
          ]
        }, {
          "name": "detachShader", "type": "void",
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "shader", "type": "WebGLShader" }
          ]
        }, {
          "name": "disable", "type": "void",
          "arguments": [{ "name": "cap", "type": "GLenum" }]
        }, {
          "name": "disableVertexAttribArray", "type": "void",
          "arguments": [{ "name": "index", "type": "GLuint" }]
        }, {
          "name": "drawArrays", "type": "void",
          "arguments": [
            { "name": "mode", "type": "GLenum" },
            { "name": "first", "type": "GLint" },
            { "name": "count", "type": "GLsizei" }
          ]
        }, {
          "name": "drawElements", "type": "void",
          "arguments": [
            { "name": "mode", "type": "GLenum" },
            { "name": "count", "type": "GLsizei" },
            { "name": "type", "type": "GLenum" },
            { "name": "offset", "type": "GLintptr" }
          ]
        }, {
          "name": "enable", "type": "void",
          "arguments": [{ "name": "cap", "type": "GLenum" }]
        }, {
          "name": "enableVertexAttribArray", "type": "void",
          "arguments": [{ "name": "index", "type": "GLuint" }]
        },
        { "name": "finish", "type": "void", "arguments": [] },
        { "name": "flush", "type": "void", "arguments": [] },
        {
          "name": "framebufferRenderbuffer", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "attachment", "type": "GLenum" },
            { "name": "renderbuffertarget", "type": "GLenum" },
            { "name": "renderbuffer", "type": "WebGLRenderbuffer", "nullable": true }
          ]
        }, {
          "name": "framebufferTexture2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "attachment", "type": "GLenum" },
            { "name": "textarget", "type": "GLenum" },
            { "name": "texture", "type": "WebGLTexture", "nullable": true },
            { "name": "level", "type": "GLint" }
          ]
        }, {
          "name": "frontFace", "type": "void",
          "arguments": [{ "name": "mode", "type": "GLenum" }]
        }, {
          "name": "generateMipmap", "type": "void",
          "arguments": [{ "name": "target", "type": "GLenum" }]
        }, {
          "name": "getActiveAttrib", "type": "WebGLActiveInfo", "nullable": true,
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "index", "type": "GLuint" }
          ]
        }, {
          "name": "getActiveUniform", "type": "WebGLActiveInfo", "nullable": true,
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "index", "type": "GLuint" }
          ]
        }, {
          "name": "getAttachedShaders", "type": "sequence<WebGLShader>", "nullable": true,
          "arguments": [{ "name": "program", "type": "WebGLProgram" }]
        }, {
          "name": "getAttribLocation", "type": "GLint",
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "name", "type": "DOMString" }
          ]
        }, {
          "name": "getBufferParameter", "type": "any",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "pname", "type": "GLenum" }
          ]
        },
        { "name": "getContextAttributes", "type": "WebGLContextAttributes", "nullable": true, "arguments": [] },
        { "name": "getError", "type": "GLenum", "arguments": [] },
        {
          "name": "getExtension", "type": "object", "nullable": true,
          "arguments": [{ "name": "name", "type": "DOMString" }]
        }, {
          "name": "getFramebufferAttachmentParameter", "type": "any",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "attachment", "type": "GLenum" },
            { "name": "pname", "type": "GLenum" }
          ]
        }, {
          "name": "getParameter", "type": "any",
          "arguments": [{ "name": "pname", "type": "GLenum" }]
        }, {
          "name": "getProgramInfoLog", "type": "DOMString", "nullable": true,
          "arguments": [{ "name": "program", "type": "WebGLProgram" }]
        }, {
          "name": "getProgramParameter", "type": "any",
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "pname", "type": "GLenum" }
          ]
        }, {
          "name": "getRenderbufferParameter", "type": "any",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "pname", "type": "GLenum" }
          ]
        }, {
          "name": "getShaderInfoLog", "type": "DOMString", "nullable": true,
          "arguments": [{ "name": "shader", "type": "WebGLShader" }]
        }, {
          "name": "getShaderParameter", "type": "any",
          "arguments": [
            { "name": "shader", "type": "WebGLShader" },
            { "name": "pname", "type": "GLenum" }
          ]
        }, {
          "name": "getShaderPrecisionFormat", "type": "WebGLShaderPrecisionFormat", "nullable": true,
          "arguments": [
            { "name": "shadertype", "type": "GLenum" },
            { "name": "precisiontype", "type": "GLenum" }
          ]
        }, {
          "name": "getShaderSource", "type": "DOMString", "nullable": true,
          "arguments": [{ "name": "shader", "type": "WebGLShader" }]
        },
        { "name": "getSupportedExtensions", "type": "sequence<DOMString>", "nullable": true, "arguments": [] },
        {
          "name": "getTexParameter", "type": "any",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "pname", "type": "GLenum" }
          ]
        }, {
          "name": "getUniform", "type": "any",
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "location", "type": "WebGLUniformLocation" }
          ]
        }, {
          "name": "getUniformLocation", "type": "WebGLUniformLocation", "nullable": true,
          "arguments": [
            { "name": "program", "type": "WebGLProgram" },
            { "name": "name", "type": "DOMString" }
          ]
        }, {
          "name": "getVertexAttrib", "type": "any",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "pname", "type": "GLenum" }
          ]
        }, {
          "name": "getVertexAttribOffset", "type": "GLintptr",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "pname", "type": "GLenum" }
          ]
        }, {
          "name": "hint", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "mode", "type": "GLenum" }
          ]
        }, {
          "name": "isBuffer", "type": "GLboolean",
          "arguments": [{ "name": "buffer", "type": "WebGLBuffer", "nullable": true }]
        },
        { "name": "isContextLost", "type": "boolean", "arguments": [] },
        {
          "name": "isEnabled", "type": "GLboolean",
          "arguments": [{ "name": "cap", "type": "GLenum" }]
        }, {
          "name": "isFramebuffer", "type": "GLboolean",
          "arguments": [{ "name": "framebuffer", "type": "WebGLFramebuffer", "nullable": true }]
        }, {
          "name": "isProgram", "type": "GLboolean",
          "arguments": [{ "name": "program", "type": "WebGLProgram", "nullable": true }]
        }, {
          "name": "isRenderbuffer", "type": "GLboolean",
          "arguments": [{ "name": "renderbuffer", "type": "WebGLRenderbuffer", "nullable": true }]
        }, {
          "name": "isShader", "type": "GLboolean",
          "arguments": [{ "name": "shader", "type": "WebGLShader", "nullable": true }]
        }, {
          "name": "isTexture", "type": "GLboolean",
          "arguments": [{ "name": "texture", "type": "WebGLTexture", "nullable": true }]
        }, {
          "name": "lineWidth", "type": "void",
          "arguments": [{ "name": "width", "type": "GLfloat" }]
        }, {
          "name": "linkProgram", "type": "void",
          "arguments": [{ "name": "program", "type": "WebGLProgram" }]
        }, {
          "name": "pixelStorei", "type": "void",
          "arguments": [
            { "name": "pname", "type": "GLenum" },
            { "name": "param", "type": "GLint" }
          ]
        }, {
          "name": "polygonOffset", "type": "void",
          "arguments": [
            { "name": "factor", "type": "GLfloat" },
            { "name": "units", "type": "GLfloat" }
          ]
        }, {
          "name": "readPixels", "type": "void",
          "arguments": [
            { "name": "x", "type": "GLint" },
            { "name": "y", "type": "GLint" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" },
            { "name": "format", "type": "GLenum" },
            { "name": "type", "type": "GLenum" },
            { "name": "pixels", "type": "ArrayBufferView", "nullable": true }
          ]
        }, {
          "name": "renderbufferStorage", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "internalformat", "type": "GLenum" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" }
          ]
        }, {
          "name": "sampleCoverage", "type": "void",
          "arguments": [
            { "name": "value", "type": "GLclampf" },
            { "name": "invert", "type": "GLboolean" }
          ]
        }, {
          "name": "scissor", "type": "void",
          "arguments": [
            { "name": "x", "type": "GLint" },
            { "name": "y", "type": "GLint" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" }
          ]
        }, {
          "name": "shaderSource", "type": "void",
          "arguments": [
            { "name": "shader", "type": "WebGLShader" },
            { "name": "source", "type": "DOMString" }
          ]
        }, {
          "name": "stencilFunc", "type": "void",
          "arguments": [
            { "name": "func", "type": "GLenum" },
            { "name": "ref", "type": "GLint" },
            { "name": "mask", "type": "GLuint" }
          ]
        }, {
          "name": "stencilFuncSeparate", "type": "void",
          "arguments": [
            { "name": "face", "type": "GLenum" },
            { "name": "func", "type": "GLenum" },
            { "name": "ref", "type": "GLint" },
            { "name": "mask", "type": "GLuint" }
          ]
        }, {
          "name": "stencilMask", "type": "void",
          "arguments": [{ "name": "mask", "type": "GLuint" }]
        }, {
          "name": "stencilMaskSeparate", "type": "void",
          "arguments": [
            { "name": "face", "type": "GLenum" },
            { "name": "mask", "type": "GLuint" }
          ]
        }, {
          "name": "stencilOp", "type": "void",
          "arguments": [
            { "name": "fail", "type": "GLenum" },
            { "name": "zfail", "type": "GLenum" },
            { "name": "zpass", "type": "GLenum" }
          ]
        }, {
          "name": "stencilOpSeparate", "type": "void",
          "arguments": [
            { "name": "face", "type": "GLenum" },
            { "name": "fail", "type": "GLenum" },
            { "name": "zfail", "type": "GLenum" },
            { "name": "zpass", "type": "GLenum" }
          ]
        }, {
          "name": "texImage2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "level", "type": "GLint" },
            { "name": "internalformat", "type": "GLint" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" },
            { "name": "border", "type": "GLint" },
            { "name": "format", "type": "GLenum" },
            { "name": "type", "type": "GLenum" },
            { "name": "pixels", "type": "ArrayBufferView", "nullable": true }
          ]
        }, {
          "name": "texImage2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "level", "type": "GLint" },
            { "name": "internalformat", "type": "GLint" },
            { "name": "format", "type": "GLenum" },
            { "name": "type", "type": "GLenum" },
            { "name": "source", "type": "TexImageSource" }
          ]
        }, {
          "name": "texParameterf", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "pname", "type": "GLenum" },
            { "name": "param", "type": "GLfloat" }
          ]
        }, {
          "name": "texParameteri", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "pname", "type": "GLenum" },
            { "name": "param", "type": "GLint" }
          ]
        }, {
          "name": "texSubImage2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "level", "type": "GLint" },
            { "name": "xoffset", "type": "GLint" },
            { "name": "yoffset", "type": "GLint" },
            { "name": "format", "type": "GLenum" },
            { "name": "type", "type": "GLenum" },
            { "name": "source", "type": "TexImageSource" }
          ]
        }, {
          "name": "texSubImage2D", "type": "void",
          "arguments": [
            { "name": "target", "type": "GLenum" },
            { "name": "level", "type": "GLint" },
            { "name": "xoffset", "type": "GLint" },
            { "name": "yoffset", "type": "GLint" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" },
            { "name": "format", "type": "GLenum" },
            { "name": "type", "type": "GLenum" },
            { "name": "pixels", "type": "ArrayBufferView", "nullable": true }
          ]
        }, {
          "name": "uniform1f", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "x", "type": "GLfloat" }
          ]
        }, {
          "name": "uniform1fv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "v", "type": "Float32List" }
          ]
        }, {
          "name": "uniform1i", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "x", "type": "GLint" }
          ]
        }, {
          "name": "uniform1iv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "v", "type": "Int32List" }
          ]
        }, {
          "name": "uniform2f", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "x", "type": "GLfloat" },
            { "name": "y", "type": "GLfloat" }
          ]
        }, {
          "name": "uniform2fv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "v", "type": "Float32List" }
          ]
        }, {
          "name": "uniform2i", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "x", "type": "GLint" },
            { "name": "y", "type": "GLint" }
          ]
        }, {
          "name": "uniform2iv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "v", "type": "Int32List" }
          ]
        }, {
          "name": "uniform3f", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "x", "type": "GLfloat" },
            { "name": "y", "type": "GLfloat" },
            { "name": "z", "type": "GLfloat" }
          ]
        }, {
          "name": "uniform3fv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "v", "type": "Float32List" }
          ]
        }, {
          "name": "uniform3i", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "x", "type": "GLint" },
            { "name": "y", "type": "GLint" },
            { "name": "z", "type": "GLint" }
          ]
        }, {
          "name": "uniform3iv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "v", "type": "Int32List" }
          ]
        }, {
          "name": "uniform4f", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "x", "type": "GLfloat" },
            { "name": "y", "type": "GLfloat" },
            { "name": "z", "type": "GLfloat" },
            { "name": "w", "type": "GLfloat" }
          ]
        }, {
          "name": "uniform4fv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "v", "type": "Float32List" }
          ]
        }, {
          "name": "uniform4i", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "x", "type": "GLint" },
            { "name": "y", "type": "GLint" },
            { "name": "z", "type": "GLint" },
            { "name": "w", "type": "GLint" }
          ]
        }, {
          "name": "uniform4iv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "v", "type": "Int32List" }
          ]
        }, {
          "name": "uniformMatrix2fv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "transpose", "type": "GLboolean" },
            { "name": "value", "type": "Float32List" }
          ]
        }, {
          "name": "uniformMatrix3fv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "transpose", "type": "GLboolean" },
            { "name": "value", "type": "Float32List" }
          ]
        }, {
          "name": "uniformMatrix4fv", "type": "void",
          "arguments": [
            { "name": "location", "type": "WebGLUniformLocation", "nullable": true },
            { "name": "transpose", "type": "GLboolean" },
            { "name": "value", "type": "Float32List" }
          ]
        }, {
          "name": "useProgram", "type": "void",
          "arguments": [{ "name": "program", "type": "WebGLProgram", "nullable": true }]
        }, {
          "name": "validateProgram", "type": "void",
          "arguments": [{ "name": "program", "type": "WebGLProgram" }]
        }, {
          "name": "vertexAttrib1f", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "x", "type": "GLfloat" }
          ]
        }, {
          "name": "vertexAttrib1fv", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "values", "type": "Float32List" }
          ]
        }, {
          "name": "vertexAttrib2f", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "x", "type": "GLfloat" },
            { "name": "y", "type": "GLfloat" }
          ]
        }, {
          "name": "vertexAttrib2fv", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "values", "type": "Float32List" }
          ]
        }, {
          "name": "vertexAttrib3f", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "x", "type": "GLfloat" },
            { "name": "y", "type": "GLfloat" },
            { "name": "z", "type": "GLfloat" }
          ]
        }, {
          "name": "vertexAttrib3fv", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "values", "type": "Float32List" }
          ]
        }, {
          "name": "vertexAttrib4f", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "x", "type": "GLfloat" },
            { "name": "y", "type": "GLfloat" },
            { "name": "z", "type": "GLfloat" },
            { "name": "w", "type": "GLfloat" }
          ]
        }, {
          "name": "vertexAttrib4fv", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "values", "type": "Float32List" }
          ]
        }, {
          "name": "vertexAttribPointer", "type": "void",
          "arguments": [
            { "name": "index", "type": "GLuint" },
            { "name": "size", "type": "GLint" },
            { "name": "type", "type": "GLenum" },
            { "name": "normalized", "type": "GLboolean" },
            { "name": "stride", "type": "GLsizei" },
            { "name": "offset", "type": "GLintptr" }
          ]
        }, {
          "name": "viewport", "type": "void",
          "arguments": [
            { "name": "x", "type": "GLint" },
            { "name": "y", "type": "GLint" },
            { "name": "width", "type": "GLsizei" },
            { "name": "height", "type": "GLsizei" }
          ]
        }
      ],
      "attributes": [
        { "name": "canvas", "type": "HTMLCanvasElement", "readonly": true },
        { "name": "drawingBufferHeight", "type": "GLsizei", "readonly": true },
        { "name": "drawingBufferWidth", "type": "GLsizei", "readonly": true }
      ]
    },
    { "name": "WebGLShader", "extends": "WebGLObject" },
    {
      "name": "WebGLShaderPrecisionFormat",
      "attributes": [
        { "name": "precision", "type": "GLint", "readonly": true },
        { "name": "rangeMax", "type": "GLint", "readonly": true },
        { "name": "rangeMin", "type": "GLint", "readonly": true }
      ]
    },
    { "name": "WebGLTexture", "extends": "WebGLObject" },
    { "name": "WebGLUniformLocation" },
    {
      "name": "WebSocket", "extends": "EventTarget",
      "constructors": [{
        "arguments": [
          { "name": "url", "type": "USVString" },
          { "name": "protocols", "type": "(DOMString or sequence<DOMString>)", "optional": true, "default": "[]" }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "constants": [
        { "name": "CLOSED", "type": "unsigned short", "value": "3" },
        { "name": "CLOSING", "type": "unsigned short", "value": "2" },
        { "name": "CONNECTING", "type": "unsigned short", "value": "0" },
        { "name": "OPEN", "type": "unsigned short", "value": "1" }
      ],
      "operations": [{
        "name": "close", "type": "void",
        "arguments": [
          { "name": "code", "type": "unsigned short", "optional": true },
          { "name": "reason", "type": "USVString", "optional": true }
        ]
      }, {
        "name": "send", "type": "void",
        "arguments": [{ "name": "data", "type": "USVString" }]
      }, {
        "name": "send", "type": "void",
        "arguments": [{ "name": "data", "type": "Blob" }]
      }, {
        "name": "send", "type": "void",
        "arguments": [{ "name": "data", "type": "ArrayBuffer" }]
      }, {
        "name": "send", "type": "void",
        "arguments": [{ "name": "data", "type": "ArrayBufferView" }]
      }],
      "attributes": [
        { "name": "binaryType", "type": "BinaryType" },
        { "name": "bufferedAmount", "type": "unsigned long long", "readonly": true },
        { "name": "extensions", "type": "DOMString", "readonly": true },
        { "name": "onclose", "type": "EventHandler" },
        { "name": "onerror", "type": "EventHandler" },
        { "name": "onmessage", "type": "EventHandler" },
        { "name": "onopen", "type": "EventHandler" },
        { "name": "protocol", "type": "DOMString", "readonly": true },
        { "name": "readyState", "type": "unsigned short", "readonly": true },
        { "name": "url", "type": "USVString", "readonly": true }
      ]
    }, {
      "name": "WheelEvent", "extends": "MouseEvent",
      "constructors": [{
        "arguments": [
          { "name": "type", "type": "DOMString" },
          { "name": "eventInitDict", "type": "WheelEventInit", "optional": true }
        ]
      }],
      "exposed": ["Window"],
      "constants": [
        { "name": "DOM_DELTA_LINE", "type": "unsigned long", "value": "1" },
        { "name": "DOM_DELTA_PAGE", "type": "unsigned long", "value": "2" },
        { "name": "DOM_DELTA_PIXEL", "type": "unsigned long", "value": "0" }
      ],
      "attributes": [
        { "name": "deltaMode", "type": "unsigned long", "readonly": true },
        { "name": "deltaX", "type": "double", "readonly": true },
        { "name": "deltaY", "type": "double", "readonly": true },
        { "name": "deltaZ", "type": "double", "readonly": true }
      ]
    }, {
      "name": "Window", "extends": "EventTarget", "primaryGlobal": true,
      "anonymousOperations": [{
        "type": "object", "getter": true,
        "arguments": [{ "name": "name", "type": "DOMString" }]
      }],
      "operations": [
        { "name": "alert", "type": "void", "arguments": [] },
        {
          "name": "alert", "type": "void",
          "arguments": [{ "name": "message", "type": "DOMString" }]
        },
        { "name": "blur", "type": "void", "arguments": [] },
        {
          "name": "cancelAnimationFrame", "type": "void",
          "arguments": [{ "name": "handle", "type": "unsigned long" }]
        },
        { "name": "captureEvents", "type": "void", "arguments": [] },
        { "name": "close", "type": "void", "arguments": [] },
        {
          "name": "confirm", "type": "boolean",
          "arguments": [{ "name": "message", "type": "DOMString", "optional": true, "default": "\"\"" }]
        },
        { "name": "focus", "type": "void", "arguments": [] },
        {
          "name": "getComputedStyle", "type": "CSSStyleDeclaration",
          "arguments": [
            { "name": "elt", "type": "Element" },
            { "name": "pseudoElt", "type": "CSSOMString", "nullable": true, "optional": true }
          ]
        },
        { "name": "getSelection", "type": "Selection", "nullable": true, "arguments": [] },
        {
          "name": "matchMedia", "type": "MediaQueryList",
          "arguments": [{ "name": "query", "type": "DOMString" }]
        }, {
          "name": "moveBy", "type": "void",
          "arguments": [
            { "name": "x", "type": "long" },
            { "name": "y", "type": "long" }
          ]
        }, {
          "name": "moveTo", "type": "void",
          "arguments": [
            { "name": "x", "type": "long" },
            { "name": "y", "type": "long" }
          ]
        }, {
          "name": "open", "type": "WindowProxy", "nullable": true,
          "arguments": [
            { "name": "url", "type": "USVString", "optional": true, "default": "\"about:blank\"" },
            { "name": "target", "type": "DOMString", "optional": true, "default": "\"_blank\"" },
            { "name": "features", "type": "DOMString", "optional": true, "default": "\"\"" }
          ]
        }, {
          "name": "postMessage", "type": "void",
          "arguments": [
            { "name": "message", "type": "any" },
            { "name": "targetOrigin", "type": "USVString" },
            { "name": "transfer", "type": "sequence<object>", "optional": true, "default": "[]" }
          ]
        },
        { "name": "print", "type": "void", "arguments": [] },
        {
          "name": "prompt", "type": "DOMString", "nullable": true,
          "arguments": [
            { "name": "message", "type": "DOMString", "optional": true, "default": "\"\"" },
            { "name": "default", "type": "DOMString", "optional": true, "default": "\"\"" }
          ]
        },
        { "name": "releaseEvents", "type": "void", "arguments": [] },
        {
          "name": "requestAnimationFrame", "type": "unsigned long",
          "arguments": [{ "name": "callback", "type": "FrameRequestCallback" }]
        }, {
          "name": "resizeBy", "type": "void",
          "arguments": [
            { "name": "x", "type": "long" },
            { "name": "y", "type": "long" }
          ]
        }, {
          "name": "resizeTo", "type": "void",
          "arguments": [
            { "name": "x", "type": "long" },
            { "name": "y", "type": "long" }
          ]
        }, {
          "name": "scroll", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "scroll", "type": "void",
          "arguments": [{ "name": "options", "type": "ScrollToOptions", "optional": true }]
        }, {
          "name": "scrollBy", "type": "void",
          "arguments": [{ "name": "options", "type": "ScrollToOptions", "optional": true }]
        }, {
          "name": "scrollBy", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        }, {
          "name": "scrollTo", "type": "void",
          "arguments": [{ "name": "options", "type": "ScrollToOptions", "optional": true }]
        }, {
          "name": "scrollTo", "type": "void",
          "arguments": [
            { "name": "x", "type": "unrestricted double" },
            { "name": "y", "type": "unrestricted double" }
          ]
        },
        { "name": "stop", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "applicationCache", "type": "ApplicationCache", "readonly": true },
        { "name": "closed", "type": "boolean", "readonly": true },
        { "name": "customElements", "type": "CustomElementRegistry", "readonly": true },
        { "name": "devicePixelRatio", "type": "double", "readonly": true },
        { "name": "document", "type": "Document", "readonly": true },
        { "name": "external", "type": "External", "readonly": true },
        { "name": "frameElement", "type": "Element", "nullable": true, "readonly": true },
        { "name": "frames", "type": "WindowProxy", "readonly": true },
        { "name": "history", "type": "History", "readonly": true },
        { "name": "innerHeight", "type": "long", "readonly": true },
        { "name": "innerWidth", "type": "long", "readonly": true },
        { "name": "length", "type": "unsigned long", "readonly": true },
        { "name": "location", "type": "Location", "readonly": true },
        { "name": "locationbar", "type": "BarProp", "readonly": true },
        { "name": "menubar", "type": "BarProp", "readonly": true },
        { "name": "name", "type": "DOMString" },
        { "name": "navigator", "type": "Navigator", "readonly": true },
        { "name": "ondevicemotion", "type": "EventHandler" },
        { "name": "ondeviceorientation", "type": "EventHandler" },
        { "name": "opener", "type": "any" },
        { "name": "outerHeight", "type": "long", "readonly": true },
        { "name": "outerWidth", "type": "long", "readonly": true },
        { "name": "pageXOffset", "type": "double", "readonly": true },
        { "name": "pageYOffset", "type": "double", "readonly": true },
        { "name": "parent", "type": "WindowProxy", "nullable": true, "readonly": true },
        { "name": "personalbar", "type": "BarProp", "readonly": true },
        { "name": "screen", "type": "Screen", "readonly": true },
        { "name": "screenX", "type": "long", "readonly": true },
        { "name": "screenY", "type": "long", "readonly": true },
        { "name": "scrollbars", "type": "BarProp", "readonly": true },
        { "name": "scrollX", "type": "double", "readonly": true },
        { "name": "scrollY", "type": "double", "readonly": true },
        { "name": "self", "type": "WindowProxy", "readonly": true },
        { "name": "status", "type": "DOMString" },
        { "name": "statusbar", "type": "BarProp", "readonly": true },
        { "name": "toolbar", "type": "BarProp", "readonly": true },
        { "name": "top", "type": "WindowProxy", "nullable": true, "readonly": true },
        { "name": "window", "type": "WindowProxy", "readonly": true }
      ],
      "implements": ["GlobalEventHandlers", "WindowEventHandlers", "WindowOrWorkerGlobalScope", "WindowSessionStorage", "WindowLocalStorage", "GlobalCrypto", "SpeechSynthesisGetter"]
    }, {
      "name": "WindowClient", "extends": "Client",
      "exposed": ["ServiceWorker"],
      "operations": [
        { "name": "focus", "type": "Promise<WindowClient>", "arguments": [] },
        {
          "name": "navigate", "type": "Promise<WindowClient>",
          "arguments": [{ "name": "url", "type": "USVString" }]
        }
      ],
      "attributes": [
        { "name": "ancestorOrigins", "type": "FrozenArray<USVString>", "readonly": true },
        { "name": "focused", "type": "boolean", "readonly": true },
        { "name": "visibilityState", "type": "VisibilityState", "readonly": true }
      ]
    }, {
      "name": "WindowEventHandlers", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [
        { "name": "onafterprint", "type": "EventHandler", "eventHandler": "afterprint" },
        { "name": "onbeforeprint", "type": "EventHandler", "eventHandler": "beforeprint" },
        { "name": "onbeforeunload", "type": "OnBeforeUnloadEventHandler", "eventHandler": "beforeunload" },
        { "name": "onhashchange", "type": "EventHandler", "eventHandler": "hashchange" },
        { "name": "onlanguagechange", "type": "EventHandler", "eventHandler": "languagechange" },
        { "name": "onmessage", "type": "EventHandler", "eventHandler": "message" },
        { "name": "onmessageerror", "type": "EventHandler", "eventHandler": "messageerror" },
        { "name": "onoffline", "type": "EventHandler", "eventHandler": "offline" },
        { "name": "ononline", "type": "EventHandler", "eventHandler": "online" },
        { "name": "onpagehide", "type": "EventHandler", "eventHandler": "pagehide" },
        { "name": "onpageshow", "type": "EventHandler", "eventHandler": "pageshow" },
        { "name": "onpopstate", "type": "EventHandler", "eventHandler": "popstate" },
        { "name": "onrejectionhandled", "type": "EventHandler", "eventHandler": "rejectionhandled" },
        { "name": "onstorage", "type": "EventHandler", "eventHandler": "storage" },
        { "name": "onunhandledrejection", "type": "EventHandler", "eventHandler": "unhandledrejection" },
        { "name": "onunload", "type": "EventHandler", "eventHandler": "unload" }
      ],
      "events": [
        { "name": "afterprint", "type": "Event" },
        { "name": "beforeprint", "type": "Event" },
        { "name": "beforeunload", "type": "BeforeUnloadEvent" },
        { "name": "hashchange", "type": "HashChangeEvent" },
        { "name": "languagechange", "type": "Event" },
        { "name": "message", "type": "MessageEvent" },
        { "name": "messageerror", "type": "MessageEvent" },
        { "name": "offline", "type": "Event" },
        { "name": "online", "type": "Event" },
        { "name": "pagehide", "type": "PageTransitionEvent" },
        { "name": "pageshow", "type": "PageTransitionEvent" },
        { "name": "popstate", "type": "PopStateEvent" },
        { "name": "rejectionhandled", "type": "PromiseRejectionEvent" },
        { "name": "storage", "type": "StorageEvent" },
        { "name": "unhandledrejection", "type": "PromiseRejectionEvent" },
        { "name": "unload", "type": "Event" }
      ]
    }, {
      "name": "WindowLocalStorage", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [{ "name": "localStorage", "type": "Storage", "readonly": true }]
    }, {
      "name": "WindowOrWorkerGlobalScope", "noInterfaceObject": true,
      "exposed": ["Window", "Worker"],
      "operations": [{
        "name": "atob", "type": "ByteString",
        "arguments": [{ "name": "data", "type": "DOMString" }]
      }, {
        "name": "btoa", "type": "DOMString",
        "arguments": [{ "name": "data", "type": "DOMString" }]
      }, {
        "name": "clearInterval", "type": "void",
        "arguments": [{ "name": "handle", "type": "long", "optional": true, "default": "0" }]
      }, {
        "name": "clearTimeout", "type": "void",
        "arguments": [{ "name": "handle", "type": "long", "optional": true, "default": "0" }]
      }, {
        "name": "createImageBitmap", "type": "Promise<ImageBitmap>",
        "arguments": [
          { "name": "image", "type": "ImageBitmapSource" },
          { "name": "options", "type": "ImageBitmapOptions", "optional": true }
        ]
      }, {
        "name": "createImageBitmap", "type": "Promise<ImageBitmap>",
        "arguments": [
          { "name": "image", "type": "ImageBitmapSource" },
          { "name": "sx", "type": "long" },
          { "name": "sy", "type": "long" },
          { "name": "sw", "type": "long" },
          { "name": "sh", "type": "long" },
          { "name": "options", "type": "ImageBitmapOptions", "optional": true }
        ]
      }, {
        "name": "fetch", "type": "Promise<Response>",
        "arguments": [
          { "name": "input", "type": "RequestInfo" },
          { "name": "init", "type": "RequestInit", "optional": true }
        ]
      }, {
        "name": "setInterval", "type": "long",
        "arguments": [
          { "name": "handler", "type": "TimerHandler" },
          { "name": "timeout", "type": "long", "optional": true, "default": "0" },
          { "name": "arguments", "type": "any", "variadic": true }
        ]
      }, {
        "name": "setTimeout", "type": "long",
        "arguments": [
          { "name": "handler", "type": "TimerHandler" },
          { "name": "timeout", "type": "long", "optional": true, "default": "0" },
          { "name": "arguments", "type": "any", "variadic": true }
        ]
      }],
      "attributes": [
        { "name": "caches", "type": "CacheStorage", "readonly": true },
        { "name": "indexedDB", "type": "IDBFactory", "readonly": true },
        { "name": "origin", "type": "USVString", "readonly": true },
        { "name": "performance", "type": "Performance", "readonly": true }
      ]
    }, {
      "name": "WindowSessionStorage", "noInterfaceObject": true,
      "exposed": ["Window"],
      "attributes": [{ "name": "sessionStorage", "type": "Storage", "readonly": true }]
    }, {
      "name": "Worker", "extends": "EventTarget",
      "constructors": [{
        "arguments": [
          { "name": "scriptURL", "type": "USVString" },
          { "name": "options", "type": "WorkerOptions", "optional": true }
        ]
      }],
      "exposed": ["Window", "Worker"],
      "operations": [
        {
          "name": "postMessage", "type": "void",
          "arguments": [
            { "name": "message", "type": "any" },
            { "name": "transfer", "type": "sequence<object>", "optional": true, "default": "[]" }
          ]
        },
        { "name": "terminate", "type": "void", "arguments": [] }
      ],
      "attributes": [
        { "name": "onmessage", "type": "EventHandler" },
        { "name": "onmessageerror", "type": "EventHandler", "eventHandler": "messageerror" }
      ],
      "implements": ["AbstractWorker"],
      "events": [{ "name": "messageerror", "type": "MessageEvent" }]
    }, {
      "name": "WorkerGlobalScope", "extends": "EventTarget",
      "exposed": ["Worker"],
      "operations": [{
        "name": "importScripts", "type": "void",
        "arguments": [{ "name": "urls", "type": "USVString", "variadic": true }]
      }],
      "attributes": [
        { "name": "location", "type": "WorkerLocation", "readonly": true },
        { "name": "navigator", "type": "WorkerNavigator", "readonly": true },
        { "name": "onerror", "type": "OnErrorEventHandler", "eventHandler": "error" },
        { "name": "onlanguagechange", "type": "EventHandler", "eventHandler": "languagechange" },
        { "name": "onoffline", "type": "EventHandler", "eventHandler": "offline" },
        { "name": "ononline", "type": "EventHandler", "eventHandler": "online" },
        { "name": "onrejectionhandled", "type": "EventHandler", "eventHandler": "rejectionhandled" },
        { "name": "onunhandledrejection", "type": "EventHandler", "eventHandler": "unhandledrejection" },
        { "name": "self", "type": "WorkerGlobalScope", "readonly": true }
      ],
      "implements": ["WindowOrWorkerGlobalScope", "GlobalCrypto"],
      "events": [
        { "name": "error", "type": "ErrorEvent" },
        { "name": "languagechange", "type": "Event" },
        { "name": "offline", "type": "Event" },
        { "name": "online", "type": "Event" },
        { "name": "rejectionhandled", "type": "PromiseRejectionEvent" },
        { "name": "unhandledrejection", "type": "PromiseRejectionEvent" }
      ]
    }, {
      "name": "WorkerLocation",
      "exposed": ["Worker"],
      "attributes": [
        { "name": "hash", "type": "USVString", "readonly": true },
        { "name": "host", "type": "USVString", "readonly": true },
        { "name": "hostname", "type": "USVString", "readonly": true },
        { "name": "href", "type": "USVString", "readonly": true, "stringifier": true },
        { "name": "origin", "type": "USVString", "readonly": true },
        { "name": "pathname", "type": "USVString", "readonly": true },
        { "name": "port", "type": "USVString", "readonly": true },
        { "name": "protocol", "type": "USVString", "readonly": true },
        { "name": "search", "type": "USVString", "readonly": true }
      ]
    }, {
      "name": "WorkerNavigator",
      "exposed": ["Worker"],
      "implements": ["NavigatorID", "NavigatorLanguage", "NavigatorOnLine", "NavigatorConcurrentHardware"],
      "attributes": [{ "name": "serviceWorker", "type": "ServiceWorkerContainer", "readonly": true }]
    }, {
      "name": "Worklet",
      "operations": [{
        "name": "addModule", "type": "Promise<void>",
        "arguments": [
          { "name": "moduleURL", "type": "USVString" },
          { "name": "options", "type": "WorkletOptions", "optional": true }
        ]
      }]
    }, {
      "name": "WorkletGlobalScope",
      "exposed": ["Worklet"]
    }, {
      "name": "XMLDocument", "extends": "Document",
      "exposed": ["Window"]
    }, {
      "name": "XMLHttpRequest", "extends": "XMLHttpRequestEventTarget",
      "constructors": [{ "arguments": [] }],
      "exposed": ["Window", "DedicatedWorker", "SharedWorker"],
      "constants": [
        { "name": "DONE", "type": "unsigned short", "value": "4" },
        { "name": "HEADERS_RECEIVED", "type": "unsigned short", "value": "2" },
        { "name": "LOADING", "type": "unsigned short", "value": "3" },
        { "name": "OPENED", "type": "unsigned short", "value": "1" },
        { "name": "UNSENT", "type": "unsigned short", "value": "0" }
      ],
      "operations": [
        { "name": "abort", "type": "void", "arguments": [] },
        { "name": "getAllResponseHeaders", "type": "ByteString", "arguments": [] },
        {
          "name": "getResponseHeader", "type": "ByteString", "nullable": true,
          "arguments": [{ "name": "name", "type": "ByteString" }]
        }, {
          "name": "open", "type": "void",
          "arguments": [
            { "name": "method", "type": "ByteString" },
            { "name": "url", "type": "USVString" }
          ]
        }, {
          "name": "open", "type": "void",
          "arguments": [
            { "name": "method", "type": "ByteString" },
            { "name": "url", "type": "USVString" },
            { "name": "async", "type": "boolean" },
            { "name": "username", "type": "USVString", "nullable": true, "optional": true, "default": "null" },
            { "name": "password", "type": "USVString", "nullable": true, "optional": true, "default": "null" }
          ]
        }, {
          "name": "overrideMimeType", "type": "void",
          "arguments": [{ "name": "mime", "type": "DOMString" }]
        }, {
          "name": "send", "type": "void",
          "arguments": [{ "name": "body", "type": "(Document or BodyInit)", "nullable": true, "optional": true, "default": "null" }]
        }, {
          "name": "setRequestHeader", "type": "void",
          "arguments": [
            { "name": "name", "type": "ByteString" },
            { "name": "value", "type": "ByteString" }
          ]
        }
      ],
      "attributes": [
        { "name": "onreadystatechange", "type": "EventHandler" },
        { "name": "readyState", "type": "unsigned short", "readonly": true },
        { "name": "response", "type": "any", "readonly": true },
        { "name": "responseText", "type": "USVString", "readonly": true },
        { "name": "responseType", "type": "XMLHttpRequestResponseType" },
        { "name": "responseURL", "type": "USVString", "readonly": true },
        {
          "name": "responseXML", "type": "Document", "nullable": true, "readonly": true,
          "exposed": ["Window"]
        },
        { "name": "status", "type": "unsigned short", "readonly": true },
        { "name": "statusText", "type": "ByteString", "readonly": true },
        { "name": "timeout", "type": "unsigned long" },
        { "name": "upload", "type": "XMLHttpRequestUpload", "readonly": true },
        { "name": "withCredentials", "type": "boolean" }
      ]
    }, {
      "name": "XMLHttpRequestEventTarget", "extends": "EventTarget",
      "exposed": ["Window", "DedicatedWorker", "SharedWorker"],
      "attributes": [
        { "name": "onabort", "type": "EventHandler" },
        { "name": "onerror", "type": "EventHandler" },
        { "name": "onload", "type": "EventHandler" },
        { "name": "onloadend", "type": "EventHandler" },
        { "name": "onloadstart", "type": "EventHandler" },
        { "name": "onprogress", "type": "EventHandler" },
        { "name": "ontimeout", "type": "EventHandler" }
      ]
    }, {
      "name": "XMLHttpRequestUpload", "extends": "XMLHttpRequestEventTarget",
      "exposed": ["Window", "DedicatedWorker", "SharedWorker"]
    }, {
      "name": "XMLSerializer",
      "constructors": [{ "arguments": [] }],
      "operations": [{
        "name": "serializeToString", "type": "DOMString",
        "arguments": [{ "name": "root", "type": "Node" }]
      }]
    }
  ],
  "typedefs": [
    { "name": "AlgorithmIdentifier", "type": "(object or DOMString)" },
    { "name": "ArrayBufferView", "type": "(Int8Array or Int16Array or Int32Array or Uint8Array or Uint16Array or Uint32Array or Uint8ClampedArray or Float32Array or Float64Array or DataView)" },
    { "name": "BigInteger", "type": "Uint8Array" },
    { "name": "BlobPart", "type": "(BufferSource or Blob or USVString)" },
    { "name": "BodyInit", "type": "(Blob or BufferSource or FormData or URLSearchParams or ReadableStream or USVString)" },
    { "name": "BufferSource", "type": "(ArrayBufferView or ArrayBuffer)" },
    { "name": "CanvasImageSource", "type": "(HTMLOrSVGImageElement or HTMLVideoElement or HTMLCanvasElement or ImageBitmap or OffscreenCanvas)" },
    { "name": "ConstrainBoolean", "type": "(boolean or ConstrainBooleanParameters)" },
    { "name": "ConstrainDOMString", "type": "(DOMString or sequence<DOMString> or ConstrainDOMStringParameters)" },
    { "name": "ConstrainDouble", "type": "(double or ConstrainDoubleRange)" },
    { "name": "ConstrainLong", "type": "(long or ConstrainLongRange)" },
    { "name": "CSSOMString", "type": "USVString" },
    { "name": "DOMHighResTimeStamp", "type": "double" },
    { "name": "DOMTimeStamp", "type": "unsigned long long" },
    { "name": "EventHandler", "type": "EventHandlerNonNull", "nullable": true },
    { "name": "Float32List", "type": "(Float32Array or sequence<GLfloat>)" },
    { "name": "FormDataEntryValue", "type": "(File or USVString)" },
    { "name": "GeometryNode", "type": "(Text or Element or CSSPseudoElement or Document)" },
    { "name": "GLbitfield", "type": "unsigned long" },
    { "name": "GLboolean", "type": "boolean" },
    { "name": "GLbyte", "type": "byte" },
    { "name": "GLclampf", "type": "unrestricted float" },
    { "name": "GLenum", "type": "unsigned long" },
    { "name": "GLfloat", "type": "unrestricted float" },
    { "name": "GLint", "type": "long" },
    { "name": "GLintptr", "type": "long long" },
    { "name": "GLshort", "type": "short" },
    { "name": "GLsizei", "type": "long" },
    { "name": "GLsizeiptr", "type": "long long" },
    { "name": "GLubyte", "type": "octet" },
    { "name": "GLuint", "type": "unsigned long" },
    { "name": "GLushort", "type": "unsigned short" },
    { "name": "HashAlgorithmIdentifier", "type": "AlgorithmIdentifier" },
    { "name": "HeadersInit", "type": "(sequence<sequence<ByteString>> or record<ByteString, ByteString>)" },
    { "name": "HTMLOrSVGImageElement", "type": "(HTMLImageElement or SVGImageElement)" },
    { "name": "HTMLOrSVGScriptElement", "type": "(HTMLScriptElement or SVGScriptElement)" },
    { "name": "ImageBitmapSource", "type": "(CanvasImageSource or Blob or ImageData)" },
    { "name": "Int32List", "type": "(Int32Array or sequence<GLint>)" },
    { "name": "MediaProvider", "type": "(MediaStream or MediaSource or Blob)" },
    { "name": "MediaStreamError", "type": "object" },
    { "name": "MessageEventSource", "type": "(WindowProxy or MessagePort or ServiceWorker)" },
    { "name": "NamedCurve", "type": "DOMString" },
    { "name": "OffscreenRenderingContext", "type": "(OffscreenCanvasRenderingContext2D or WebGLRenderingContext)" },
    { "name": "OnBeforeUnloadEventHandler", "type": "OnBeforeUnloadEventHandlerNonNull", "nullable": true },
    { "name": "OnErrorEventHandler", "type": "OnErrorEventHandlerNonNull", "nullable": true },
    { "name": "PerformanceEntryList", "type": "sequence<PerformanceEntry>" },
    { "name": "PushMessageDataInit", "type": "(BufferSource or USVString)" },
    { "name": "RenderingContext", "type": "(CanvasRenderingContext2D or WebGLRenderingContext)" },
    { "name": "RequestInfo", "type": "(Request or USVString)" },
    { "name": "TexImageSource", "type": "(ImageBitmap or ImageData or HTMLImageElement or HTMLCanvasElement or HTMLVideoElement)" },
    { "name": "TimerHandler", "type": "(DOMString or Function)" }
  ],
  "namespaces": [{
    "name": "console",
    "exposed": ["Window", "Worker", "Worklet"],
    "operations": [
      {
        "name": "assert", "type": "void",
        "arguments": [
          { "name": "condition", "type": "boolean", "optional": true, "default": "false" },
          { "name": "data", "type": "any", "variadic": true }
        ]
      },
      { "name": "clear", "type": "void", "arguments": [] },
      {
        "name": "count", "type": "void",
        "arguments": [{ "name": "label", "type": "DOMString", "optional": true, "default": "\"default\"" }]
      }, {
        "name": "debug", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      }, {
        "name": "dir", "type": "void",
        "arguments": [
          { "name": "item", "type": "any" },
          { "name": "options", "type": "object", "nullable": true, "optional": true }
        ]
      }, {
        "name": "dirxml", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      }, {
        "name": "error", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      }, {
        "name": "group", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      }, {
        "name": "groupCollapsed", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      },
      { "name": "groupEnd", "type": "void", "arguments": [] },
      {
        "name": "info", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      }, {
        "name": "log", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      }, {
        "name": "table", "type": "void",
        "arguments": [
          { "name": "tabularData", "type": "any" },
          { "name": "properties", "type": "sequence<DOMString>", "optional": true }
        ]
      }, {
        "name": "time", "type": "void",
        "arguments": [{ "name": "label", "type": "DOMString", "optional": true, "default": "\"default\"" }]
      }, {
        "name": "timeEnd", "type": "void",
        "arguments": [{ "name": "label", "type": "DOMString", "optional": true, "default": "\"default\"" }]
      }, {
        "name": "trace", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      }, {
        "name": "warn", "type": "void",
        "arguments": [{ "name": "data", "type": "any", "variadic": true }]
      }
    ]
  }]
}